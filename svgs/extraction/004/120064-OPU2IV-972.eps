%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Flat Money Bag-3 up-02-01.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 12/05/17
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Flat Money Bag-3 up-02</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2017-05-12T16:40:26+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-05-12T16:40:26+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2017-05-12T16:40:26+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBIAEgAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABIAAAAAEA&#xA;AQEgAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9PYEuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KsL82+Yta0zWUjtpQtuYldYyqsDUkGpIr27HNNr9XlxZKidqbYRBC3T/zIh+zqNvwI&#xA;6ywmo+lGO3344u1h/GPkpx9ycDzx5ZMXqLd8h/KEev3cczf5Qw1fEw4Cl1z+Y1ghIt7WSb3YiMf8&#xA;bH8Mxp9rQHIEshjKceWdfGuac14IPq/GVouHLn9kA1rRfHwzN0uo8WPFVMZRopvmQxdirsVdirsV&#xA;dirsVdirGr/8w/KtjePaTXTGWIlZCkbsoYduQG/0Zjy1UAatzYdn5pRsBD2v5o+Up53iaaW3Vfsy&#xA;yxkI3y48j94GRjrMZLOXZmYC6tqH80fKEk7RNPLEq/ZmeJuDfLjyb7wMRrMdqey8wF19rTfmp5RE&#xA;/piWZkrT1hE3D50NG/4XH85jtI7LzVdD5sos721vbaO6tJVmt5RyjkU1BGZMZAiw4E4GJoiir4WL&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVYt5+0s3OmpeRislofip3jbY/caHNZ2pg4ocQ5x+5njO7&#xA;zoqp6gHOdb28VUriURxM3fovzOEK9V8k2BsvLFjGwpJInrP85TzH/CkDOq0WPhxD5uPM2U9zKYux&#xA;V2KuxV2KuxV2KuxV4Jq9qI72eKZfiR2VvEENQ/iM5eRMZEeb6HjEZwB8kE9pCycVXiezDc4jIUnT&#xA;x6LYrGJd3PM9h0GJyHoxjpx1XLaQKa0r33OA5CyGCIeifk9PcyW2qozE2yyxtCp6BmDc6fQFzbdm&#xA;k0R0ea7ejESiRzNvRM2boHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqtkjSSNo3UMjgqynoQdiMBA&#xA;Ioq8v1TyzcWl/NAjr6StWIsTUodxWgzj9WI4chgS5mOBkLQT6Per9ng/yNP1gZi+PDvZ+DJQtPLt&#xA;/f6ra20rRhJZAGRX+IID8Zp12UHMnTGOSYiOrGcDEW9lVVVQqiiqKADoAM7IBwm8VdirsVdirsVd&#xA;irsVdiryf8xdJ+p60Z1WkN6DItOnL/dg+fL4vpzQ6/Fw5L6Sey7F1HHh4esdv1fjyYpGSV36jY5h&#xA;F24XMVAFSBtv9+BKFubpAhVDVjtUdhhAYyk9k/LrR20zyvb+oOM92Tcyg9RzA4D/AIADOg0WPhxj&#xA;z3eI7Vz+JmNco7fj4snzLdc7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUPfXtvY2kl1cNxiiFWPc+&#xA;AHuchlyCETI8goFvKdV1691O/lumcxxn4Y41JACjtt1zk9Tl8WfEQ5UbApLXlkk9T42qopUMa1pX&#xA;KaTZR9nHPFpwuOVZI2JRySTUcQQT/ssxpj94G+MvQzPRdYvDYx3i3BuIFIS5hepeM/MknpuDm3x6&#xA;nNhiMnFx47qQPMNPDGe1UWWggio6HOnDht4q7FXYq7FXYq7FXYqw/wDMTUdGSwjtbhhJfBxJDAoD&#xA;MBShJ8BTxzV9qSBhQPqt3PY+HKZmUdo8redvf2VDW1Xiq1b4QP1HNEIz73ovAyfzvtK36xpMqBjZ&#xA;gEio+Ef1x4Z96Rp5/wA5XS0sFaOVrWMwhgSpGxWoNC3YHpXKY5ZCXe4x4zYBNvXNL17TL+3RopFi&#xA;egDQOQGU+FO4+WdZp9bjyxsGj3PK59LPGdx8UyDBhVSCPEZlg241N4q7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FWsVeY+dvMbaleiytX/ANFhJ4kdGYbNJ/Bc5vtDVeJKh9I+1vhGkgACqANgBmuZrIVIjFft&#xA;N8TfM74SqNsZmEnoHeGchZE7b7A/MZVlG19Qzgd670Tb3U2lXksYYmCQcZVH7SdR9IyWPIZQI6SG&#xA;6kcMmf6ZrM/1OH1LWWaMovpTwjmrqR8J7D8c3Wk1+WEBHJjma6xF21zxRJsEJ2pJUEgqSK8TSo9t&#xA;s3gNhxm8KuxV2KuxV2KsY85ebl0iIWlpR9SmHwjYiNT+0w8fAZhazV+GKH1fc7bszs3xjxS/ux9r&#xA;yq4lklmeSWQyzSGssrEksfmc0JJJsvY44CI2FBRuBS1IH2pP1dB+s4BzSXKAFAHQCmLJMtKuA5+q&#xA;SCvqbRH3P7J9jlGXH1HNw9Vjr1josmv20+Qq6erCKFVrQgHwO/TBHGJi2JxjJHiGxZ/5e9K0s4NY&#xA;0+7Nzpc3w3kZHFo67VKgtuh6+3tm30+E6cDJGXFjP1eXn8HnNUTORxzjUxy8/wC1masrKGUhlYVB&#xA;G4IOb0G3TEU3irsVdirsVdirsVdirsVdirsVdirF/Pev/o7TvqsTUuboEbdVj6Gnu3QZre0tTwR4&#xA;R9UvuZ442Xm0SEAs3223b+mc63om2tbi5lEUEZkc9h4e/hkoQMjQFoJTU+WL76iriJvrfqUaPmnH&#xA;06devWvvmX+RnwXXqvy5I4kqmguLabhKjRSrvQ7H5jMOcDE0QyBWzTSTNzkPJqAV+WVxiBySSTzZ&#xA;N+W3mLhPLodw/wAJZnsiexBJdP8AjYfTm97M1P8AAfg05I9XombpqdirsVdirsVSzzHrkGi6VLey&#xA;0Zh8MMf88h+yP4n2ynPmGONuVo9Kc+QRHLr7ni095c3U8t5cuZLq4JZ2PYHObnIyNl7vFiEIiIFA&#xA;KWRbVysOQLCtBsP1YoIW4pXwuUmjcGhVgQfChwHkxmLBDev3EUzu0W6bAHp+1XIYYkDdowQMYUUZ&#xA;5D80DR9RNtdnlpV9+7ukb7K12En0dG9s2GlzcBo/TLm4HaOj8WFx+uPL9T06x0nWdN1GJbacz6Qz&#xA;GsTMKopB/m8D/L1zKw6XNhyDhN4u7u/Hk89l1GLJA8QrJ+PxuyPNs652KuxV2KuxV2KuxV2KuxV2&#xA;KrZJEjjaRzxRAWZj2AFScBIAsq8d1nUpNW1ee+evp8uMCnso2H3D8a5yepzHJMycmIoIbMdKf6bI&#xA;1n5curuHaeRwgcdQNh/E5sMJ4MJkOdsDuVB7m4/w/HL6r+p9aPx8jy+xXrlZnLwQb34k1u1qV9De&#xA;aRavJIGvomKOP2im+5+4Y5sonjiSfWFAopRmGySuO6mtr4XUDcZYpPUjbwKtUZbCRiQRzC0900bU&#xA;4tU0u2v4tlnQEr/Kw2ZfoYEZ1eHKMkBIdXGIoo3LUOxV2KuxV5L+YetHUdcNnG1bXT6pQdDL+2fo&#xA;6fRmi1+binXQPY9jaTw8XEfqlv8ADp+tjGYDuXYqidP0281C49C1j5v1Y9Ao8Scsx45TNBo1Gphh&#xA;jxTNBOz5KmDekb+3Fx/vqprX9f4Zk/kjy4hbrP5ajV8EuHvY/cwPb3EsDkF4mKMVNRVTQ0OYko0a&#xA;dvjyCcRIciLQV81IgPE/qwBM+SAwtT2n8svMB1PQRazNyutPpExJ3MZH7tvuHH6M3uhzcUKPMPI9&#xA;r6bw8vEPplv8erMMzXVOxV2KuxV2KuxV2KuxV2KuxVjfnzUGtdDaGM0lu2EQI7J1c/cKfTmv7Ty8&#xA;OKv5zPGN3moAUADYDpnNN7eKptpGp2sVvNY3qlrWY15L1U/5gZl6fPERMJ/SWJCZNpmmz6QsNveq&#xA;sPrF45JRSrFacN+O+ZRwwljqMtr6/cxs2kepaVdae4EwDI/2JF3U5gZsEsZ3Zg2gJX9ONn8Bt88q&#xA;CUnyaXo35U6oSl3pbn7NLiEexor/AI8c3PZWXnD4tOUdXoWbhqdirsVQWs6gunaVdXp/3RGzqD3a&#xA;nwj6WpleWfBEy7m/TYfEyRh3l4WWd2Z3JZ3JZ2PUk7nOYJt9CiKFOwJVLeCW4nSCFeUsjBUWoFSe&#xA;m52wxiSaDHJkEImUuQZxa6TqmneW2gsof9ydwf3xDICtf8okDZdtj1zaxxThiqI9ReVy6vFm1PFM&#xA;/uo8ue/4LGpPKnmFVeSS12ALOxkjPTcn7WYR0uTnX3O7j2rpiQBL7D+pKCSTU9cxnYoC+esgX+Uf&#xA;ickGuZQ2LBln5ZaqbHzTDExpDeqbdx7n4k+nkoH05maHJw5B57Os7Xw8eAnrHd7bm+ePdirsVdir&#xA;sVdirsVdirsVdirz38w7z1NUgtQfht46kf5UhqfwAzn+1slzEe4fe3YxsxTNU2OxVGtpp/RK6gsn&#xA;KsnpvHx+z135V+XbLzh/d8d9UXvSu/8Ayjcf/MUf+IZM/wBwP636EdUVcF28qQmbciWkRPWgJH6q&#xA;5bMk6cX3o6sSv56kRL0G7fPMKIZoPJJT7yNfGz80WTVosz+g48fVHEf8NTMvRT4co89vmwmNntWd&#xA;M47sVdirFPzKuDF5a9MHa4njjb5Csn/GmYPaMqx+8u47DhxZ77ok/o/S8pzQvZOxVUt2hWZGmQyR&#xA;BgXjB4kjuK9sMSL3Y5BIxIiaLNtTm0yby1Z3b2jzWsfFUhWQqUABTdh1oRTNplMTiBqw8vpoZY6q&#xA;cBICZveufX9rG3vvLpRgmmyKxB4t67Gh7HpmEZ4/5v2u6jg1N75B/pUndwiFj0GY7sCUrZizFj1J&#xA;qck0rcUK9jdNaX1vdJs0EqSqR4owYfqyUZUQWGSHFEx7w+kc6h8/bxV2KuxV2KuxV2KuxV2KuxV5&#xA;P5pnM3mC+eteMnD/AJFgJ/xrnKa6V5pe9yIckqzFZOxVMNM1d7JJIXiWe2l+3C2wr4jY5kYdQYAg&#xA;i4nogi00bUtC/Rqn6qCnrEi15/EG4/bpXp2zKObFwfT15Wxo2kGveYXugkKIsUcQpHEm4X59N8xs&#xA;2c5K2qI6MhGmPkkmp65UydiqpbTNBcRTr9qJ1dfmprhiaNq+glZWUMpqrCoPsc7AG3EXYq7FWGfm&#xA;jGx0S2cdFuQD9KP/AEzXdpj0D3u97AP76Q/o/pDzHNI9a7FXYqnmgeYY7OGSxvo/X0+atV6lSetA&#xA;eoOZWDUCI4ZbxLqtf2eckhkxnhyBFNZ+R+XrC9mCdfQAbr4bpX8fpywwwc7LQM2vrh4I33/gsQ1e&#xA;5tZbyVbIMtoHJiDdadu56ZiyqzXJ2mMz4AJ/V1QGRS7FWwCSABUnYAYVfSsKGOGNDuUUKT8hTOoA&#xA;oPnsjZtfhQ7FXYq7FXYq7FXYq7FXYq8g10Ea3qFf+WmX/iZzkdV/ey/rH73JjyQOUJdiqnJcQx/a&#xA;YV8BucNKg5792+GMcR498ICUJkldirsVdir6BsldbK3V93WNA3zCiudfjHpHucQq+SV2KpP5s0p9&#xA;T0G6toxynAEkI7l0NQB/rdMx9Vi48ZA5ub2dqBizRkeXI/F4sQQaHYjqM5t712KuxVokAVJoB3xV&#xA;BXN3yqkf2e7eOSAa5SQuLB2KuxVPfJOiyat5jtIAtYYnE9yewjjIJr/rGi/TmRpcXHMBw+0NQMWE&#xA;nqdg98zoniHYq7FXYq7FXYq7FXYq7FVKe4jgUM9d+gGAmlp5f530K9fVZdTsIneG4o0qpuyuBQmg&#xA;3oaVzQ67TEzMoiwW+EtqYi01yhKs7Bh1BrX8c1tNixpZW+05PzJxpVuKuxV2KuxV2Kp75d8tXt7f&#xA;QyTwPHYoweV3BXkoNSq1616Zl6bSynIWPSxlKnslvdxzkhQQwFSDnSCVuMQr5JXYq0zcVLdaCtB1&#xA;xV515t8qi9uJL7Sowk7nlNbswVXP8ymlFY967ZqdVpOI8Ueb0HZ3a/hgQybx6HuYDefW7KT0ru1k&#xA;gfwcUr8vHNZLGY83o8eohMXE2hWv2/ZQD575GmzjQ8kskhq7V9u2FgTazFDsVdiqb6R5W1nVGX0I&#xA;CkJ63EoKpT2J+19GXY8Ep8g4eo1+LFzO/cOb1/yXoOn6LZNb26l7l6Nc3LdXI7DwA7DN1pcMYChz&#xA;eU1uslnlZ5dAyPMpw3Yq7FXYq7FXYq7FXYq7FWiARQio8Diqk1nbN1jH0bfqwcIW0NcaHplwKTwL&#xA;IOlHAb/iVchLDGXMJ4il8vkXyxKatZqP9T4P+I0yg6HEeieMoVvy28rt0hdflI/8ScgezsXcnxCp&#xA;H8sfLRNf3w9g/wDZkf5MxeafEKov5a+VwamKRh4GRqfgRhHZuLuR4hREXkHyvHSloDT+Zi3/ABKu&#xA;TGgxDoviFMLby9pFtvBbJER3RVX/AIiBl0cEI8gx4ii1srVekY+mp/XlnCEWqqqqKKAB4DbJKuxV&#xA;2KuxVTeCF/toCfGm/wB+AgKh5tJsJkKSRBkPVW3H3GuROOJZRmQbBSq48g+VZzV7FFP+QAn/ABDj&#xA;lJ0eM9HKh2jnjykfv+9Bv+V/lFulu6f6ssn8WOQOgxdzcO19QP4vsCz/AJVZ5T/31L/yMb+uD8hj&#xA;T/LGo7x8grR/ln5QQ1+qEn3kkP62OSGhxdzA9q6g/wAX2D9SY2nlDy7aEGCyiRh0bivL/gqVyyOm&#xA;gOQcfJq8s+cj80yWytV6Rg/Op/XlvCHHtWVVUUUADwG2SVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWO+d5NRg0uO6sp3h9CUGX0zxqrbCtOtGptleW62as11Y&#xA;Yi3nvzDKsZWZIylQxVF+I9Pi5VHbtTKfFk0HNJ03nfzDJLE4mWP0/wBhFAVv9YGtcfFKnNJBXvmj&#xA;zNeXscdveSRz3brGkcRKqKmgAUdNz164DORKiciXrUSskSIzc2VQGc7EkDr9OZblr8UuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxVAa7pzalot9YK5je6gkiRwSKMykA7dq9clE0bYTjYIfO8PmzzXp9l&#xA;JpEeoTwWykxtBWjJQ7qrH403HRSM2PhxJunVjJICrdN5382zWJsZdVuHt2ILBnJc07GT7dPblTHw&#xA;o3dKc0qq0LqfmnzDeW8KXmoTzLab2/JzVW7NXqW9zvjwAXQQZyPMvdPyt0y6sPJdj9bkeS4u+V2/&#xA;qEsQJjyUb7/ZoT75r8h3dnhFRZbkG12KuxV2KuxV2KuxV2Koe/tI7yyntZPsTIyE+FRsfo64CLCJ&#xA;CxTxaeCa2e5hccZI2YEeDDYj/ghmEQ4Bc0qKgdzxBFcUJ1+Xdh+kfMZvXWsFgnNa/wA7VVP4n6Ms&#xA;xC5W34Y7vV8ynKdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5+/NbRP0Z5uuJEWkGoAXUdP5&#xA;nJEg/wCDBP05sMEri6vUwqfvYcSB1y5oRflzSjr3mTT9IjqY7iZRMR2jX4pCPkgOU5Z7NuKFmn1K&#xA;iIiKiAKigBVGwAGwAzXu1XYpdirsVdirsVdirsVdiqheX1pZwma6mWGMftOaV9h44CQEEgc3mmu3&#xA;/l+71SeeGJpY5SCzAsnxUHLao69c02qjqDkJxyjw+f8AYxGTB/EDf480s+p6RcS0itjQKWcvI4NB&#xA;4ULVzXanLqsVcRjv3ORhhgyXQOzMPJeoeXdOt5LVW+rTTyc6y1CsAAFo5LL+ObbsvUcUPVIGV/Jh&#xA;ljGEqAoM0BBAINQehzasW8VdirsVdirsVdirsVdirsVdirsVdirsVdirRIUFmNANyT0AxV5Z5/8A&#xA;Pfk64uYrdIF1Sa1Lj1fTSSIcqVVWfr9nqu2U6rQ6jIB4c/D7+bT+axA+qPEwx/NHlmQ/HoEAHiFj&#xA;2+jgMxj2RrP9XP2/rQNbh/1Mfj4M58pXflPTr+C9jtoIpbi3MsUkUQRxGx+IgLUnjQhgM1mlzajD&#xA;lIzGUoA8N3YBPIudIYpRBgADV/B6Ta3Vtd26XNrKk9vKOUcsbBlYeIIzoyKccG1XAl2KuxV2KuxV&#xA;2KuxVJPMnma20eEKAJbyQfuoa7AfzP7fryE5015MnC8x1XVb/UbrncSmSZu56Iv+SOgzFlIlxDIn&#xA;cqKqFAA6DAxVrWf0JxJTkNwy+IPXMbV6YZoVdEbhv0+bw5X0RDqLRl/3ZZzioQ+B/UwzCxxGeyPR&#xA;mhzI/G4LkzkcdA+rHL8fNOPL2r6npMwMdxHdaM+7QyPR4q9Slfs/I7H2zIh2mce04Svy3+SYYf5s&#xA;gYs60vVV1FDPDH/op/u5uStyINCKLXpmw0uqllJPAYx6X1+DOcQBsbR+ZjB2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV4v+a3n24u72bQNOlKWVuSl7IhoZZB9pKj9hehHc5m4MVCy6/U5rPCOTzXMlxHYq&#xA;yK+e50i/0S6ILRQ20EkVOjKSXkUfPmfvzSabh1OPNA8zOQP3R+5zst4pQl04R+1PdG8yXvkjzCGD&#xA;NP5S1VxICKlEEm4dP5XUdR3Hv0dHqBmhwy2yw2kPd1+LbMHFKx/dy5PcUdJEWRGDI4DKw3BB3BGW&#xA;t67FLsVdirsVdiqA1rVYdL0+S7l3K7RJ/M56LkZSoMZyoW8mvb24vLmS6uHLyyHkx/gB4DtmITbg&#xA;k2ULEhFWb7b7n28BgQvxV2Kplq4CJaxLuixgg+NQM1XZoueSXUyc/WbRgPJJr6Plbk913GbUuCE2&#xA;8h+an0jUBa3D/wC466YB6naNzsHH6m9vlk8U6Pk3450Xr+Zbkt4q7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qlHmzW00Ty7fakSBJDGRAD3lf4YxT/WIr7ZPHHiNNeSfDEl8zO7yOzuxZ2JZmO5JO5JzZuobihmm&#xA;YrFG0jAVIQFjT6MBICgOlgnhIEsbRk7gOCtfvxBBUik9fUPr3lBoLgBpdNmjW3lP2vTlDfB9HE/R&#xA;TwzTeB4WuEo8ssZX741v9rneJx6ejziRXxS6z8yalptsYU4XFmx+O0uF9SIg+x6b+GZGu7MxZjxm&#xA;4zH8Udi14NVOG3OPceT2/wDKnzTHr3lvjwWGewf0HgQkhY6ViK16Lx+ED2ymGA4oiJkZeZ5ubjy8&#xA;e9UzTJNjsVdirsVdirzbz3qxu9V+qI1YLP4aDoZD9o/R0zGyys04maVmmM5U0t4qio9K1KRQyWsp&#xA;U9DxNMWYxyPRNtd0+w0/TYI1jH1uSgaSpr8Iqx6+OLdlgIxHex8sSACagdBgAAceytkHJGHiCMKE&#xA;lyLY9i/L3XG1PQlilblc2REMhPUrT9233bfRmXilYcnHKwyjLWx2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;41+dPmb6xfQaDA1YrSk13TvKw+Bf9ihr9OZumhtbgavJZ4XmaqWYKOrGg+ZzJcN6N5p1q48owWWh&#xA;6Jwgk9ES3NzwVnZiStfiBFSVJNR8qZrsGMZiZyc/NkOICMVHyt5muvMtw+g6+Eu4rqNzDNwVHR1B&#xA;ao4gDpWhphz4RiHHDamOHKch4Zb2wadpYFlsSfhSUmSn7TJVR92/35ljGDLj61X6ft2+TimRA4fN&#xA;B3P9y30frycuTEc2S/lR5q/QPmmJJn42Go0trmp2Uk/u5D/qsevgTmNkjYcrDPhk+kcxHYOxV2Ku&#xA;xVQvbpbWznuW3WGNpCPHiK0wE0EE0LeNSyPLK8sh5PIxZj4kmpzDdeVmBWUeU9NhaJr2RQ0nIrFX&#xA;fjTqfni5WngOaPsNba+1GS3hipBECWlJ3NDQUHvi2Qy8UqCKvLa11GzkiNHFWVW7q6kjb5EYs5RE&#xA;g8+xdc7FUkyLYy78stSNt5i+qk/u72Nkp25oOan7gR9OW4TUmzEd3rmZbkuxV2KuxV2KuxV2KuxV&#xA;2KuxVB6xqUOmaVd6hN/d2sTykdK8RUL9J2yURZpjKVC3zBfXlxe3k95cNznuJGllbxZzU5swKFOn&#xA;Js2jfLthp97f8L2/XT40AdJGQvyYMAEoCvWuV5pmI2Fs8UQTuaZ5590TQ77Wo5r7W006YQKogaIy&#xA;EqGYhqhl61zA0uWcY0I3u5mpxxMt5Uw3WdC0Kys/Wstcj1CfkF+rrCUND1apdumZuPLORoxpxZ44&#xA;gbStIcvaVK5P7lvo/XkZckx5oHKmx9O/lr5ibXvKFldStyuoQba6J3JkioORPiy8WPzzDyRouxwy&#xA;4osoyDa7FXYqkXnWcxeXLkDYyFEH0uCfwGQyH0tWU+l5bmI4bsVZL5a1q1ggNnct6fxFo5D9nfqC&#xA;e2Lk4MoAop7Z2Nnb+rLaAL9Y+IsDyWu9Ke2+LkRgBy6sb1Kz1rS4+cd072xJqyErQsf2lr3xcacZ&#xA;Q67JDi46yZuMTt4A4qEnyLYmHl+5Ntrmnz1oEuIi3y5iv4YYmiExO73rM9zHYq7FXYq7FXYq7FXY&#xA;q7FXYqwb8475rbyY8KmhvLiKE/IVlP8Ayby/Ti5ONqjUHg2Z7rU08uW2kXGoBdUvGs4lAaJ1RpC0&#xA;nIUWig02rlWaUgPSLbMQiTuaZ5590/yrca1HJquqvZXIgULCsLyApyajVVSOtcwNLPII+mNi3M1M&#xA;YGXqNMN1nTvKdvZ+pperSXt1yA9FoXjHE9TyZQNszcc8hPqjQcWcYAbGykOXtKHvGogXxNfuyEyy&#xA;ihMrZvZP+cfdQJTWNPYmgMNxGvbfkjn8FzHzDk5elPMPYcoct2KuxVjXn/l+gNunrJy+VD/HK8vJ&#xA;pzfS81zFcR2KspXyvZS6eksDOZpEVlJYcasAT2xcvwAY2FTzDcT26WlhYcxItGAjryCqOKjbxxTm&#xA;JFAI7WXKaFMZ6GQxhW/1zQbfTizyH0bsExcBC6hJxiCd3P4DAUhLsDNWs+Zu4OH2/UXj8+QpiFD6&#xA;EzYOa7FXYq7FXYq7FXYq7FXYq7FXmH56zU0zSoP555Hp/qIB/wAb5laUblw9Ydg8czMcBNvK7aOm&#xA;t28uryGOyiJkYgM1WXdAQoY05ZVn4uE8PNsw8PEOLkyfX28ka1qcl/c+YJFZwFSNbaXiqL0UfBmL&#xA;i8WEaEftcjJ4czZl9iXfob8vv+phl/6Rpf8AmjLPEzfzftYeHi/nfYxu/jtIryaOzmM9qrEQzFSp&#xA;Zex4mhGZMCSN+bjyAvbklNw/OU06DYZCRsswFLIpel/kJPw82XkJNBLYuQPFlljp+BOU5uTkaY+p&#xA;71mM5zsVdiqS+cbY3Hl27AFWjCyj/YMCf+FrkMg9LXlFxeUoar7ioP0bZiOE3irLPKN1dywyQv8A&#xA;Fbw04MeoLGvH5YuXp5Eiui6bzfZo7KkLvxJAaoANO464pOoCR6trlzqJCsBHCpqsQ338Se+LRkym&#xA;SWkgCp2A64tSU3M3qylv2ei/LIlmApYpTPyzaG78wafbgVDToWH+Sh5N/wAKDkoCyGURZe75nOW7&#xA;FXYq7FXYq7FXYq7FXYq7FXj/AOe1yGvtItu8UU0hH/GRlX/mXmZpRsXA1h3Dy3Mpw3Yq7FXYqo3E&#xA;vBaD7R6ZGUqSAgsqbHYqzn8mLr0fPtmhNBcRTxf8ky//ABplWUelu059T6MzFdg7FXYqskjSWN45&#xA;ByRwVZT0IIoRih45rOmzaTqs1rKPg5fA/Yg/Zb6R+OYco0XBlGjSGyLFFW+pX1tC0MEpjjepZQBv&#xA;UU60riyEyBQQuLF2KoC9ug1Yozt+0fH2wEsgEHgZOxV6D+VmhO082szLSNAYbWo6sftsPkPh+k5f&#xA;gj1bsUer0nMlvdirsVdirsVdirsVdirsVdiryL88dHuTcWGsIpa39M2srD9hgxdK/wCtyP3ZmaaX&#xA;MODq48i8qzKcJ2KuxVSmnWMUG7eH9cjKVJAQTMWYsxqTlRLY1irsVZ5+TGiXV95zgvUU/VdNV5Z5&#xA;KbVZGRFr4lmr8gcqynZu08bk+icxXYOxV2KuxVJfM/l201i04uVjuYwfRmPTf9lv8k/hkJwBDXOH&#xA;E8tvrC+0ycwXKEqPssPi28QR9oZikU4kokc1NHRxVSCPbAxc8iIKuQB74qgLm+LgpHsvc9zgJZAI&#xA;TAydirJfKvky61iZJbg/VtPBq0jEB3HhGD/xLpk4Y7bIYyXr9pa29pbRW1sgjgiULGg6ADM0CnIA&#xA;pWxS7FXYq7FXYq7FXYq7FXYq7FUBqelQ6hE8U4WSGQcXhkHJCPlkSDdgrsRRYTe/k35fmYmJZbev&#xA;QQy1H/JQPlw1GQdxcc6WB8kouPyRXf0b6VPDnGkn/EWTJjVy6hrOjHel0/5IaweQj1Nafs1gZa/O&#xA;jtTE6s9y/k/NB/8AKitf/wCW2H/gJMH5jyX8qe9Uj/IjVyB6moIprvxhZtvpZcH5jyT+VPejoPyE&#xA;Nf32pyOP8mFU/XI2D8we5P5Ud6bWf5GeX4yDO9xOe4eVVX/hFB/HInNNmNNBm+heWLDRYFt7CNba&#xA;BTy9OOvxHxZm+JvpyuiTZLdEACgnWSS7FXYq7FUBPpzu5dZK17N/XKzBNoO40Z5ozHNEkyH9k0I/&#xA;HImBU0ebH7/8vbacloBJbSHoyEMPx3/HIHEWo4Y9Ekn/ACv1csSl6ZPAyRkfq5ZA4ix8FTX8sNcr&#xA;8U0dPYP/AM0jHwijwSi7f8rrmoM9y1O6pHT/AIZj/DD4JSMPmnmneQtNs2DrameQdHnIan+x2X8M&#xA;mMTZHHEJ8umXB68VHz/pk+Atlo21tjApBctXt2GTjGmJKIySuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVqorSu56DFXVFaV3O4HyxVvFWuS1pUVrSnvSv6sVad1RS7kKqirMdgAMVU4ru2ljEkc&#xA;qsjAEGv83TACqthVaWUEAkAnoD3xVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVSa+0W8ubt5kvGjUghACwIB4fCN6AfAeg75AwJKQUNNoWrL+9S8aZwWonJlqGKnr&#xA;z/yfH+mRMD3psKqaDqIjSuoSK9Qz0ZyK1Y927Bh86YeA962u/QN39WKfWqzeqJRN+8rtEYq15cq1&#xA;PLrTHgKLWy6Hd3OnPFLNS59X1IGk+Pii7Kp69QN8TAkJtStfK0kWmvbGcCdnDiROQClVIWm4JoTX&#xA;AMey8StLoF+Wf0tRlRCQUUljSgIp9rtWuEwPetqQ8vahIiNLesrhTQVZipPE1DFv8nt9GDgPetou&#xA;40u/mlaQ3XGoX4FMirRSPh2cbEDc9ckYlFus9Hu4JopZLySZkIL8mejbMD8JJHcYiJHVSU2yaHYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:a53b3dc5-35d7-4029-a0af-0a061c287bad</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:a53b3dc5-35d7-4029-a0af-0a061c287bad</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:7275ec27-249e-4b41-a1ec-64e50302b26c</stRef:instanceID>
            <stRef:documentID>xmp.did:a35a122e-376b-49bd-b334-f50891a8841d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a53b3dc5-35d7-4029-a0af-0a061c287bad</stEvt:instanceID>
                  <stEvt:when>2017-05-12T16:40:26+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CooperHewitt-SemiboldItalic</stFnt:fontName>
                  <stFnt:fontFamily>Cooper Hewitt</stFnt:fontFamily>
                  <stFnt:fontFace>Semibold Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>1.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>CooperHewitt-SemiboldItalic.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Glegoo-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Glegoo</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 2.0.1; ttfautohint (v0.9) -r 48 -G 60</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Glegoo-Regular.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0153201 .0126345 .0151369 0 cmyk
f
177.12 473.788 mo
177.12 474.227 177.188 474.601 177.325 474.91 cv
177.461 475.218 177.648 475.45 177.886 475.607 cv
178.123 475.763 178.382 475.842 178.663 475.842 cv
178.948 475.842 179.208 475.768 179.444 475.619 cv
179.679 475.471 179.867 475.243 180.008 474.936 cv
180.148 474.63 180.218 474.245 180.218 473.788 cv
180.218 473.356 180.148 472.984 180.008 472.673 cv
179.867 472.363 179.678 472.126 179.438 471.962 cv
179.198 471.798 178.936 471.716 178.652 471.716 cv
178.355 471.716 178.09 471.8 177.856 471.968 cv
177.622 472.136 177.442 472.377 177.313 472.691 cv
177.184 473.006 177.12 473.371 177.12 473.788 cv
cp
180.308 476.168 mo
180.308 476.007 li
180.09 476.256 179.875 476.46 179.664 476.615 cv
179.452 476.772 179.222 476.891 178.975 476.971 cv
178.728 477.054 178.458 477.093 178.165 477.093 cv
177.777 477.093 177.417 477.012 177.087 476.848 cv
176.757 476.683 176.471 476.449 176.23 476.144 cv
175.988 475.84 175.805 475.482 175.68 475.069 cv
175.556 474.658 175.493 474.212 175.493 473.734 cv
175.493 472.721 175.741 471.931 176.235 471.365 cv
176.73 470.799 177.381 470.516 178.189 470.516 cv
178.655 470.516 179.049 470.597 179.37 470.757 cv
179.69 470.917 180.003 471.164 180.308 471.495 cv
180.308 469.104 li
180.308 468.771 180.374 468.52 180.507 468.349 cv
180.639 468.18 180.828 468.094 181.073 468.094 cv
181.319 468.094 181.507 468.172 181.64 468.329 cv
181.773 468.486 181.839 468.716 181.839 469.021 cv
181.839 476.168 li
181.839 476.477 181.768 476.708 181.625 476.863 cv
181.483 477.016 181.299 477.093 181.073 477.093 cv
180.852 477.093 180.669 477.014 180.524 476.854 cv
180.38 476.693 180.308 476.465 180.308 476.168 cv
cp
.227817 .20032 .30811 0 cmyk
f
184.284 473.277 mo
187.223 473.277 li
187.184 472.723 187.033 472.308 186.774 472.034 cv
186.515 471.758 186.174 471.621 185.751 471.621 cv
185.347 471.621 185.015 471.76 184.756 472.038 cv
184.497 472.318 184.34 472.731 184.284 473.277 cv
cp
187.454 474.198 mo
184.284 474.198 li
184.288 474.565 184.362 474.89 184.507 475.171 cv
184.651 475.452 184.843 475.664 185.083 475.806 cv
185.322 475.948 185.586 476.019 185.875 476.019 cv
186.069 476.019 186.246 475.997 186.406 475.952 cv
186.567 475.906 186.722 475.835 186.873 475.737 cv
187.023 475.641 187.161 475.537 187.288 475.426 cv
187.414 475.315 187.578 475.163 187.781 474.974 cv
187.864 474.903 187.983 474.867 188.137 474.867 cv
188.303 474.867 188.438 474.913 188.54 475.005 cv
188.643 475.096 188.695 475.223 188.695 475.391 cv
188.695 475.537 188.637 475.707 188.523 475.903 cv
188.407 476.1 188.234 476.288 188.003 476.467 cv
187.771 476.648 187.481 476.797 187.13 476.915 cv
186.781 477.035 186.378 477.093 185.922 477.093 cv
184.882 477.093 184.072 476.797 183.495 476.203 cv
182.917 475.61 182.628 474.805 182.628 473.788 cv
182.628 473.308 182.699 472.864 182.842 472.455 cv
182.984 472.045 183.192 471.694 183.465 471.401 cv
183.738 471.108 184.074 470.884 184.474 470.727 cv
184.874 470.571 185.317 470.493 185.804 470.493 cv
186.437 470.493 186.98 470.626 187.433 470.893 cv
187.886 471.161 188.226 471.506 188.451 471.929 cv
188.676 472.352 188.79 472.784 188.79 473.223 cv
188.79 473.631 188.673 473.895 188.44 474.016 cv
188.207 474.137 187.878 474.198 187.454 474.198 cv
cp
f
194.838 474.974 mo
194.838 475.421 194.73 475.804 194.512 476.123 cv
194.294 476.441 193.973 476.683 193.547 476.848 cv
193.122 477.012 192.604 477.093 191.995 477.093 cv
191.413 477.093 190.914 477.004 190.499 476.826 cv
190.083 476.649 189.776 476.426 189.579 476.16 cv
189.381 475.891 189.282 475.624 189.282 475.354 cv
189.282 475.176 189.345 475.024 189.472 474.897 cv
189.599 474.772 189.759 474.708 189.953 474.708 cv
190.123 474.708 190.253 474.75 190.344 474.833 cv
190.436 474.916 190.523 475.033 190.605 475.182 cv
190.772 475.472 190.971 475.686 191.203 475.83 cv
191.434 475.972 191.749 476.044 192.149 476.044 cv
192.474 476.044 192.74 475.97 192.948 475.826 cv
193.155 475.681 193.259 475.516 193.259 475.331 cv
193.259 475.045 193.152 474.839 192.936 474.708 cv
192.72 474.578 192.365 474.452 191.87 474.333 cv
191.312 474.195 190.858 474.049 190.508 473.896 cv
190.157 473.745 189.877 473.544 189.668 473.295 cv
189.458 473.046 189.353 472.738 189.353 472.374 cv
189.353 472.051 189.45 471.743 189.644 471.454 cv
189.838 471.166 190.124 470.935 190.502 470.763 cv
190.88 470.591 191.336 470.504 191.87 470.504 cv
192.29 470.504 192.667 470.548 193.001 470.636 cv
193.335 470.721 193.615 470.84 193.838 470.986 cv
194.062 471.131 194.232 471.294 194.348 471.472 cv
194.465 471.65 194.523 471.824 194.523 471.995 cv
194.523 472.18 194.461 472.333 194.337 472.452 cv
194.212 472.569 194.035 472.63 193.805 472.63 cv
193.639 472.63 193.497 472.583 193.381 472.486 cv
193.264 472.392 193.131 472.25 192.98 472.06 cv
192.857 471.902 192.714 471.775 192.547 471.68 cv
192.381 471.584 192.155 471.538 191.87 471.538 cv
191.577 471.538 191.334 471.599 191.14 471.725 cv
190.946 471.849 190.849 472.004 190.849 472.19 cv
190.849 472.361 190.92 472.5 191.062 472.608 cv
191.205 472.718 191.397 472.809 191.639 472.88 cv
191.88 472.95 192.212 473.037 192.636 473.139 cv
193.138 473.263 193.549 473.409 193.868 473.579 cv
194.186 473.749 194.427 473.95 194.592 474.182 cv
194.756 474.414 194.838 474.678 194.838 474.974 cv
cp
f
197.295 471.424 mo
197.295 476.108 li
197.295 476.433 197.218 476.678 197.064 476.844 cv
196.909 477.01 196.714 477.093 196.476 477.093 cv
196.238 477.093 196.045 477.009 195.897 476.838 cv
195.748 476.669 195.675 476.424 195.675 476.108 cv
195.675 471.472 li
195.675 471.152 195.748 470.91 195.897 470.748 cv
196.045 470.586 196.238 470.504 196.476 470.504 cv
196.714 470.504 196.909 470.586 197.064 470.748 cv
197.218 470.91 197.295 471.136 197.295 471.424 cv
cp
196.494 469.751 mo
196.268 469.751 196.075 469.681 195.915 469.543 cv
195.755 469.405 195.675 469.209 195.675 468.955 cv
195.675 468.725 195.757 468.537 195.921 468.388 cv
196.085 468.24 196.276 468.165 196.494 468.165 cv
196.704 468.165 196.889 468.232 197.052 468.368 cv
197.214 468.502 197.295 468.697 197.295 468.955 cv
197.295 469.205 197.216 469.399 197.057 469.54 cv
196.899 469.68 196.711 469.751 196.494 469.751 cv
cp
f
199.699 473.746 mo
199.699 474.403 199.842 474.9 200.129 475.235 cv
200.416 475.572 200.787 475.741 201.242 475.741 cv
201.511 475.741 201.765 475.668 202.005 475.524 cv
202.244 475.38 202.439 475.161 202.59 474.87 cv
202.74 474.58 202.815 474.227 202.815 473.811 cv
202.815 473.151 202.67 472.635 202.379 472.268 cv
202.088 471.901 201.705 471.716 201.23 471.716 cv
200.767 471.716 200.396 471.892 200.117 472.245 cv
199.838 472.596 199.699 473.097 199.699 473.746 cv
cp
204.395 471.692 mo
204.395 476.399 li
204.395 476.937 204.337 477.401 204.222 477.789 cv
204.108 478.176 203.923 478.497 203.67 478.75 cv
203.417 479.003 203.085 479.192 202.676 479.314 cv
202.266 479.437 201.757 479.498 201.147 479.498 cv
200.589 479.498 200.09 479.42 199.651 479.264 cv
199.212 479.106 198.874 478.905 198.636 478.658 cv
198.399 478.41 198.28 478.157 198.28 477.895 cv
198.28 477.698 198.347 477.535 198.482 477.412 cv
198.616 477.286 198.779 477.224 198.968 477.224 cv
199.206 477.224 199.414 477.329 199.592 477.539 cv
199.678 477.645 199.768 477.754 199.862 477.862 cv
199.955 477.972 200.058 478.065 200.17 478.142 cv
200.283 478.219 200.419 478.276 200.577 478.314 cv
200.735 478.351 200.918 478.37 201.123 478.37 cv
201.543 478.37 201.868 478.312 202.1 478.194 cv
202.332 478.078 202.494 477.915 202.587 477.705 cv
202.68 477.496 202.734 477.272 202.75 477.031 cv
202.766 476.792 202.778 476.407 202.785 475.876 cv
202.536 476.225 202.249 476.49 201.922 476.672 cv
201.595 476.854 201.206 476.946 200.755 476.946 cv
200.213 476.946 199.739 476.807 199.333 476.529 cv
198.928 476.252 198.616 475.865 198.399 475.366 cv
198.181 474.867 198.073 474.292 198.073 473.639 cv
198.073 473.153 198.139 472.712 198.271 472.322 cv
198.404 471.929 198.593 471.599 198.838 471.329 cv
199.083 471.061 199.366 470.858 199.687 470.721 cv
200.007 470.585 200.359 470.516 200.744 470.516 cv
201.202 470.516 201.6 470.605 201.937 470.78 cv
202.273 470.957 202.586 471.233 202.875 471.609 cv
202.875 471.389 li
202.875 471.108 202.944 470.891 203.082 470.736 cv
203.221 470.582 203.399 470.504 203.617 470.504 cv
203.929 470.504 204.137 470.607 204.24 470.81 cv
204.343 471.014 204.395 471.308 204.395 471.692 cv
cp
f
206.97 471.401 mo
206.97 471.597 li
207.254 471.221 207.566 470.945 207.905 470.769 cv
208.243 470.593 208.632 470.504 209.071 470.504 cv
209.499 470.504 209.88 470.598 210.217 470.784 cv
210.553 470.97 210.805 471.233 210.971 471.572 cv
211.078 471.771 211.147 471.985 211.178 472.214 cv
211.21 472.444 211.227 472.737 211.227 473.093 cv
211.227 476.108 li
211.227 476.433 211.152 476.678 211.004 476.844 cv
210.855 477.01 210.662 477.093 210.425 477.093 cv
210.183 477.093 209.988 477.009 209.837 476.838 cv
209.686 476.669 209.612 476.424 209.612 476.108 cv
209.612 473.407 li
209.612 472.873 209.537 472.464 209.389 472.181 cv
209.24 471.899 208.945 471.756 208.501 471.756 cv
208.213 471.756 207.949 471.843 207.712 472.015 cv
207.474 472.187 207.3 472.424 207.189 472.724 cv
207.11 472.966 207.071 473.417 207.071 474.078 cv
207.071 476.108 li
207.071 476.437 206.994 476.683 206.842 476.848 cv
206.69 477.012 206.493 477.093 206.252 477.093 cv
206.018 477.093 205.827 477.009 205.676 476.838 cv
205.526 476.669 205.45 476.424 205.45 476.108 cv
205.45 471.424 li
205.45 471.116 205.517 470.885 205.652 470.732 cv
205.787 470.581 205.971 470.504 206.204 470.504 cv
206.347 470.504 206.475 470.538 206.59 470.605 cv
206.705 470.674 206.797 470.774 206.866 470.908 cv
206.936 471.042 206.97 471.207 206.97 471.401 cv
cp
f
213.659 473.277 mo
216.598 473.277 li
216.558 472.723 216.409 472.308 216.15 472.034 cv
215.89 471.758 215.549 471.621 215.126 471.621 cv
214.722 471.621 214.39 471.76 214.131 472.038 cv
213.872 472.318 213.715 472.731 213.659 473.277 cv
cp
216.829 474.198 mo
213.659 474.198 li
213.664 474.565 213.737 474.89 213.882 475.171 cv
214.027 475.452 214.218 475.664 214.458 475.806 cv
214.697 475.948 214.961 476.019 215.25 476.019 cv
215.444 476.019 215.621 475.997 215.782 475.952 cv
215.942 475.906 216.097 475.835 216.248 475.737 cv
216.398 475.641 216.536 475.537 216.664 475.426 cv
216.79 475.315 216.954 475.163 217.156 474.974 cv
217.239 474.903 217.358 474.867 217.512 474.867 cv
217.678 474.867 217.813 474.913 217.916 475.005 cv
218.019 475.096 218.07 475.223 218.07 475.391 cv
218.07 475.537 218.013 475.707 217.898 475.903 cv
217.783 476.1 217.61 476.288 217.378 476.467 cv
217.146 476.648 216.856 476.797 216.506 476.915 cv
216.156 477.035 215.753 477.093 215.298 477.093 cv
214.257 477.093 213.448 476.797 212.869 476.203 cv
212.292 475.61 212.003 474.805 212.003 473.788 cv
212.003 473.308 212.074 472.864 212.217 472.455 cv
212.359 472.045 212.567 471.694 212.84 471.401 cv
213.113 471.108 213.45 470.884 213.849 470.727 cv
214.249 470.571 214.693 470.493 215.179 470.493 cv
215.812 470.493 216.355 470.626 216.808 470.893 cv
217.261 471.161 217.601 471.506 217.827 471.929 cv
218.052 472.352 218.165 472.784 218.165 473.223 cv
218.165 473.631 218.049 473.895 217.815 474.016 cv
217.582 474.137 217.253 474.198 216.829 474.198 cv
cp
f
220.248 473.788 mo
220.248 474.227 220.316 474.601 220.452 474.91 cv
220.589 475.218 220.776 475.45 221.014 475.607 cv
221.251 475.763 221.51 475.842 221.791 475.842 cv
222.076 475.842 222.337 475.768 222.572 475.619 cv
222.807 475.471 222.995 475.243 223.135 474.936 cv
223.276 474.63 223.346 474.245 223.346 473.788 cv
223.346 473.356 223.276 472.984 223.135 472.673 cv
222.995 472.363 222.805 472.126 222.566 471.962 cv
222.326 471.798 222.064 471.716 221.779 471.716 cv
221.483 471.716 221.217 471.8 220.984 471.968 cv
220.751 472.136 220.569 472.377 220.44 472.691 cv
220.312 473.006 220.248 473.371 220.248 473.788 cv
cp
223.435 476.168 mo
223.435 476.007 li
223.218 476.256 223.003 476.46 222.791 476.615 cv
222.579 476.772 222.35 476.891 222.103 476.971 cv
221.856 477.054 221.586 477.093 221.293 477.093 cv
220.904 477.093 220.545 477.012 220.215 476.848 cv
219.885 476.683 219.599 476.449 219.357 476.144 cv
219.116 475.84 218.933 475.482 218.808 475.069 cv
218.684 474.658 218.621 474.212 218.621 473.734 cv
218.621 472.721 218.869 471.931 219.363 471.365 cv
219.858 470.799 220.509 470.516 221.316 470.516 cv
221.783 470.516 222.177 470.597 222.498 470.757 cv
222.818 470.917 223.131 471.164 223.435 471.495 cv
223.435 469.104 li
223.435 468.771 223.502 468.52 223.634 468.349 cv
223.767 468.18 223.956 468.094 224.201 468.094 cv
224.447 468.094 224.635 468.172 224.768 468.329 cv
224.901 468.486 224.967 468.716 224.967 469.021 cv
224.967 476.168 li
224.967 476.477 224.896 476.708 224.754 476.863 cv
224.611 477.016 224.427 477.093 224.201 477.093 cv
223.98 477.093 223.797 477.014 223.652 476.854 cv
223.508 476.693 223.435 476.465 223.435 476.168 cv
cp
f
230.136 473.835 mo
230.136 474.48 230.284 474.975 230.578 475.321 cv
230.873 475.668 231.26 475.842 231.739 475.842 cv
232.146 475.842 232.498 475.665 232.792 475.31 cv
233.087 474.956 233.235 474.448 233.235 473.788 cv
233.235 473.36 233.174 472.992 233.051 472.683 cv
232.928 472.374 232.754 472.136 232.529 471.968 cv
232.303 471.8 232.04 471.716 231.739 471.716 cv
231.43 471.716 231.155 471.8 230.914 471.968 cv
230.672 472.136 230.483 472.379 230.344 472.698 cv
230.206 473.016 230.136 473.396 230.136 473.835 cv
cp
230.059 469.021 mo
230.059 471.495 li
230.364 471.179 230.674 470.936 230.991 470.769 cv
231.307 470.6 231.7 470.516 232.167 470.516 cv
232.705 470.516 233.176 470.644 233.583 470.898 cv
233.988 471.155 234.302 471.525 234.526 472.009 cv
234.75 472.494 234.862 473.069 234.862 473.734 cv
234.862 474.225 234.799 474.674 234.675 475.084 cv
234.55 475.494 234.369 475.849 234.132 476.15 cv
233.894 476.45 233.606 476.683 233.268 476.848 cv
232.929 477.012 232.556 477.093 232.149 477.093 cv
231.899 477.093 231.665 477.064 231.445 477.004 cv
231.225 476.946 231.038 476.867 230.884 476.77 cv
230.73 476.673 230.599 476.573 230.49 476.471 cv
230.381 476.368 230.237 476.213 230.059 476.007 cv
230.059 476.168 li
230.059 476.472 229.986 476.703 229.839 476.86 cv
229.693 477.016 229.507 477.093 229.281 477.093 cv
229.052 477.093 228.869 477.016 228.732 476.86 cv
228.596 476.703 228.528 476.472 228.528 476.168 cv
228.528 469.092 li
228.528 468.763 228.594 468.514 228.726 468.347 cv
228.859 468.179 229.044 468.094 229.281 468.094 cv
229.531 468.094 229.723 468.175 229.857 468.335 cv
229.992 468.496 230.059 468.723 230.059 469.021 cv
cp
f
236.963 477.296 mo
237.111 476.933 li
235.116 471.911 li
234.994 471.623 234.932 471.412 234.932 471.282 cv
234.932 471.144 234.968 471.016 235.039 470.897 cv
235.111 470.777 235.208 470.682 235.333 470.611 cv
235.458 470.539 235.587 470.504 235.722 470.504 cv
235.955 470.504 236.131 470.578 236.25 470.727 cv
236.369 470.875 236.474 471.087 236.565 471.365 cv
237.936 475.354 li
239.236 471.644 li
239.339 471.344 239.432 471.108 239.515 470.937 cv
239.598 470.768 239.686 470.653 239.779 470.594 cv
239.872 470.535 240.004 470.504 240.174 470.504 cv
240.297 470.504 240.415 470.537 240.527 470.603 cv
240.64 470.668 240.727 470.755 240.788 470.867 cv
240.849 470.978 240.881 471.094 240.881 471.217 cv
240.864 471.291 240.839 471.399 240.803 471.538 cv
240.767 471.676 240.724 471.818 240.673 471.959 cv
238.56 477.491 li
238.377 477.978 238.199 478.359 238.025 478.636 cv
237.851 478.913 237.621 479.127 237.333 479.275 cv
237.046 479.424 236.66 479.498 236.173 479.498 cv
235.698 479.498 235.342 479.447 235.105 479.344 cv
234.867 479.241 234.749 479.053 234.749 478.779 cv
234.749 478.594 234.805 478.45 234.918 478.349 cv
235.03 478.248 235.198 478.197 235.419 478.197 cv
235.675 478.233 li
235.777 478.257 235.866 478.269 235.941 478.269 cv
236.127 478.269 236.274 478.242 236.381 478.186 cv
236.488 478.131 236.583 478.035 236.669 477.898 cv
236.754 477.762 236.852 477.561 236.963 477.296 cv
cp
f
260.439 470.644 mo
260.826 470.644 li
260.826 470.159 li
260.826 469.65 260.888 469.248 261.018 468.948 cv
261.145 468.649 261.365 468.431 261.672 468.295 cv
261.979 468.159 262.398 468.091 262.932 468.091 cv
263.882 468.091 264.353 468.32 264.353 468.786 cv
264.353 468.935 264.303 469.065 264.203 469.171 cv
264.106 469.277 263.988 469.331 263.854 469.331 cv
263.791 469.331 263.68 469.32 263.524 469.294 cv
263.376 469.274 263.242 469.259 263.135 469.259 cv
262.843 469.259 262.656 469.347 262.569 469.519 cv
262.49 469.691 262.447 469.936 262.447 470.259 cv
262.447 470.644 li
262.843 470.644 li
263.462 470.644 263.768 470.83 263.768 471.205 cv
263.768 471.466 263.689 471.636 263.523 471.708 cv
263.359 471.778 263.133 471.814 262.843 471.814 cv
262.447 471.814 li
262.447 476.108 li
262.447 476.428 262.372 476.671 262.217 476.838 cv
262.065 477.009 261.87 477.092 261.627 477.092 cv
261.398 477.092 261.208 477.009 261.053 476.838 cv
260.901 476.671 260.826 476.428 260.826 476.108 cv
260.826 471.814 li
260.379 471.814 li
260.137 471.814 259.953 471.761 259.822 471.65 cv
259.691 471.544 259.625 471.401 259.625 471.227 cv
259.625 470.837 259.896 470.644 260.439 470.644 cv
f
265.746 474.753 mo
265.746 476.108 li
265.746 476.435 265.663 476.683 265.511 476.846 cv
265.357 477.012 265.162 477.092 264.925 477.092 cv
264.687 477.092 264.496 477.01 264.347 476.842 cv
264.199 476.677 264.121 476.432 264.121 476.108 cv
264.121 471.594 li
264.121 470.865 264.383 470.502 264.909 470.502 cv
265.18 470.502 265.373 470.586 265.493 470.757 cv
265.611 470.928 265.677 471.178 265.691 471.511 cv
265.884 471.178 266.081 470.928 266.284 470.757 cv
266.492 470.586 266.76 470.502 267.102 470.502 cv
267.445 470.502 267.772 470.586 268.093 470.757 cv
268.415 470.928 268.575 471.155 268.575 471.434 cv
268.575 471.631 268.506 471.797 268.371 471.922 cv
268.233 472.053 268.087 472.118 267.93 472.118 cv
267.867 472.118 267.723 472.079 267.497 472.005 cv
267.269 471.935 267.066 471.897 266.896 471.897 cv
266.658 471.897 266.462 471.962 266.313 472.084 cv
266.162 472.212 266.044 472.394 265.961 472.638 cv
265.88 472.884 265.824 473.179 265.79 473.516 cv
265.759 473.854 265.746 474.267 265.746 474.753 cv
f
270.024 473.274 mo
272.962 473.274 li
272.923 472.721 272.777 472.306 272.517 472.032 cv
272.256 471.756 271.918 471.62 271.492 471.62 cv
271.087 471.62 270.755 471.758 270.497 472.038 cv
270.238 472.317 270.079 472.728 270.024 473.274 cv
273.196 474.195 mo
270.024 474.195 li
270.03 474.563 270.102 474.89 270.246 475.17 cv
270.393 475.449 270.583 475.661 270.824 475.806 cv
271.064 475.947 271.327 476.018 271.617 476.018 cv
271.811 476.018 271.987 475.997 272.148 475.948 cv
272.307 475.904 272.463 475.832 272.613 475.735 cv
272.765 475.639 272.901 475.536 273.028 475.422 cv
273.155 475.314 273.32 475.162 273.523 474.973 cv
273.607 474.902 273.725 474.864 273.878 474.864 cv
274.045 474.864 274.178 474.911 274.283 475.004 cv
274.387 475.095 274.436 475.222 274.436 475.389 cv
274.436 475.536 274.38 475.707 274.269 475.901 cv
274.151 476.1 273.979 476.286 273.746 476.467 cv
273.512 476.645 273.221 476.797 272.872 476.914 cv
272.523 477.032 272.119 477.092 271.665 477.092 cv
270.621 477.092 269.813 476.797 269.236 476.203 cv
268.658 475.609 268.367 474.802 268.367 473.786 cv
268.367 473.307 268.44 472.862 268.584 472.452 cv
268.724 472.041 268.932 471.692 269.208 471.398 cv
269.48 471.103 269.814 470.88 270.216 470.724 cv
270.614 470.568 271.057 470.489 271.545 470.489 cv
272.178 470.489 272.721 470.624 273.175 470.893 cv
273.627 471.157 273.971 471.504 274.193 471.927 cv
274.419 472.352 274.531 472.782 274.531 473.224 cv
274.531 473.629 274.414 473.893 274.181 474.015 cv
273.948 474.136 273.619 474.195 273.196 474.195 cv
f
276.767 473.274 mo
279.706 473.274 li
279.665 472.721 279.515 472.306 279.259 472.032 cv
278.995 471.756 278.657 471.62 278.232 471.62 cv
277.828 471.62 277.497 471.758 277.236 472.038 cv
276.979 472.317 276.82 472.728 276.767 473.274 cv
279.938 474.195 mo
276.767 474.195 li
276.771 474.563 276.846 474.89 276.988 475.17 cv
277.134 475.449 277.325 475.661 277.565 475.806 cv
277.804 475.947 278.067 476.018 278.359 476.018 cv
278.551 476.018 278.729 475.997 278.887 475.948 cv
279.049 475.904 279.203 475.832 279.355 475.735 cv
279.507 475.639 279.643 475.536 279.77 475.422 cv
279.895 475.314 280.061 475.162 280.263 474.973 cv
280.348 474.902 280.467 474.864 280.619 474.864 cv
280.786 474.864 280.92 474.911 281.025 475.004 cv
281.128 475.095 281.175 475.222 281.175 475.389 cv
281.175 475.536 281.12 475.707 281.004 475.901 cv
280.893 476.1 280.72 476.286 280.486 476.467 cv
280.254 476.645 279.961 476.797 279.613 476.914 cv
279.265 477.032 278.858 477.092 278.404 477.092 cv
277.362 477.092 276.555 476.797 275.975 476.203 cv
275.398 475.609 275.107 474.802 275.107 473.786 cv
275.107 473.307 275.179 472.862 275.325 472.452 cv
275.466 472.041 275.674 471.692 275.947 471.398 cv
276.219 471.103 276.555 470.88 276.955 470.724 cv
277.355 470.568 277.8 470.489 278.286 470.489 cv
278.917 470.489 279.46 470.624 279.919 470.893 cv
280.37 471.157 280.71 471.504 280.932 471.927 cv
281.157 472.352 281.273 472.782 281.273 473.224 cv
281.273 473.629 281.153 473.893 280.923 474.015 cv
280.688 474.136 280.36 474.195 279.938 474.195 cv
f
286.665 473.768 mo
286.665 473.34 286.599 472.972 286.468 472.666 cv
286.338 472.358 286.157 472.124 285.928 471.962 cv
285.698 471.797 285.438 471.714 285.157 471.714 cv
284.711 471.714 284.333 471.891 284.027 472.241 cv
283.719 472.595 283.564 473.113 283.564 473.799 cv
283.564 474.441 283.717 474.945 284.024 475.303 cv
284.328 475.661 284.703 475.84 285.157 475.84 cv
285.425 475.84 285.676 475.76 285.906 475.607 cv
286.138 475.449 286.321 475.215 286.457 474.902 cv
286.595 474.589 286.665 474.21 286.665 473.768 cv
283.487 471.413 mo
283.487 471.608 li
283.791 471.232 284.109 470.956 284.441 470.78 cv
284.764 470.602 285.139 470.513 285.554 470.513 cv
286.051 470.513 286.513 470.643 286.933 470.898 cv
287.353 471.157 287.683 471.533 287.927 472.027 cv
288.17 472.524 288.293 473.109 288.293 473.786 cv
288.293 474.283 288.222 474.743 288.083 475.162 cv
287.943 475.58 287.748 475.929 287.502 476.212 cv
287.257 476.493 286.968 476.712 286.634 476.865 cv
286.295 477.016 285.94 477.092 285.554 477.092 cv
285.093 477.092 284.702 476.999 284.388 476.813 cv
284.075 476.631 283.774 476.355 283.487 475.997 cv
283.487 478.43 li
283.487 479.139 283.227 479.498 282.71 479.498 cv
282.403 479.498 282.204 479.407 282.103 479.224 cv
282.008 479.037 281.957 478.772 281.957 478.417 cv
281.957 471.421 li
281.957 471.112 282.024 470.884 282.157 470.729 cv
282.291 470.58 282.477 470.502 282.71 470.502 cv
282.94 470.502 283.126 470.58 283.27 470.735 cv
283.417 470.893 283.487 471.117 283.487 471.413 cv
f
290.727 471.421 mo
290.727 476.109 li
290.727 476.432 290.65 476.677 290.497 476.842 cv
290.34 477.01 290.146 477.092 289.908 477.092 cv
289.67 477.092 289.48 477.009 289.328 476.838 cv
289.182 476.666 289.106 476.423 289.106 476.109 cv
289.106 471.467 li
289.106 471.149 289.182 470.908 289.328 470.746 cv
289.48 470.581 289.67 470.502 289.908 470.502 cv
290.146 470.502 290.34 470.581 290.497 470.746 cv
290.65 470.908 290.727 471.135 290.727 471.421 cv
289.925 469.747 mo
289.698 469.747 289.507 469.675 289.348 469.537 cv
289.186 469.398 289.106 469.205 289.106 468.953 cv
289.106 468.722 289.188 468.534 289.354 468.384 cv
289.518 468.237 289.708 468.161 289.925 468.161 cv
290.138 468.161 290.322 468.227 290.483 468.36 cv
290.646 468.497 290.727 468.695 290.727 468.953 cv
290.727 469.202 290.648 469.397 290.492 469.537 cv
290.333 469.675 290.145 469.747 289.925 469.747 cv
f
295.952 476.352 mo
294.525 473.999 li
293.645 474.829 li
293.645 476.12 li
293.645 476.432 293.562 476.671 293.397 476.838 cv
293.236 477.009 293.043 477.092 292.831 477.092 cv
292.582 477.092 292.384 477.01 292.242 476.842 cv
292.101 476.677 292.027 476.432 292.027 476.108 cv
292.027 469.194 li
292.027 468.835 292.099 468.562 292.235 468.373 cv
292.374 468.182 292.576 468.091 292.831 468.091 cv
293.08 468.091 293.276 468.176 293.424 468.347 cv
293.57 468.517 293.645 468.768 293.645 469.099 cv
293.645 473.032 li
295.467 471.118 li
295.693 470.882 295.863 470.718 295.984 470.631 cv
296.102 470.544 296.246 470.502 296.415 470.502 cv
296.618 470.502 296.786 470.566 296.925 470.694 cv
297.057 470.823 297.125 470.985 297.125 471.178 cv
297.125 471.415 296.904 471.733 296.466 472.129 cv
295.605 472.917 li
297.267 475.532 li
297.388 475.727 297.479 475.871 297.532 475.973 cv
297.584 476.073 297.613 476.173 297.613 476.262 cv
297.613 476.52 297.541 476.721 297.4 476.871 cv
297.259 477.019 297.073 477.092 296.847 477.092 cv
296.649 477.092 296.494 477.042 296.388 476.932 cv
296.282 476.825 296.134 476.631 295.952 476.352 cv
f
299.475 477.092 mo
299.23 477.092 299.02 477.014 298.841 476.854 cv
298.663 476.699 298.573 476.476 298.573 476.189 cv
298.573 475.948 298.659 475.74 298.829 475.568 cv
299.001 475.393 299.209 475.305 299.459 475.305 cv
299.708 475.305 299.919 475.393 300.099 475.563 cv
300.273 475.735 300.362 475.946 300.362 476.189 cv
300.362 476.472 300.273 476.694 300.099 476.852 cv
299.919 477.014 299.712 477.092 299.475 477.092 cv
f
307.536 475.087 mo
307.536 475.287 307.475 475.504 307.355 475.732 cv
307.235 475.964 307.049 476.182 306.8 476.389 cv
306.554 476.597 306.244 476.765 305.867 476.891 cv
305.491 477.018 305.066 477.082 304.597 477.082 cv
303.594 477.082 302.811 476.789 302.248 476.207 cv
301.689 475.622 301.407 474.839 301.407 473.857 cv
301.407 473.19 301.535 472.604 301.794 472.092 cv
302.049 471.583 302.422 471.188 302.908 470.908 cv
303.395 470.629 303.981 470.489 304.654 470.489 cv
305.076 470.489 305.459 470.55 305.812 470.674 cv
306.162 470.796 306.457 470.956 306.703 471.149 cv
306.944 471.345 307.131 471.55 307.258 471.769 cv
307.388 471.988 307.451 472.193 307.451 472.385 cv
307.451 472.578 307.38 472.743 307.236 472.877 cv
307.09 473.011 306.914 473.08 306.712 473.08 cv
306.576 473.08 306.463 473.044 306.374 472.976 cv
306.284 472.906 306.184 472.795 306.075 472.638 cv
305.876 472.339 305.671 472.112 305.453 471.963 cv
305.238 471.811 304.964 471.737 304.631 471.737 cv
304.155 471.737 303.767 471.922 303.473 472.297 cv
303.181 472.67 303.033 473.185 303.033 473.832 cv
303.033 474.137 303.072 474.419 303.148 474.674 cv
303.221 474.928 303.33 475.146 303.473 475.326 cv
303.617 475.505 303.788 475.642 303.989 475.735 cv
304.192 475.831 304.415 475.876 304.654 475.876 cv
304.98 475.876 305.259 475.801 305.489 475.651 cv
305.725 475.5 305.929 475.271 306.106 474.962 cv
306.205 474.78 306.311 474.638 306.424 474.535 cv
306.538 474.432 306.68 474.379 306.847 474.379 cv
307.044 474.379 307.209 474.455 307.337 474.606 cv
307.469 474.756 307.536 474.917 307.536 475.087 cv
f
312.903 473.799 mo
312.903 473.137 312.756 472.623 312.467 472.256 cv
312.178 471.883 311.786 471.7 311.295 471.7 cv
310.978 471.7 310.698 471.783 310.456 471.947 cv
310.215 472.11 310.03 472.352 309.9 472.674 cv
309.769 472.995 309.703 473.37 309.703 473.799 cv
309.703 474.222 309.767 474.591 309.896 474.907 cv
310.027 475.226 310.21 475.467 310.45 475.636 cv
310.691 475.802 310.971 475.888 311.295 475.888 cv
311.786 475.888 312.178 475.703 312.467 475.331 cv
312.756 474.962 312.903 474.449 312.903 473.799 cv
314.53 473.799 mo
314.53 474.28 314.454 474.726 314.308 475.135 cv
314.154 475.543 313.938 475.893 313.652 476.184 cv
313.368 476.477 313.026 476.702 312.632 476.859 cv
312.232 477.014 311.788 477.093 311.295 477.093 cv
310.804 477.093 310.362 477.014 309.969 476.854 cv
309.58 476.699 309.238 476.471 308.954 476.178 cv
308.666 475.88 308.448 475.532 308.296 475.13 cv
308.153 474.728 308.077 474.283 308.077 473.799 cv
308.077 473.307 308.154 472.858 308.301 472.45 cv
308.452 472.041 308.669 471.692 308.95 471.404 cv
309.232 471.116 309.571 470.893 309.969 470.735 cv
310.372 470.58 310.813 470.502 311.295 470.502 cv
311.786 470.502 312.231 470.58 312.632 470.74 cv
313.031 470.897 313.371 471.124 313.659 471.415 cv
313.945 471.711 314.161 472.058 314.309 472.46 cv
314.455 472.866 314.53 473.309 314.53 473.799 cv
f
320.713 473.917 mo
320.713 476.072 li
320.713 476.413 320.637 476.666 320.482 476.838 cv
320.326 477.009 320.124 477.093 319.87 477.093 cv
319.625 477.093 319.425 477.009 319.276 476.838 cv
319.122 476.666 319.044 476.413 319.044 476.072 cv
319.044 473.49 li
319.044 473.081 319.031 472.763 319.004 472.536 cv
318.976 472.315 318.899 472.128 318.778 471.985 cv
318.655 471.838 318.459 471.765 318.196 471.765 cv
317.665 471.765 317.317 471.947 317.148 472.315 cv
316.981 472.676 316.894 473.199 316.894 473.883 cv
316.894 476.072 li
316.894 476.407 316.818 476.662 316.669 476.836 cv
316.512 477.007 316.313 477.093 316.065 477.093 cv
315.818 477.093 315.617 477.007 315.461 476.836 cv
315.304 476.662 315.226 476.407 315.226 476.072 cv
315.226 471.434 li
315.226 471.129 315.295 470.897 315.436 470.74 cv
315.578 470.58 315.764 470.502 315.991 470.502 cv
316.214 470.502 316.399 470.578 316.549 470.724 cv
316.697 470.873 316.77 471.078 316.77 471.339 cv
316.77 471.492 li
317.053 471.157 317.355 470.909 317.673 470.754 cv
317.995 470.592 318.349 470.513 318.744 470.513 cv
319.15 470.513 319.501 470.594 319.792 470.757 cv
320.085 470.919 320.326 471.166 320.517 471.492 cv
320.792 471.162 321.085 470.915 321.399 470.754 cv
321.711 470.593 322.057 470.513 322.438 470.513 cv
322.878 470.513 323.263 470.602 323.584 470.775 cv
323.902 470.948 324.142 471.2 324.3 471.522 cv
324.438 471.818 324.507 472.278 324.507 472.908 cv
324.507 476.072 li
324.507 476.413 324.431 476.666 324.277 476.838 cv
324.123 477.009 323.918 477.093 323.666 477.093 cv
323.419 477.093 323.219 477.007 323.063 476.836 cv
322.906 476.662 322.827 476.407 322.827 476.072 cv
322.827 473.346 li
322.827 472.997 322.812 472.718 322.784 472.51 cv
322.755 472.298 322.673 472.121 322.545 471.98 cv
322.412 471.838 322.213 471.765 321.949 471.765 cv
321.736 471.765 321.533 471.832 321.34 471.958 cv
321.148 472.081 320.998 472.256 320.89 472.466 cv
320.774 472.739 320.713 473.224 320.713 473.917 cv
f
245.272 473.406 mo
245.271 473.395 li
245.272 473.406 li
cp
f
245.354 473.924 mo
245.356 473.924 li
245.325 473.777 245.3 473.63 245.281 473.485 cv
245.3 473.631 245.325 473.778 245.354 473.924 cv
cp
f
245.89 475.428 mo
245.88 475.408 li
245.89 475.428 li
cp
f
245.839 475.328 mo
245.798 475.244 li
245.839 475.328 li
cp
f
245.505 474.503 mo
245.584 474.753 245.679 474.996 245.79 475.227 cv
245.678 474.991 245.584 474.748 245.507 474.503 cv
245.505 474.503 li
cp
f
251.545 467.196 mo
251.859 467.196 252.09 467.22 252.355 467.266 cv
252.43 466.788 li
252.43 466.788 251.698 466.564 250.736 466.642 cv
250.66 466.383 li
250.959 466.319 251.184 466.053 251.184 465.736 cv
251.184 465.372 250.888 465.078 250.523 465.078 cv
250.159 465.078 249.863 465.372 249.863 465.736 cv
249.863 466.053 250.087 466.319 250.386 466.383 cv
250.469 466.672 li
249.448 466.813 248.635 467.211 248.635 467.211 cv
248.779 467.651 li
249.397 467.446 249.933 467.32 250.419 467.268 cv
250.895 467.218 251.253 467.196 251.545 467.196 cv
cp
f
245.878 469.607 mo
245.882 469.602 li
245.953 469.513 li
245.757 469.372 li
245.452 469.149 li
245.435 469.173 244.955 469.614 244.576 470.43 cv
244.52 470.355 li
244.407 470.231 244.248 470.167 244.046 470.171 cv
244.037 470.171 li
243.912 470.171 243.826 470.129 243.77 470.079 cv
243.826 470.008 243.86 469.919 243.86 469.82 cv
243.86 469.591 243.672 469.403 243.441 469.403 cv
243.211 469.403 243.023 469.591 243.023 469.82 cv
243.023 470.052 243.211 470.239 243.441 470.239 cv
243.546 470.226 li
243.648 470.34 243.811 470.439 244.05 470.434 cv
244.173 470.433 244.263 470.465 244.324 470.532 cv
244.424 470.799 li
244.422 470.802 li
244.15 471.545 244.227 472.471 244.227 472.471 cv
244.888 472.497 li
244.902 472.16 244.95 471.571 245.12 471.103 cv
245.449 470.198 245.861 469.631 245.878 469.607 cv
cp
f
257.295 467.748 mo
257.065 467.748 256.877 467.934 256.877 468.166 cv
256.892 468.269 li
256.777 468.373 256.677 468.536 256.681 468.776 cv
256.683 468.899 256.651 468.988 256.584 469.049 cv
256.4 469.137 li
255.908 468.447 255.303 468.027 255.303 468.027 cv
254.828 468.535 li
255.187 468.861 255.553 469.27 255.908 469.779 cv
256.155 470.132 256.407 470.586 256.618 471.039 cv
257.258 470.735 li
257.258 470.735 256.966 470.012 256.555 469.365 cv
256.761 469.244 li
256.887 469.132 256.948 468.972 256.944 468.771 cv
256.943 468.641 256.986 468.553 257.037 468.495 cv
257.109 468.55 257.198 468.584 257.295 468.584 cv
257.527 468.584 257.713 468.397 257.713 468.166 cv
257.713 467.934 257.527 467.748 257.295 467.748 cv
cp
f
255.635 473.5 mo
254.753 473.928 253.304 474.496 251.396 474.762 cv
250.647 474.866 249.921 474.903 249.253 474.903 cv
248.384 474.903 247.616 474.839 247.027 474.764 cv
246.354 474.68 245.828 474.576 245.507 474.503 cv
245.584 474.748 245.678 474.991 245.79 475.227 cv
245.798 475.244 li
245.839 475.328 li
245.88 475.408 li
245.89 475.428 li
246.08 475.785 246.307 476.112 246.566 476.396 cv
247.466 477.38 248.383 477.536 248.391 477.538 cv
248.406 477.539 li
248.419 477.544 li
248.427 477.547 249.24 477.81 250.476 477.81 cv
251.692 477.81 252.886 477.565 254.022 477.08 cv
254.864 476.649 255.661 475.995 256.056 475.411 cv
256.361 474.96 256.582 474.479 256.712 473.978 cv
256.782 473.712 256.837 473.286 256.804 472.837 cv
256.556 473.004 256.164 473.241 255.635 473.5 cv
cp
f
248.678 469.355 mo
249.651 469.355 250.439 470.144 250.439 471.117 cv
250.439 472.089 249.651 472.876 248.678 472.876 cv
247.707 472.876 246.918 472.089 246.918 471.117 cv
246.918 470.144 247.707 469.355 248.678 469.355 cv
cp
253.829 469.399 mo
254.43 469.399 254.919 469.888 254.919 470.488 cv
254.919 471.09 254.43 471.578 253.829 471.578 cv
253.229 471.578 252.74 471.09 252.74 470.488 cv
252.74 469.888 253.229 469.399 253.829 469.399 cv
cp
246.161 469.815 mo
246.135 469.853 245.753 470.394 245.451 471.224 cv
245.225 471.846 245.235 472.751 245.235 472.761 cv
245.235 472.763 li
245.235 472.976 245.247 473.186 245.271 473.395 cv
245.272 473.406 li
245.281 473.485 li
245.3 473.63 245.325 473.777 245.356 473.924 cv
245.793 474.035 248.405 474.645 251.323 474.238 cv
253.153 473.983 254.542 473.442 255.386 473.033 cv
256.086 472.694 256.537 472.386 256.71 472.259 cv
256.537 471.617 256.059 470.609 255.621 469.98 cv
254.367 468.19 253.016 467.731 252.323 467.616 cv
252.058 467.573 251.846 467.547 251.545 467.547 cv
251.266 467.547 250.919 467.571 250.456 467.62 cv
249.992 467.667 249.474 467.789 248.873 467.992 cv
248.031 468.274 247.269 468.716 246.669 469.271 cv
246.649 469.291 li
246.56 469.372 246.374 469.545 246.161 469.815 cv
cp
f
347.678 240.671 mo
309.989 240.671 279.436 236.372 279.436 231.07 cv
279.436 229.205 283.215 227.464 289.754 225.991 cv
303.031 236.19 324.199 238.441 348.073 238.476 cv
348.077 238.476 li
348.168 238.476 348.257 238.476 348.348 238.476 cv
348.352 238.476 348.359 238.476 348.363 238.476 cv
348.381 238.476 348.404 238.476 348.422 238.476 cv
348.424 238.476 348.424 238.476 348.427 238.476 cv
348.445 238.476 348.462 238.476 348.479 238.476 cv
348.486 238.476 348.496 238.476 348.504 238.476 cv
348.518 238.476 348.529 238.476 348.544 238.476 cv
348.554 238.476 348.56 238.476 348.571 238.476 cv
348.59 238.476 348.614 238.476 348.633 238.476 cv
348.633 238.476 li
372.472 238.476 393.653 236.319 407.06 226.335 cv
412.699 227.732 415.92 229.348 415.92 231.07 cv
415.92 236.372 385.367 240.671 347.678 240.671 cv
.0992752 .0885634 .158938 0 cmyk
f
381.241 65.5908 mo
385.566 70.1352 378.342 87.6461 374.026 96.973 cv
322.857 96.973 li
311.381 75.6949 312.478 63.698 314.133 62.0246 cv
314.142 62.0063 li
314.243 61.9148 314.334 61.86 314.426 61.8326 cv
317.754 60.9274 320.671 64.3563 323.515 65.5908 cv
325.609 66.4959 328.379 67.2824 330.638 66.5874 cv
333.006 65.8468 334.296 65.0696 336.783 65.7462 cv
339.078 66.368 339.864 69.2117 342.159 70.0439 cv
343.22 70.428 344.381 70.4005 345.506 70.3731 cv
347.655 70.3182 350.096 70.2724 351.98 69.0928 cv
352.922 68.4986 353.535 67.5476 354.403 66.8344 cv
355.299 66.0936 355.949 66.0114 357 65.7554 cv
358.337 65.4309 359.53 66.1871 360.704 66.9434 cv
362.01 67.7856 363.292 68.6277 364.718 67.9774 cv
365.422 67.6665 365.879 67.0081 366.51 66.7155 cv
367.159 66.4228 367.936 66.56 368.659 66.6698 cv
370.451 66.944 372.015 66.6423 373.094 65.5451 cv
374.072 64.5574 375.233 62.0886 377.373 62.7378 cv
379.037 63.2408 380.189 64.777 381.241 65.5908 cv
0 .561456 .61062 0 cmyk
f
322.857 96.973 mo
374.026 96.973 li
372.38 100.53 371.155 102.898 371.155 102.898 cv
326.24 102.898 li
325.005 100.85 323.881 98.8749 322.857 96.973 cv
.0366522 .324346 .713985 0 cmyk
f
371.155 102.898 mo
399.401 119.175 422.032 160.213 422.032 191.86 cv
422.032 232.24 389.178 238.476 348.633 238.476 cv
308.098 238.476 275.235 232.24 275.235 191.86 cv
275.235 160.213 297.994 119.175 326.24 102.898 cv
371.155 102.898 li
0 .561456 .61062 0 cmyk
f
323.515 65.5908 mo
320.671 64.3563 317.754 60.9274 314.426 61.8326 cv
314.334 61.86 314.243 61.9148 314.142 62.0063 cv
315.249 60.013 316.044 59.318 317.745 58.4401 cv
319.455 57.5624 319.793 57.6081 321.677 57.9738 cv
323.57 58.3305 325.472 58.8608 327.383 58.6321 cv
329.806 58.3396 332.074 56.84 334.497 57.1235 cv
337.03 57.4069 339.114 59.5832 341.666 59.5923 cv
344.244 59.6015 346.366 57.3979 348.926 57.1509 cv
351.477 56.9041 353.781 58.6231 356.305 59.0437 cv
359.213 59.5282 362.093 58.2664 365.001 57.7452 cv
367.562 57.2879 370.232 57.4161 372.737 58.1109 cv
374.593 58.6321 377.94 59.9581 381.241 65.5908 cv
380.189 64.777 379.037 63.2408 377.373 62.7378 cv
375.233 62.0886 374.072 64.5574 373.094 65.5451 cv
372.015 66.6423 370.451 66.944 368.659 66.6698 cv
367.936 66.56 367.159 66.4228 366.51 66.7155 cv
365.879 67.0081 365.422 67.6665 364.718 67.9774 cv
363.292 68.6277 362.01 67.7856 360.704 66.9434 cv
359.53 66.1871 358.337 65.4309 357 65.7554 cv
355.949 66.0114 355.299 66.0936 354.403 66.8344 cv
353.535 67.5476 352.922 68.4986 351.98 69.0928 cv
350.096 70.2724 347.655 70.3182 345.506 70.3731 cv
344.381 70.4005 343.22 70.428 342.159 70.0439 cv
339.864 69.2117 339.078 66.368 336.783 65.7462 cv
334.296 65.0696 333.006 65.8468 330.638 66.5874 cv
328.379 67.2824 325.609 66.4959 323.515 65.5908 cv
.132265 .578332 .63827 .00885023 cmyk
f
422.032 191.793 mo
422.032 191.789 422.032 191.782 422.032 191.778 cv
422.032 191.783 422.032 191.788 422.032 191.793 cv
422.032 191.713 mo
422.032 191.707 422.032 191.706 422.032 191.7 cv
422.032 191.705 422.032 191.708 422.032 191.713 cv
422.032 191.639 mo
422.032 191.635 422.032 191.634 422.032 191.63 cv
422.032 191.633 422.032 191.636 422.032 191.639 cv
422.032 191.565 mo
422.032 191.559 422.032 191.555 422.032 191.549 cv
422.032 191.554 422.032 191.56 422.032 191.565 cv
422.031 191.482 mo
422.031 191.48 422.031 191.477 422.031 191.475 cv
422.031 191.477 422.031 191.481 422.031 191.482 cv
422.031 191.411 mo
422.031 191.408 422.031 191.405 422.031 191.401 cv
422.031 191.406 422.031 191.407 422.031 191.411 cv
422.03 191.335 mo
422.03 191.331 422.03 191.325 422.03 191.321 cv
422.03 191.326 422.03 191.33 422.03 191.335 cv
422.03 191.254 mo
422.029 191.25 422.029 191.249 422.029 191.245 cv
422.029 191.247 422.03 191.253 422.03 191.254 cv
422.029 191.182 mo
422.029 191.18 422.029 191.174 422.029 191.172 cv
422.029 191.176 422.029 191.179 422.029 191.182 cv
422.028 191.104 mo
422.028 191.1 422.028 191.098 422.028 191.094 cv
422.028 191.097 422.028 191.1 422.028 191.104 cv
422.026 190.953 mo
422.026 190.949 422.026 190.947 422.026 190.943 cv
422.026 190.946 422.026 190.95 422.026 190.953 cv
422.025 190.873 mo
422.025 190.871 422.025 190.868 422.025 190.866 cv
422.025 190.869 422.025 190.87 422.025 190.873 cv
422.023 190.721 mo
422.023 190.719 422.023 190.717 422.022 190.715 cv
422.023 190.718 422.023 190.718 422.023 190.721 cv
422.021 190.642 mo
422.021 190.64 422.021 190.642 422.021 190.64 cv
422.021 190.642 li
422.018 190.49 mo
422.018 190.487 li
422.018 190.49 li
.0992752 .0885634 .158938 0 cmyk
f
348.571 238.476 mo
348.56 238.476 348.554 238.476 348.544 238.476 cv
348.553 238.476 348.561 238.476 348.571 238.476 cv
348.504 238.476 mo
348.496 238.476 348.486 238.476 348.479 238.476 cv
348.486 238.476 348.496 238.476 348.504 238.476 cv
348.427 238.476 mo
348.424 238.476 348.424 238.476 348.422 238.476 cv
348.424 238.476 348.425 238.476 348.427 238.476 cv
348.363 238.476 mo
348.359 238.476 348.352 238.476 348.348 238.476 cv
348.353 238.476 348.359 238.476 348.363 238.476 cv
348.077 238.476 mo
348.073 238.476 li
348.076 238.476 348.074 238.476 348.077 238.476 cv
.188418 .169192 .293126 0 cmyk
f
348.633 238.476 mo
348.633 238.476 li
348.613 238.476 348.591 238.476 348.571 238.476 cv
348.561 238.476 348.553 238.476 348.544 238.476 cv
348.531 238.476 348.517 238.476 348.504 238.476 cv
348.496 238.476 348.486 238.476 348.479 238.476 cv
348.462 238.476 348.445 238.476 348.427 238.476 cv
348.425 238.476 348.424 238.476 348.422 238.476 cv
348.403 238.476 348.382 238.476 348.363 238.476 cv
348.359 238.476 348.353 238.476 348.348 238.476 cv
348.256 238.476 348.168 238.476 348.077 238.476 cv
348.074 238.476 348.076 238.476 348.073 238.476 cv
324.446 238.442 303.485 236.229 290.183 226.3 cv
295.044 227.399 300.054 227.98 305.176 227.98 cv
350.233 227.98 386.759 183.505 386.759 128.641 cv
386.759 124.363 386.534 120.148 386.102 116.013 cv
386.16 116.03 386.218 116.046 386.277 116.062 cv
386.96 116.246 387.65 116.356 388.343 116.42 cv
407.685 135.949 421.518 165.863 422.018 190.487 cv
422.018 190.49 li
422.019 190.541 422.02 190.589 422.021 190.64 cv
422.021 190.642 422.021 190.64 422.021 190.642 cv
422.022 190.666 422.022 190.691 422.022 190.715 cv
422.023 190.717 422.023 190.719 422.023 190.721 cv
422.023 190.769 422.024 190.818 422.025 190.866 cv
422.025 190.868 422.025 190.871 422.025 190.873 cv
422.025 190.896 422.026 190.92 422.026 190.943 cv
422.026 190.947 422.026 190.949 422.026 190.953 cv
422.027 191.001 422.027 191.046 422.028 191.094 cv
422.028 191.098 422.028 191.1 422.028 191.104 cv
422.028 191.126 422.029 191.15 422.029 191.172 cv
422.029 191.174 422.029 191.18 422.029 191.182 cv
422.029 191.204 422.029 191.223 422.029 191.245 cv
422.029 191.249 422.029 191.25 422.03 191.254 cv
422.03 191.276 422.03 191.299 422.03 191.321 cv
422.03 191.325 422.03 191.331 422.03 191.335 cv
422.03 191.357 422.031 191.379 422.031 191.401 cv
422.031 191.405 422.031 191.408 422.031 191.411 cv
422.031 191.432 422.031 191.455 422.031 191.475 cv
422.031 191.477 422.031 191.48 422.031 191.482 cv
422.031 191.506 422.031 191.525 422.032 191.549 cv
422.032 191.555 422.032 191.559 422.032 191.565 cv
422.032 191.585 422.032 191.609 422.032 191.63 cv
422.032 191.634 422.032 191.635 422.032 191.639 cv
422.032 191.66 422.032 191.679 422.032 191.7 cv
422.032 191.706 422.032 191.707 422.032 191.713 cv
422.032 191.735 422.032 191.756 422.032 191.778 cv
422.032 191.782 422.032 191.789 422.032 191.793 cv
422.032 191.815 422.032 191.838 422.032 191.86 cv
422.032 232.24 389.178 238.476 348.633 238.476 cv
.071107 .618097 .710872 .00180056 cmyk
f
374.026 96.973 mo
322.857 96.973 li
322.857 96.973 352.505 96.2126 366.708 89.9258 cv
372.386 87.4126 376.23 73.514 378.349 63.1801 cv
379.51 63.8589 380.409 64.9472 381.241 65.5908 cv
385.059 69.6027 379.877 83.7201 375.64 93.3909 cv
375.078 94.6746 374.532 95.88 374.026 96.973 cv
f
360.314 102.844 mo
360.198 109.815 368.059 115.055 371.232 120.64 cv
374.357 126.14 374.523 131.923 374.318 138.103 cv
374.363 136.742 380.603 135.541 380.652 134.087 cv
380.857 127.907 380.69 122.123 377.566 116.623 cv
374.393 111.038 366.532 105.798 366.647 98.8278 cv
366.625 100.154 360.337 101.424 360.314 102.844 cv
.0366522 .324346 .713985 0 cmyk
f
364.258 105.209 mo
370.741 102.804 375.242 107.97 379.633 111.932 cv
381.576 113.686 383.701 115.366 386.277 116.062 cv
388.019 116.532 389.802 116.516 391.587 116.5 cv
392.762 116.49 393.938 116.48 395.104 116.608 cv
401.243 117.286 402.617 121.974 405.242 126.698 cv
408.192 132.009 412.912 135.876 419.087 136.386 cv
418.399 136.329 418.247 129.132 417.452 129.066 cv
411.58 128.582 406.911 125.043 403.977 120.02 cv
401.148 115.176 399.882 110.04 393.468 109.289 cv
387.455 108.585 383.457 109.373 378.529 105.101 cv
373.92 101.103 369.418 95.3683 362.622 97.8898 cv
362.255 98.0262 364.521 105.112 364.258 105.209 cv
f
362.24 196.256 mo
359.936 197.817 356.07 199.378 351.163 199.378 cv
345.142 199.378 339.789 197.074 336.072 192.762 cv
333.247 189.64 331.389 185.328 330.72 179.975 cv
326.11 179.975 li
326.11 176.333 li
330.348 176.333 li
330.348 175.961 330.348 175.589 330.348 175.217 cv
330.348 174.028 330.422 172.913 330.497 171.872 cv
326.11 171.872 li
326.11 168.155 li
331.018 168.155 li
331.909 162.951 334.14 158.64 337.113 155.591 cv
340.904 151.651 345.736 149.421 351.832 149.421 cv
356.219 149.421 359.639 150.685 361.72 151.8 cv
360.233 156.707 li
358.375 155.591 355.252 154.625 351.907 154.625 cv
347.893 154.625 344.621 156.038 342.094 158.714 cv
339.863 160.87 338.377 164.215 337.634 168.155 cv
358.375 168.155 li
358.375 171.872 li
336.965 171.872 li
336.89 172.838 336.815 173.954 336.815 174.995 cv
336.815 175.44 336.815 175.812 336.815 176.333 cv
358.375 176.333 li
358.375 179.975 li
337.336 179.975 li
337.931 184.287 339.418 187.484 341.425 189.714 cv
344.176 192.613 347.893 194.026 351.907 194.026 cv
355.847 194.026 359.267 192.539 360.977 191.573 cv
362.24 196.256 li
cp
.0779431 .0682383 .132265 0 cmyk
f
339.54 126.621 mo
339.54 126.621 342.893 108.18 342.512 102.922 cv
346.169 102.922 li
346.169 102.922 345.636 115.115 339.54 126.621 cv
.071107 .618097 .710872 .00180056 cmyk
f
313.689 118.772 mo
318.52 111.409 324.736 105.431 326.81 103.524 cv
328.022 103.279 329.51 103.034 330.948 102.942 cv
324.719 105.17 313.689 118.772 313.689 118.772 cv
f
337.821 102.898 mo
336.185 102.898 li
336.187 102.884 li
337.825 102.884 li
337.821 102.898 li
.125154 .387335 .780087 .00134279 cmyk
f
334.625 113.248 mo
336.185 102.898 li
337.821 102.898 li
334.625 113.248 li
.071107 .618097 .710872 .00180056 cmyk
f
277.742 177.675 mo
277.742 177.675 278.715 174.839 280.174 170.586 cv
281.63 166.332 283.561 160.648 285.838 155.066 cv
286.975 152.275 288.205 149.514 289.463 146.968 cv
290.717 144.419 292.002 142.089 293.171 140.131 cv
294.341 138.174 295.385 136.582 296.131 135.477 cv
296.889 134.382 297.323 133.755 297.323 133.755 cv
297.323 133.755 299.934 130.959 302.74 128.413 cv
303.441 127.772 304.135 127.144 304.826 126.561 cv
305.507 126.002 306.143 125.48 306.688 125.032 cv
307.764 124.139 308.374 123.42 308.374 123.42 cv
308.374 123.42 307.93 124.256 307.052 125.379 cv
306.615 125.932 306.104 126.578 305.558 127.269 cv
305.034 127.95 304.484 128.718 303.947 129.478 cv
301.778 132.519 299.887 135.7 299.887 135.7 cv
299.887 135.7 299.428 136.277 298.624 137.286 cv
297.832 138.305 296.718 139.777 295.456 141.598 cv
294.194 143.421 292.795 145.599 291.402 148.007 cv
290.006 150.411 288.615 153.043 287.307 155.723 cv
284.688 161.083 282.382 166.618 280.644 170.764 cv
278.903 174.91 277.742 177.675 277.742 177.675 cv
.0364385 .589654 .653376 0 cmyk
f
332.034 95.9121 mo
332.034 95.9121 332.036 95.5017 331.847 94.9558 cv
331.663 94.4198 331.319 93.6817 330.98 92.9784 cv
330.291 91.5682 329.468 90.2421 329.468 90.2421 cv
329.468 90.2421 329.234 89.056 328.775 87.2472 cv
328.541 86.3353 328.268 85.2714 327.976 84.1315 cv
327.696 83.0105 327.355 81.8122 327.008 80.6065 cv
326.306 78.1978 325.626 75.7491 325.276 73.8848 cv
325.09 72.9552 324.99 72.1715 324.919 71.6263 cv
324.864 71.0789 324.833 70.7661 324.833 70.7661 cv
324.833 70.7661 324.914 71.0691 325.054 71.5992 cv
325.211 72.1249 325.433 72.8737 325.761 73.7503 cv
326.395 75.5119 327.435 77.7702 328.514 80.0392 cv
329.05 81.1756 329.586 82.3224 330.059 83.424 cv
330.53 84.5032 330.969 85.5105 331.346 86.3739 cv
332.102 88.118 332.557 89.3394 332.557 89.3394 cv
332.557 89.3394 332.641 91.0062 332.558 92.6624 cv
332.511 93.4921 332.459 94.2924 332.349 94.9266 cv
332.238 95.5554 332.034 95.9121 332.034 95.9121 cv
f
322.857 96.973 mo
322.857 96.973 323.614 98.7696 323.881 100.598 cv
324.148 102.427 324.186 104.142 324.186 104.142 cv
324.186 104.142 327.691 103.151 330.948 102.942 cv
334.206 102.732 336.111 102.656 336.111 102.656 cv
324.567 97.6647 li
322.857 96.973 li
.0366522 .324346 .713985 0 cmyk
f
372.458 105.742 mo
372.458 105.742 370.02 104.37 367.81 104.332 cv
366.324 101.094 li
366.324 101.094 367.239 102.313 368.534 103.075 cv
369.829 103.837 371.887 105.094 372.458 105.742 cv
.125154 .387335 .780087 .00134279 cmyk
f
360.992 102 mo
360.648 101.662 359.394 101.701 359.095 100.913 cv
358.78 100.084 359.952 97.5123 359.952 97.5123 cv
359.952 97.5123 358.98 101.027 361.009 101.541 cv
361.204 101.591 361.396 101.628 361.584 101.655 cv
361.365 101.769 361.165 101.884 360.992 102 cv
f
365.41 107.085 mo
365.41 107.085 361.295 102.456 361.038 102.056 cv
361.025 102.036 361.01 102.017 360.992 102 cv
361.165 101.884 361.365 101.769 361.584 101.655 cv
361.832 101.69 362.073 101.705 362.305 101.705 cv
362.704 101.705 363.074 101.658 363.405 101.578 cv
363.436 101.693 363.467 101.808 363.498 101.923 cv
362.982 102.117 362.728 102.515 363.095 103.142 cv
363.314 103.515 363.805 104.351 364.279 105.158 cv
364.276 105.188 364.27 105.205 364.258 105.209 cv
364.272 105.204 364.286 105.199 364.3 105.194 cv
364.87 106.166 365.41 107.085 365.41 107.085 cv
f
364.258 105.209 mo
364.27 105.205 364.276 105.188 364.279 105.158 cv
364.286 105.17 364.293 105.182 364.3 105.194 cv
364.286 105.199 364.272 105.204 364.258 105.209 cv
363.498 101.923 mo
363.467 101.808 363.436 101.693 363.405 101.578 cv
364.245 101.375 364.825 100.965 364.953 100.598 cv
364.981 100.484 li
364.981 100.484 364.924 101.713 364.067 101.799 cv
363.858 101.819 363.665 101.861 363.498 101.923 cv
f
372.605 99.8888 mo
372.034 99.4611 371.45 99.0665 370.85 98.7201 cv
371.715 98.6946 372.721 98.638 372.925 98.5124 cv
372.605 99.8888 li
f
372.554 100.113 mo
372.554 100.113 371.21 98.8268 369.525 98.741 cv
369.525 98.741 370.14 98.741 370.85 98.7201 cv
371.45 99.0665 372.034 99.4611 372.605 99.8888 cv
372.554 100.113 li
f
377.497 105.199 mo
377.497 105.199 373.325 101.856 370.696 101.084 cv
368.067 100.313 366.01 99.9983 365.524 99.8269 cv
365.038 99.6554 366.181 99.3411 366.181 99.3411 cv
366.291 99.2744 366.451 99.2437 366.651 99.2437 cv
367.906 99.2437 370.726 100.449 372.525 101.484 cv
374.611 102.684 377.497 105.199 377.497 105.199 cv
f
336.016 102.091 mo
335.889 102.091 335.762 102.089 335.635 102.084 cv
335.334 102.074 335.016 102.059 334.686 102.04 cv
332.652 101.161 li
336.408 101.067 340.842 100.927 342.036 100.77 cv
342.036 100.77 339.182 102.091 336.016 102.091 cv
f
334.686 102.04 mo
331.389 101.851 326.948 101.284 326.948 101.284 cv
326.948 101.284 329.571 101.238 332.652 101.161 cv
334.686 102.04 li
f
361.066 100.979 mo
360.114 100.56 360.19 98.4267 360.381 97.817 cv
360.381 97.817 360.609 98.7315 360.609 99.2268 cv
360.609 99.7221 361.066 100.979 361.066 100.979 cv
.0104982 .130465 .412879 0 cmyk
f
374.859 136.994 mo
374.859 136.994 375.028 136.618 375.173 136.026 cv
375.321 135.435 375.409 134.628 375.362 133.827 cv
375.343 133.422 375.297 133.043 375.231 132.648 cv
375.208 132.225 375.191 131.906 375.158 131.596 cv
375.102 130.995 375.042 130.597 375.042 130.597 cv
375.042 130.597 374.998 129.309 374.635 127.398 cv
374.457 126.443 374.199 125.335 373.865 124.161 cv
373.701 123.572 373.516 122.969 373.322 122.356 cv
373.224 122.057 373.125 121.755 373.026 121.451 cv
372.904 121.161 372.736 120.876 372.588 120.59 cv
372.272 120.025 372.005 119.428 371.651 118.895 cv
371.308 118.356 370.942 117.843 370.569 117.36 cv
369.82 116.395 369.041 115.556 368.349 114.862 cv
366.957 113.479 365.95 112.637 365.95 112.637 cv
365.95 112.637 366.988 113.438 368.436 114.771 cv
369.157 115.441 369.972 116.254 370.767 117.2 cv
371.163 117.674 371.554 118.18 371.924 118.714 cv
372.305 119.244 372.598 119.837 372.943 120.401 cv
373.107 120.691 373.283 120.965 373.428 121.27 cv
373.544 121.583 373.659 121.894 373.774 122.202 cv
373.993 122.811 374.203 123.413 374.392 124.001 cv
374.774 125.175 375.081 126.291 375.3 127.259 cv
375.746 129.197 375.844 130.534 375.844 130.534 cv
375.844 130.534 375.855 130.951 375.837 131.575 cv
375.832 131.877 375.805 132.273 375.78 132.615 cv
375.796 132.983 375.796 133.421 375.765 133.832 cv
375.711 134.668 375.516 135.485 375.293 136.063 cv
375.072 136.643 374.859 136.994 374.859 136.994 cv
f
399.528 117.458 mo
399.528 117.458 399.015 117.025 398.093 116.674 cv
397.181 116.31 395.89 116.04 394.591 115.955 cv
394.161 115.929 393.729 115.92 393.307 115.92 cv
392.457 115.92 391.65 115.957 390.989 115.973 cv
390.379 115.991 389.89 115.995 389.604 115.995 cv
389.425 115.995 389.325 115.993 389.325 115.993 cv
389.325 115.993 388.492 115.86 387.68 115.643 cv
386.863 115.44 386.098 115.115 386.098 115.115 cv
386.098 115.115 386.915 115.244 387.732 115.244 cv
387.733 115.244 387.735 115.244 387.736 115.244 cv
387.812 115.246 387.888 115.246 387.964 115.246 cv
388.697 115.246 389.365 115.19 389.365 115.19 cv
389.365 115.19 390.01 115.248 390.995 115.294 cv
391.98 115.346 393.306 115.374 394.634 115.555 cv
395.956 115.743 397.247 116.119 398.144 116.559 cv
399.05 116.987 399.528 117.458 399.528 117.458 cv
f
332.468 97.8953 mo
325.576 97.398 li
332.491 97.0911 li
354.608 97.7981 li
332.468 97.8953 li
f
321.976 90.1971 mo
321.976 90.1971 321.756 89.8388 321.341 89.2362 cv
320.966 88.6136 320.335 87.7828 319.674 86.7308 cv
319.018 85.6755 318.169 84.4776 317.438 83.0599 cv
316.678 81.6741 316.046 79.9842 315.705 78.2943 cv
315.382 76.5926 315.264 74.8914 315.249 73.3222 cv
315.242 71.7457 315.273 70.3634 315.182 69.1106 cv
315.102 67.8754 315.121 66.8214 315.095 66.0918 cv
315.109 65.357 315.118 64.9369 315.118 64.9369 cv
315.118 64.9369 315.239 65.3386 315.45 66.0412 cv
315.625 66.7488 315.963 67.7436 316.213 68.9743 cv
316.466 70.1861 316.756 71.697 316.878 73.2279 cv
317.045 74.7608 317.19 76.3766 317.525 77.9288 cv
317.808 79.502 318.324 80.9503 318.917 82.3635 cv
319.514 83.7585 320.078 85.0987 320.594 86.2371 cv
321.114 87.3743 321.426 88.3904 321.669 89.0809 cv
321.864 89.792 321.976 90.1971 321.976 90.1971 cv
0 .454383 .582849 0 cmyk
f
301.745 137.289 mo
301.745 137.289 302.084 136.761 302.64 135.818 cv
303.233 134.901 303.983 133.53 304.96 131.94 cv
305.942 130.351 307.002 128.437 308.297 126.47 cv
309.558 124.48 311.111 122.459 312.665 120.511 cv
314.253 118.574 315.876 116.658 317.494 114.948 cv
319.099 113.224 320.719 111.73 322.101 110.454 cv
323.487 109.179 324.751 108.237 325.608 107.556 cv
326.497 106.911 327.005 106.542 327.005 106.542 cv
327.005 106.542 326.585 107.007 325.85 107.82 cv
325.096 108.611 324.091 109.808 322.84 111.187 cv
321.585 112.565 320.212 114.251 318.716 116.028 cv
317.234 117.82 315.653 119.73 314.11 121.676 cv
312.522 123.602 311.016 125.525 309.64 127.401 cv
308.255 129.261 306.94 131.027 305.824 132.525 cv
304.704 134.034 303.645 135.203 302.931 136.034 cv
302.176 136.833 301.745 137.289 301.745 137.289 cv
f
331.12 129.745 mo
331.12 129.745 331.18 129.328 331.286 128.596 cv
331.431 127.877 331.564 126.828 331.855 125.611 cv
332.147 124.395 332.426 122.958 332.835 121.453 cv
333.221 119.941 333.702 118.35 334.176 116.756 cv
334.682 115.177 335.206 113.583 335.718 112.129 cv
336.149 110.702 336.507 109.275 336.824 108.055 cv
337.132 106.828 337.566 105.836 337.865 105.16 cv
338.203 104.493 338.435 104.142 338.435 104.142 cv
338.435 104.142 338.321 104.551 338.206 105.27 cv
338.055 105.98 337.985 107.013 337.846 108.245 cv
337.692 109.478 337.646 110.945 337.295 112.545 cv
336.921 114.086 336.43 115.666 335.958 117.272 cv
335.445 118.861 334.939 120.452 334.4 121.924 cv
333.884 123.403 333.3 124.751 332.852 125.922 cv
332.402 127.092 331.918 128.032 331.632 128.706 cv
331.306 129.368 331.12 129.745 331.12 129.745 cv
f
339.578 135.231 mo
339.578 135.231 339.589 135.069 339.607 134.787 cv
339.658 134.523 339.656 134.117 339.751 133.684 cv
339.854 133.254 339.894 132.725 340.029 132.196 cv
340.143 131.658 340.317 131.101 340.481 130.536 cv
340.682 129.982 340.874 129.419 341.12 128.909 cv
341.345 128.392 341.659 127.941 341.885 127.541 cv
342.109 127.141 342.413 126.85 342.576 126.633 cv
342.778 126.43 342.893 126.316 342.893 126.316 cv
342.893 126.316 342.901 126.477 342.915 126.762 cv
342.891 127.031 342.936 127.438 342.871 127.882 cv
342.803 128.325 342.794 128.865 342.676 129.41 cv
342.582 129.963 342.412 130.535 342.245 131.112 cv
342.039 131.678 341.83 132.249 341.56 132.759 cv
341.304 133.275 340.965 133.716 340.704 134.102 cv
340.445 134.489 340.114 134.751 339.927 134.95 cv
339.705 135.129 339.578 135.231 339.578 135.231 cv
f
349.827 70.8423 mo
349.827 70.8423 349.957 70.7913 350.185 70.7011 cv
350.415 70.6194 350.73 70.4721 351.105 70.3084 cv
351.481 70.1451 351.894 69.9068 352.333 69.6515 cv
352.768 69.3897 353.225 69.0951 353.675 68.7812 cv
354.133 68.4779 354.572 68.1517 355.021 67.866 cv
355.465 67.5767 355.926 67.3587 356.333 67.2112 cv
356.701 67.0794 357.038 67.0518 357.283 67.0518 cv
357.312 67.0518 357.339 67.0522 357.365 67.0528 cv
357.616 67.0677 357.752 67.1086 357.752 67.1086 cv
357.752 67.1086 357.609 67.1116 357.375 67.172 cv
357.14 67.2158 356.825 67.3456 356.471 67.5293 cv
356.115 67.7146 355.739 68.0011 355.333 68.3113 cv
354.932 68.6264 354.485 68.9705 354.024 69.2917 cv
353.556 69.6028 353.073 69.9039 352.59 70.1317 cv
352.11 70.3674 351.631 70.519 351.222 70.6359 cv
350.813 70.7535 350.456 70.7846 350.214 70.8186 cv
349.967 70.8338 349.827 70.8423 349.827 70.8423 cv
f
330.387 67.7299 mo
330.195 67.7299 330.015 67.7084 329.859 67.6982 cv
329.677 67.6868 329.524 67.6362 329.419 67.6168 cv
329.313 67.5843 329.253 67.5658 329.253 67.5658 cv
329.253 67.5658 329.311 67.5409 329.412 67.4974 cv
329.514 67.4668 329.656 67.3969 329.828 67.3529 cv
330 67.311 330.197 67.2361 330.411 67.189 cv
330.624 67.1343 330.853 67.094 331.081 67.0481 cv
331.312 67.0141 331.542 66.9741 331.762 66.9554 cv
331.981 66.9285 332.193 66.9364 332.372 66.923 cv
332.407 66.9205 332.442 66.9195 332.476 66.9195 cv
332.543 66.9195 332.606 66.9235 332.663 66.9275 cv
332.72 66.9317 332.771 66.9357 332.814 66.9357 cv
332.925 66.9488 332.987 66.9562 332.987 66.9562 cv
332.987 66.9562 332.935 66.9911 332.843 67.0532 cv
332.748 67.1015 332.617 67.1956 332.449 67.2622 cv
332.282 67.3289 332.089 67.4249 331.873 67.489 cv
331.658 67.5601 331.423 67.6094 331.187 67.6576 cv
330.949 67.6918 330.71 67.7237 330.482 67.728 cv
330.45 67.7293 330.419 67.7299 330.387 67.7299 cv
f
347.236 91.5687 mo
347.236 91.5687 347.379 91.4156 347.536 91.0996 cv
347.71 90.7923 347.844 90.3097 347.942 89.7191 cv
348.043 89.1255 348.096 88.4134 348.161 87.6606 cv
348.218 86.9052 348.266 86.0976 348.288 85.2872 cv
348.312 84.4812 348.335 83.6948 348.358 82.9008 cv
348.386 82.1862 348.416 81.416 348.44 80.8099 cv
348.461 80.1969 348.52 79.6857 348.545 79.3283 cv
348.585 78.9704 348.608 78.7671 348.608 78.7671 cv
348.608 78.7671 348.629 78.9704 348.666 79.3285 cv
348.691 79.6854 348.755 80.1949 348.788 80.8065 cv
348.821 81.4183 348.882 82.1324 348.903 82.8996 cv
348.931 83.6668 348.929 84.4873 348.907 85.3092 cv
348.871 86.1304 348.812 86.9534 348.701 87.7196 cv
348.595 88.4875 348.439 89.1907 348.281 89.7943 cv
348.122 90.4017 347.86 90.8763 347.637 91.1641 cv
347.407 91.4512 347.236 91.5687 347.236 91.5687 cv
f
149.77 240.671 mo
106.32 240.671 71.0964 236.768 71.0964 231.954 cv
71.0964 230.172 75.9189 228.516 84.198 227.136 cv
85.3837 228.861 86.7939 230.105 88.3772 230.896 cv
96.9277 235.181 122.918 238.576 146.993 238.822 cv
147.921 238.831 148.846 238.836 149.767 238.836 cv
174.587 238.836 202.277 235.346 211.167 230.896 cv
212.751 230.105 214.16 228.862 215.345 227.136 cv
223.622 228.516 228.444 230.173 228.444 231.954 cv
228.444 236.768 193.221 240.671 149.77 240.671 cv
.0992752 .0885634 .158938 0 cmyk
f
212.307 169.796 mo
223.487 207.716 220.057 226.456 211.167 230.896 cv
202.277 235.346 174.587 238.836 149.767 238.836 cv
124.947 238.836 97.2573 235.346 88.3772 230.896 cv
79.4873 226.456 76.0473 207.716 87.2373 169.796 cv
98.3073 132.256 132.527 94.4561 132.527 94.4561 cv
149.767 94.4561 li
167.017 94.4561 li
167.017 94.4561 201.237 132.256 212.307 169.796 cv
.280217 .18262 .728328 .000274662 cmyk
f
176.087 55.1362 mo
180.047 56.1161 172.727 78.3761 169.007 88.9561 cv
129.237 88.9561 li
123.327 78.7961 111.837 57.536 115.247 51.4661 cv
116.434 49.3551 124.475 52.3108 132.588 55.2666 cv
138.964 57.5895 145.384 59.9125 148.557 59.7761 cv
155.767 59.476 170.867 53.8462 176.087 55.1362 cv
f
129.237 88.9561 mo
169.007 88.9561 li
167.837 92.286 167.017 94.4561 167.017 94.4561 cv
149.767 94.4561 li
132.527 94.4561 li
132.527 94.4561 131.187 92.3061 129.237 88.9561 cv
.0885939 .116335 .722957 0 cmyk
f
.0865492 .0589609 .181369 0 cmyk
%ADOBeginSubsetFont: Glegoo-Regular Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Glegoo-Regular def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 36 /dollar putdef/FontBBox {-628 -518 1459 1267} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B536D0C34169B5B8AB99DAB070DBC9BF69C5B56E9C78F12322C0B7B7B29D830C49> |-/dollar <1C60D8A8C9B7F7BF951E93731381211357179396548043A5FCDCD7EA08D132BA5E80DB6E40248C81C3F8BE75EB1A35AD21D8EA57B4FAE27E130CD199AA061E001524314C9B11A8850482D3CAEA2C7228E6966D67042DA3CEC1B2BDA284DD0D166E51231A65CF4340EF1B56560060BDC63BA14DBA878B560147C4C92CA62CD4AA496CE0FE013CED4D78628FBF4B7F6975EA0B717A9037E95E83ED880BC64D1538C2FC7274A3EB5A8B05B3E43463F21C3A45AE5E14A3D459D007783FE4CA32FF109FDDA9744FB31F49C1D539E88AC5D0DF0442AFCEB16B> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/CCBKIF+Glegoo-Regular /Glegoo-Regular findfont ct_VMDictPut/CCBKIF+Glegoo-Regular*1 [36{/.notdef}rp /dollar 219{/.notdef}rp]CCBKIF+Glegoo-Regular nfCCBKIF+Glegoo-Regular*1 [86.3512 0 0 -86.3512 0 0 ]msf122.337 194.946 mo($)sh162.483 92.8173 mo
162.929 93.0019 163.375 93.1864 163.821 93.371 cv
161.697 92.1397 159.573 90.9085 157.448 89.6773 cv
165.492 94.8226 158.455 103.022 163.145 109.446 cv
164.925 111.885 167.46 113.498 168.86 116.25 cv
170.401 119.279 170.545 122.551 169.787 125.817 cv
169.609 126.585 176.425 128.924 176.271 129.587 cv
177.384 124.788 176.255 120.301 172.895 116.666 cv
171.377 115.024 169.492 113.622 168.586 111.507 cv
167.409 108.76 168.167 105.734 168.331 102.882 cv
168.771 95.2605 162.27 91.6418 155.999 89.0475 cv
158.28 89.9913 160.188 91.8679 162.483 92.8173 cv
.0885939 .116335 .722957 0 cmyk
f
160.82 92.6858 mo
164.344 102.611 178.921 97.2055 182.846 107.058 cv
184.481 111.163 184.191 116.128 187.522 119.44 cv
191.095 122.995 196.568 123.045 201.257 123.059 cv
201.862 123.06 202.464 122.183 203.059 121.305 cv
203.654 120.427 204.243 119.55 204.821 119.552 cv
200.148 119.538 194.632 119.499 191.085 115.933 cv
187.77 112.6 188.049 107.667 186.41 103.551 cv
182.482 93.6899 167.911 99.1135 164.384 89.179 cv
164.609 89.8109 160.573 91.9901 160.82 92.6858 cv
f
215.345 227.136 mo
215.345 227.136 li
220.809 219.183 221.494 201.006 212.34 169.907 cv
221.495 201.006 220.809 219.183 215.345 227.136 cv
212.277 169.693 mo
212.276 169.69 li
212.276 169.691 212.277 169.692 212.277 169.693 cv
212.246 169.589 mo
212.245 169.586 212.245 169.586 212.244 169.583 cv
212.245 169.585 212.245 169.587 212.246 169.589 cv
212.214 169.483 mo
212.213 169.478 li
212.214 169.48 212.214 169.48 212.214 169.483 cv
212.183 169.378 mo
212.182 169.376 212.182 169.374 212.181 169.371 cv
212.182 169.374 212.182 169.376 212.183 169.378 cv
212.151 169.272 mo
212.151 169.27 212.15 169.268 212.149 169.266 cv
212.15 169.268 212.151 169.27 212.151 169.272 cv
212.119 169.166 mo
212.119 169.164 212.118 169.162 212.118 169.16 cv
212.118 169.162 212.119 169.164 212.119 169.166 cv
212.087 169.06 mo
212.087 169.058 212.086 169.057 212.086 169.055 cv
212.086 169.057 212.087 169.058 212.087 169.06 cv
212.055 168.953 mo
212.054 168.951 li
212.055 168.953 li
.0992752 .0885634 .158938 0 cmyk
f
149.767 238.836 mo
148.846 238.836 147.921 238.831 146.993 238.822 cv
147.921 238.831 148.846 238.836 149.767 238.836 cv
174.587 238.836 202.277 235.346 211.167 230.896 cv
212.751 230.105 214.16 228.862 215.345 227.136 cv
215.345 227.136 li
214.16 228.862 212.751 230.105 211.167 230.896 cv
202.277 235.346 174.587 238.836 149.767 238.836 cv
.188418 .169192 .293126 0 cmyk
f
149.767 238.836 mo
148.846 238.836 147.921 238.831 146.993 238.822 cv
122.918 238.576 96.9279 235.181 88.3774 230.896 cv
84.8558 229.137 82.1952 225.124 80.9547 218.574 cv
88.2441 220.438 95.9113 221.454 103.838 221.454 cv
125.741 221.454 145.732 213.855 160.927 201.334 cv
166.548 201.334 li
166.548 196.263 li
181.049 181.941 189.936 162.649 189.936 141.431 cv
189.936 133.932 188.803 126.684 186.728 119.801 cv
196.21 133.511 206.664 151.222 212.054 168.951 cv
212.055 168.953 li
212.065 168.987 212.075 169.021 212.086 169.055 cv
212.086 169.057 212.087 169.058 212.087 169.06 cv
212.097 169.093 212.108 169.127 212.118 169.16 cv
212.118 169.162 212.119 169.164 212.119 169.166 cv
212.129 169.199 212.139 169.233 212.149 169.266 cv
212.15 169.268 212.151 169.27 212.151 169.272 cv
212.161 169.305 212.171 169.338 212.181 169.371 cv
212.182 169.374 212.182 169.376 212.183 169.378 cv
212.193 169.411 212.203 169.445 212.213 169.478 cv
212.214 169.483 li
212.224 169.516 212.235 169.55 212.244 169.583 cv
212.245 169.586 212.245 169.586 212.246 169.589 cv
212.256 169.623 212.266 169.655 212.276 169.69 cv
212.277 169.693 li
212.287 169.727 212.297 169.762 212.307 169.796 cv
212.318 169.833 212.329 169.87 212.34 169.907 cv
221.494 201.006 220.809 219.183 215.345 227.136 cv
214.16 228.862 212.751 230.105 211.167 230.896 cv
202.277 235.346 174.587 238.836 149.767 238.836 cv
.342931 .257786 .794553 .015198 cmyk
f
gsave
166.548 201.334 mo
160.927 201.334 li
162.882 199.724 164.758 198.031 166.548 196.263 cv
166.548 201.334 li
clp
160.927 196.263 mo
166.548 196.263 li
166.548 201.334 li
160.927 201.334 li
cp
f
.169863 .137911 .310155 0 cmyk
CCBKIF+Glegoo-Regular*1 [86.3512 0 0 -86.3512 0 0 ]msf122.337 194.946 mo($)shgrestore
169.007 88.9561 mo
169.007 88.9561 li
169.007 88.9561 169.007 88.9561 169.007 88.9561 cv
147.508 88.9561 li
147.508 88.9561 li
169.007 88.9561 li
172.669 78.5414 179.819 56.8089 176.265 55.1976 cv
179.819 56.8089 172.669 78.5414 169.007 88.9561 cv
176.087 55.1362 mo
176.076 55.1332 176.063 55.1303 176.051 55.1274 cv
176.063 55.1303 176.075 55.1332 176.087 55.1362 cv
.0992752 .0885634 .158938 0 cmyk
f
169.007 88.9561 mo
147.508 88.9561 li
166.323 87.825 172.179 67.1298 173.996 54.9497 cv
174.063 54.9487 174.129 54.9483 174.195 54.9483 cv
174.899 54.9483 175.526 55.002 176.051 55.1274 cv
176.063 55.1303 176.076 55.1332 176.087 55.1362 cv
176.087 55.1362 li
176.149 55.1515 176.208 55.172 176.265 55.1976 cv
179.819 56.8089 172.669 78.5414 169.007 88.9561 cv
.342931 .257786 .794553 .015198 cmyk
f
169.007 88.9561 mo
147.508 88.9561 li
147.508 88.9561 li
169.007 88.9561 li
169.007 88.9561 li
.177401 .208774 .783749 0 cmyk
f
148.282 59.7818 mo
147.518 59.7818 146.589 59.6576 145.536 59.4384 cv
145.559 59.4329 145.582 59.4274 145.606 59.4218 cv
146.984 59.0875 148.383 58.7479 149.783 58.4083 cv
151.19 58.0848 152.597 57.7613 153.983 57.4427 cv
154.676 57.2881 155.364 57.1347 156.044 56.983 cv
156.366 56.9107 156.782 56.8507 156.978 56.7809 cv
157.314 56.6848 157.646 56.5809 157.979 56.4966 cv
160.628 55.76 163.162 55.3903 165.326 55.1221 cv
167.493 54.8476 169.32 54.8682 170.587 54.8612 cv
171.858 54.9012 172.578 54.9663 172.578 54.9663 cv
172.578 54.9663 171.856 55.0321 170.609 55.2231 cv
169.359 55.3779 167.593 55.7215 165.493 56.1524 cv
163.684 56.5165 161.644 57.0637 159.499 57.7293 cv
155.356 58.7372 151.36 59.6594 148.557 59.7761 cv
148.468 59.7799 148.376 59.7818 148.282 59.7818 cv
.0992752 .0885634 .158938 0 cmyk
f
137.108 63.2532 mo
136.222 63.2532 135.374 63.2104 134.579 63.1354 cv
132.366 62.9354 130.608 62.3027 129.431 61.832 cv
128.262 61.3118 127.646 60.9325 127.646 60.9325 cv
127.646 60.9325 128.325 61.1958 129.544 61.4916 cv
130.755 61.8146 132.525 62.0719 134.637 62.0966 cv
134.748 62.0987 134.86 62.0997 134.972 62.0997 cv
135.934 62.0997 136.964 62.0245 138.04 61.8853 cv
138.04 61.8862 138.041 61.8866 138.042 61.8866 cv
138.074 61.8866 138.422 61.7031 138.699 61.5805 cv
138.996 61.4411 139.296 61.2973 139.608 61.1755 cv
140.228 60.9209 140.873 60.7171 141.526 60.4872 cv
141.848 60.3706 142.188 60.2619 142.542 60.1592 cv
142.876 60.0774 143.213 59.9949 143.551 59.9119 cv
144.206 59.7556 144.869 59.5976 145.536 59.4384 cv
146.589 59.6576 147.518 59.7818 148.282 59.7818 cv
148.376 59.7818 148.468 59.7799 148.557 59.7761 cv
151.36 59.6594 155.356 58.7372 159.499 57.7293 cv
159.152 57.8372 158.801 57.9481 158.449 58.0619 cv
158.135 58.1691 157.818 58.2774 157.499 58.3862 cv
157.047 58.5449 156.773 58.5761 156.42 58.6718 cv
155.747 58.8419 155.066 59.014 154.38 59.1874 cv
153.004 59.5261 151.608 59.8699 150.211 60.2139 cv
148.815 60.5326 147.403 60.8732 146.013 61.1617 cv
145.32 61.306 144.632 61.4492 143.953 61.5908 cv
143.613 61.6596 143.274 61.7278 142.939 61.7958 cv
142.63 61.871 142.317 61.9532 141.996 62.0492 cv
141.367 62.241 140.731 62.3984 140.131 62.5943 cv
139.829 62.687 139.539 62.799 139.25 62.9059 cv
138.819 63.0647 li
138.737 63.0834 138.446 63.2382 138.215 63.2382 cv
138.193 63.2382 138.171 63.2367 138.15 63.2335 cv
137.797 63.2468 137.45 63.2532 137.108 63.2532 cv
.342931 .257786 .794553 .015198 cmyk
f
88.9792 168.683 mo
88.9792 168.683 89.5285 167.492 90.4902 165.409 cv
91.4972 163.35 92.8785 160.373 94.7442 156.907 cv
96.6085 153.443 98.8085 149.402 101.439 145.231 cv
104.047 141.039 107.087 136.756 110.117 132.483 cv
113.174 128.24 116.23 123.999 119.1 120.016 cv
121.935 116.021 124.533 112.271 126.632 108.954 cv
128.741 105.646 130.581 102.927 131.862 101.025 cv
132.508 100.08 133.05 99.3492 133.401 98.8531 cv
133.739 98.3443 133.813 98.0158 133.813 98.0158 cv
133.813 98.0158 133.773 98.3494 133.482 98.9008 cv
133.176 99.4412 132.718 100.207 132.166 101.215 cv
131.014 103.195 129.49 106.092 127.52 109.496 cv
125.558 112.903 123.193 116.861 120.443 120.941 cv
117.717 125.04 114.657 129.299 111.626 133.564 cv
108.567 137.81 105.524 142.057 102.812 146.118 cv
100.112 150.193 97.6524 154.048 95.6527 157.421 cv
93.651 160.792 91.9483 163.59 90.8108 165.579 cv
89.6451 167.554 88.9792 168.683 88.9792 168.683 cv
f
140.146 124.682 mo
140.146 124.682 140.189 124.264 140.265 123.53 cv
140.387 122.809 140.486 121.754 140.765 120.531 cv
141.041 119.308 141.32 117.865 141.742 116.359 cv
142.141 114.846 142.647 113.259 143.142 111.673 cv
143.676 110.098 144.201 108.525 144.738 107.065 cv
145.249 105.675 145.619 104.269 145.958 103.054 cv
146.287 101.837 146.727 100.85 147.044 100.181 cv
147.394 99.5201 147.646 99.1825 147.646 99.1825 cv
147.646 99.1825 147.51 99.5844 147.383 100.299 cv
147.214 101.002 147.137 102.033 146.978 103.261 cv
146.801 104.484 146.739 105.97 146.295 107.552 cv
145.903 109.069 145.403 110.659 144.907 112.247 cv
144.373 113.823 143.846 115.398 143.3 116.855 cv
142.775 118.32 142.196 119.658 141.766 120.827 cv
141.332 121.995 140.879 122.944 140.615 123.625 cv
140.316 124.299 140.146 124.682 140.146 124.682 cv
f
155.313 108.432 mo
155.313 108.432 156.146 102.016 155.521 99.2658 cv
154.896 96.5158 151.854 95.0575 151.854 95.0575 cv
151.854 95.0575 151.021 96.5991 150.563 98.0575 cv
150.563 98.0575 148.771 95.7658 148.396 95.3908 cv
148.066 95.0606 142.116 94.569 140.697 94.4561 cv
149.767 94.4561 li
161.204 94.4561 li
161.275 94.708 161.335 94.9619 161.384 95.2189 cv
161.437 95.5334 161.494 95.9264 161.539 96.3687 cv
161.615 97.2779 161.598 98.2102 161.551 99.1539 cv
161.542 99.233 161.532 99.3121 161.521 99.3908 cv
161.297 100.984 161.28 102.54 161.381 103.894 cv
161.406 104.501 161.464 105.106 161.571 105.703 cv
161.383 105.572 160.433 104.821 160.021 102.724 cv
159.563 100.391 158.729 95.6825 158.479 95.5575 cv
158.478 95.5567 158.476 95.5562 158.474 95.5562 cv
158.214 95.5562 157.092 104.79 155.313 108.432 cv
f
161.204 94.4561 mo
149.767 94.4561 li
140.697 94.4561 li
140.505 94.4408 140.396 94.4324 140.396 94.4324 cv
161.197 94.4324 li
161.2 94.4403 161.202 94.4482 161.204 94.4561 cv
.177401 .208774 .783749 0 cmyk
f
161.604 105.724 mo
161.604 105.724 161.593 105.717 161.571 105.703 cv
161.464 105.106 161.406 104.501 161.381 103.894 cv
161.43 104.559 161.508 105.176 161.604 105.724 cv
161.551 99.1539 mo
161.598 98.2102 161.615 97.2779 161.539 96.3687 cv
161.622 97.1904 161.662 98.1818 161.551 99.1539 cv
161.384 95.2189 mo
161.335 94.9619 161.275 94.708 161.204 94.4561 cv
161.202 94.4482 161.2 94.4403 161.197 94.4324 cv
161.229 94.4324 li
161.229 94.4324 161.301 94.7313 161.384 95.2189 cv
f
168.229 104.307 mo
168.229 104.307 168.226 104.284 168.22 104.239 cv
168.265 103.783 168.305 103.331 168.331 102.882 cv
168.405 101.607 168.284 100.444 168.003 99.3793 cv
168.143 99.4828 168.289 99.5667 168.425 99.6273 cv
168.505 99.6609 168.584 99.6919 168.661 99.7209 cv
168.676 99.8621 168.688 100.002 168.697 100.14 cv
168.762 100.925 168.697 101.658 168.653 102.277 cv
168.607 102.898 168.464 103.407 168.392 103.759 cv
168.288 104.109 168.229 104.307 168.229 104.307 cv
.342931 .257786 .794553 .015198 cmyk
f
168.22 104.239 mo
168.207 104.151 168.184 103.981 168.151 103.744 cv
168.123 103.389 168.021 102.884 167.958 102.288 cv
167.893 101.691 167.748 101.005 167.617 100.282 cv
167.537 99.9129 167.458 99.5491 167.377 99.1789 cv
167.334 98.984 167.284 98.8075 167.224 98.6335 cv
167.293 98.6585 167.362 98.6833 167.43 98.7076 cv
167.458 98.7605 167.489 98.8148 167.523 98.8703 cv
167.643 99.0692 167.817 99.2417 168.003 99.3793 cv
168.284 100.444 168.405 101.607 168.331 102.882 cv
168.305 103.331 168.265 103.783 168.22 104.239 cv
.177401 .208774 .783749 0 cmyk
f
167.43 98.7076 mo
167.362 98.6833 167.293 98.6585 167.224 98.6335 cv
167.17 98.4744 167.106 98.3175 167.03 98.1507 cv
166.888 97.806 166.711 97.4591 166.532 97.1053 cv
166.267 96.5678 li
166.191 96.4123 166.119 96.2739 166.031 96.1325 cv
165.676 95.5836 165.19 95.0822 164.747 94.6644 cv
164.391 94.3322 164.111 93.9923 163.904 93.718 cv
164.003 93.6534 164.093 93.586 164.173 93.5207 cv
164.184 93.5277 164.195 93.5348 164.207 93.5419 cv
164.288 93.6103 164.382 93.6916 164.485 93.7859 cv
164.877 94.1274 165.4 94.6312 165.742 95.3842 cv
165.922 95.7588 166.157 96.2561 166.441 96.6879 cv
166.717 97.1314 166.983 97.542 167.137 97.9933 cv
167.218 98.207 167.289 98.4409 167.43 98.7076 cv
167.889 97.0978 mo
167.663 96.7327 167.397 96.4267 167.17 96.158 cv
166.834 95.7783 166.598 95.4318 166.34 95.0324 cv
166.284 94.9428 166.224 94.8587 166.163 94.7795 cv
166.417 94.9737 166.672 95.2024 166.907 95.4875 cv
167.045 95.6524 167.174 95.8445 167.285 96.0322 cv
167.581 96.5403 li
167.684 96.72 167.788 96.9055 167.889 97.0978 cv
f
160.972 93.7577 mo
160.611 93.6087 160.276 93.4236 159.959 93.2059 cv
159.627 92.9829 159.356 92.6474 159.223 92.2904 cv
159.086 91.9329 159.077 91.5813 159.111 91.2874 cv
159.123 91.1949 159.14 91.1077 159.162 91.0256 cv
160.031 91.8809 160.603 92.7966 160.972 93.7577 cv
159.79 90.7806 mo
159.643 90.7051 159.497 90.6307 159.349 90.557 cv
159.46 90.3523 159.585 90.1936 159.674 90.0675 cv
159.886 89.8327 160.021 89.7242 160.021 89.7242 cv
160.021 89.7242 159.954 89.889 159.887 90.1774 cv
159.838 90.338 159.802 90.5491 159.79 90.7806 cv
f
161.339 93.8932 mo
161.214 93.852 161.092 93.8068 160.972 93.7577 cv
160.603 92.7966 160.031 91.8809 159.162 91.0256 cv
159.209 90.8469 159.276 90.6919 159.349 90.557 cv
159.497 90.6307 159.643 90.7051 159.79 90.7806 cv
159.781 90.9478 159.784 91.1256 159.804 91.3027 cv
159.848 91.7438 160.115 92.0848 160.531 92.281 cv
160.638 92.3317 160.751 92.383 160.868 92.4331 cv
160.814 92.5304 160.795 92.6156 160.82 92.6858 cv
160.973 93.1165 161.147 93.5177 161.339 93.8932 cv
f
162.558 94.1071 mo
162.363 94.1071 162.173 94.0888 161.989 94.063 cv
161.762 94.0178 161.546 93.961 161.339 93.8932 cv
161.147 93.5177 160.973 93.1165 160.82 92.6858 cv
160.795 92.6156 160.814 92.5304 160.868 92.4331 cv
161.289 92.6145 161.76 92.7798 162.194 92.8428 cv
162.355 92.8727 162.514 92.89 162.662 92.89 cv
162.767 92.89 162.865 92.8814 162.955 92.8624 cv
163.156 92.8278 163.368 92.7171 163.634 92.553 cv
163.89 92.3894 164.188 92.2014 164.529 92.084 cv
164.713 92.0126 164.919 91.9839 165.11 91.9839 cv
165.282 91.9839 165.442 92.0071 165.566 92.0433 cv
165.739 92.0916 165.886 92.1443 166.014 92.191 cv
166.007 92.1942 166 92.1974 165.992 92.2005 cv
165.796 92.2744 165.475 92.3947 165.271 92.4712 cv
165.026 92.5539 164.838 92.7348 164.732 92.8434 cv
164.633 92.9752 164.604 93.0575 164.604 93.0575 cv
164.604 93.0575 164.637 93.0515 164.695 93.0515 cv
164.703 93.0515 164.712 93.0517 164.72 93.0519 cv
164.589 93.1613 164.448 93.2917 164.278 93.4318 cv
164.008 93.3146 163.854 93.2657 163.854 93.2657 cv
163.854 93.2657 163.975 93.3488 164.177 93.5171 cv
164.176 93.5183 164.174 93.5195 164.173 93.5207 cv
164.082 93.4635 164.001 93.4081 163.93 93.3529 cv
163.635 93.1565 163.479 93.0158 163.479 93.0158 cv
163.479 93.0158 163.561 93.2057 163.759 93.5198 cv
163.803 93.5807 163.851 93.6471 163.904 93.718 cv
163.715 93.8419 163.492 93.955 163.234 94.0221 cv
163.159 94.0423 163.084 94.0584 163.01 94.0709 cv
162.943 93.9837 162.885 93.9019 162.838 93.8228 cv
162.572 93.4684 162.479 93.2242 162.479 93.2242 cv
162.479 93.2242 162.485 93.4865 162.623 93.9294 cv
162.642 93.985 162.663 94.0435 162.686 94.1044 cv
162.643 94.1062 162.601 94.1071 162.558 94.1071 cv
f
163.904 93.718 mo
163.851 93.6471 163.803 93.5807 163.759 93.5198 cv
163.561 93.2057 163.479 93.0158 163.479 93.0158 cv
163.479 93.0158 163.635 93.1565 163.93 93.3529 cv
164.001 93.4081 164.082 93.4635 164.173 93.5207 cv
164.093 93.586 164.003 93.6534 163.904 93.718 cv
.250767 .276371 .857206 .00640879 cmyk
f
166.99 93.0271 mo
166.845 92.9035 166.703 92.7752 166.566 92.6414 cv
166.648 92.6096 166.72 92.5688 166.778 92.517 cv
167.026 92.2784 167.049 92.099 167.062 92.099 cv
167.062 92.099 167.062 92.099 167.063 92.0992 cv
167.063 92.0987 167.062 92.0985 167.062 92.0985 cv
167.051 92.0985 166.917 92.2429 166.665 92.3032 cv
166.619 92.3193 166.572 92.3265 166.523 92.3265 cv
166.424 92.3265 166.317 92.2974 166.191 92.2543 cv
166.161 92.2207 166.13 92.1862 166.1 92.152 cv
166.245 92.082 166.335 92.0161 166.385 91.9403 cv
166.462 91.8677 166.521 91.731 166.561 91.5316 cv
166.594 91.3401 166.629 91.0998 166.597 90.9015 cv
166.569 90.7057 166.574 90.496 166.53 90.3694 cv
166.509 90.2255 166.479 90.1408 166.479 90.1408 cv
166.479 90.1408 166.564 90.1563 166.713 90.2155 cv
166.843 90.2883 167.065 90.3949 167.227 90.6116 cv
167.383 90.8249 167.588 91.0984 167.646 91.4763 cv
167.723 91.8408 167.65 92.3361 167.333 92.735 cv
167.23 92.8533 167.113 92.95 166.99 93.0271 cv
.177401 .208774 .783749 0 cmyk
f
165.925 93.2674 mo
165.697 93.2441 165.511 93.182 165.355 93.162 cv
165.159 93.132 164.987 93.0614 164.857 93.0614 cv
164.849 93.0614 164.842 93.0616 164.835 93.0621 cv
164.792 93.0557 164.753 93.0528 164.72 93.0519 cv
164.786 92.9971 164.849 92.9476 164.912 92.9048 cv
165.081 92.7851 165.223 92.7329 165.446 92.7329 cv
165.455 92.7329 165.464 92.733 165.474 92.7331 cv
165.583 92.7397 165.703 92.7448 165.825 92.7448 cv
166.085 92.7448 166.357 92.7218 166.566 92.6414 cv
166.703 92.7752 166.845 92.9035 166.99 93.0271 cv
166.939 93.059 166.887 93.0874 166.835 93.1127 cv
166.389 92.9318 165.965 92.8913 165.683 92.8771 cv
165.359 92.8887 165.188 92.9325 165.188 92.9325 cv
165.188 92.9325 165.364 92.9781 165.631 93.1132 cv
165.723 93.1501 165.821 93.2027 165.925 93.2674 cv
166.191 92.2543 mo
166.136 92.2355 166.078 92.214 166.014 92.191 cv
166.045 92.1778 166.073 92.1648 166.1 92.152 cv
166.13 92.1862 166.161 92.2207 166.191 92.2543 cv
f
166.566 92.6414 mo
166.437 92.5169 166.313 92.3881 166.191 92.2543 cv
166.317 92.2974 166.424 92.3265 166.523 92.3265 cv
166.572 92.3265 166.619 92.3193 166.665 92.3032 cv
166.917 92.2429 167.051 92.0985 167.062 92.0985 cv
167.062 92.0985 167.063 92.0987 167.063 92.0992 cv
167.062 92.099 167.062 92.099 167.062 92.099 cv
167.049 92.099 167.026 92.2784 166.778 92.517 cv
166.72 92.5688 166.648 92.6096 166.566 92.6414 cv
.250767 .276371 .857206 .00640879 cmyk
f
164.604 93.0575 mo
164.604 93.0575 164.633 92.9752 164.732 92.8434 cv
164.838 92.7348 165.026 92.5539 165.271 92.4712 cv
165.475 92.3947 165.796 92.2744 165.992 92.2005 cv
166 92.1974 166.007 92.1942 166.014 92.191 cv
166.078 92.214 166.136 92.2355 166.191 92.2543 cv
166.313 92.3881 166.437 92.5169 166.566 92.6414 cv
166.357 92.7218 166.085 92.7448 165.825 92.7448 cv
165.703 92.7448 165.583 92.7397 165.474 92.7331 cv
165.464 92.733 165.455 92.7329 165.446 92.7329 cv
165.223 92.7329 165.081 92.7851 164.912 92.9048 cv
164.849 92.9476 164.786 92.9971 164.72 93.0519 cv
164.712 93.0517 164.703 93.0515 164.695 93.0515 cv
164.637 93.0515 164.604 93.0575 164.604 93.0575 cv
f
179.2 102.609 mo
179.08 102.567 178.845 102.485 178.515 102.369 cv
178.046 102.188 177.292 101.896 176.529 101.601 cv
175.724 101.325 174.727 101.27 173.602 101.084 cv
173.213 101.007 172.821 100.914 172.424 100.811 cv
172.166 100.496 171.914 100.19 171.671 99.8961 cv
174.343 100.551 177.033 101.201 179.2 102.609 cv
.0992752 .0885634 .158938 0 cmyk
f
172.424 100.811 mo
171.687 100.62 170.937 100.399 170.18 100.195 cv
169.661 100.025 169.197 99.9232 168.661 99.7209 cv
168.637 99.5092 168.607 99.2948 168.57 99.0788 cv
169.58 99.3825 170.624 99.6395 171.671 99.8961 cv
171.914 100.19 172.166 100.496 172.424 100.811 cv
.342931 .257786 .794553 .015198 cmyk
f
179.292 102.641 mo
179.292 102.641 179.26 102.63 179.2 102.609 cv
177.033 101.201 174.343 100.551 171.671 99.8961 cv
170.624 99.6395 169.58 99.3825 168.57 99.0788 cv
168.562 99.0303 168.554 98.9818 168.545 98.9332 cv
168.477 98.5221 168.334 98.0511 168.165 97.6587 cv
168.077 97.4652 167.984 97.2785 167.889 97.0978 cv
167.982 97.2477 168.069 97.4075 168.143 97.5788 cv
168.262 97.8339 168.372 98.0853 168.48 98.2302 cv
168.581 98.3689 168.7 98.446 168.915 98.5413 cv
169.358 98.7086 170.003 98.8522 170.541 99.012 cv
171.654 99.3529 172.754 99.6898 173.824 100.017 cv
174.876 100.265 175.944 100.544 176.788 100.955 cv
177.595 101.396 178.179 101.874 178.625 102.154 cv
179.05 102.464 179.292 102.641 179.292 102.641 cv
166.163 94.7795 mo
165.814 94.5131 165.466 94.3115 165.174 94.1178 cv
164.807 93.8843 164.47 93.705 164.207 93.5419 cv
164.197 93.5334 164.187 93.5252 164.177 93.5171 cv
164.212 93.4887 164.245 93.4606 164.276 93.4335 cv
164.277 93.4329 164.278 93.4324 164.278 93.4318 cv
164.377 93.4745 164.491 93.5262 164.619 93.5879 cv
165.011 93.8119 165.658 94.1275 166.163 94.7795 cv
.177401 .208774 .783749 0 cmyk
f
168.661 99.7209 mo
168.584 99.6919 168.505 99.6609 168.425 99.6273 cv
168.289 99.5667 168.143 99.4828 168.003 99.3793 cv
167.955 99.2002 167.904 99.0241 167.847 98.8505 cv
168.086 98.9297 168.327 99.0056 168.57 99.0788 cv
168.607 99.2948 168.637 99.5092 168.661 99.7209 cv
.388312 .317052 .850126 .0530098 cmyk
f
168.003 99.3793 mo
167.817 99.2417 167.643 99.0692 167.523 98.8703 cv
167.489 98.8148 167.458 98.7605 167.43 98.7076 cv
167.568 98.7565 167.707 98.804 167.847 98.8505 cv
167.904 99.0241 167.955 99.2002 168.003 99.3793 cv
.250767 .276371 .857206 .00640879 cmyk
f
168.57 99.0788 mo
168.327 99.0056 168.086 98.9297 167.847 98.8505 cv
167.707 98.804 167.568 98.7565 167.43 98.7076 cv
167.289 98.4409 167.218 98.207 167.137 97.9933 cv
166.983 97.542 166.717 97.1314 166.441 96.6879 cv
166.157 96.2561 165.922 95.7588 165.742 95.3842 cv
165.4 94.6312 164.877 94.1274 164.485 93.7859 cv
164.382 93.6916 164.288 93.6103 164.207 93.5419 cv
164.47 93.705 164.807 93.8843 165.174 94.1178 cv
165.466 94.3115 165.814 94.5131 166.163 94.7795 cv
166.224 94.8587 166.284 94.9428 166.34 95.0324 cv
166.598 95.4318 166.834 95.7783 167.17 96.158 cv
167.397 96.4267 167.663 96.7327 167.889 97.0978 cv
167.984 97.2785 168.077 97.4652 168.165 97.6587 cv
168.334 98.0511 168.477 98.5221 168.545 98.9332 cv
168.554 98.9818 168.562 99.0303 168.57 99.0788 cv
f
164.177 93.5171 mo
163.975 93.3488 163.854 93.2657 163.854 93.2657 cv
163.854 93.2657 164.008 93.3146 164.278 93.4318 cv
164.278 93.4324 164.277 93.4329 164.276 93.4335 cv
164.245 93.4606 164.212 93.4887 164.177 93.5171 cv
f
160.943 91.4062 mo
160.69 91.2618 160.435 91.1214 160.176 90.9835 cv
160.162 90.7608 160.188 90.5582 160.241 90.3647 cv
160.304 90.13 160.425 89.9339 160.532 89.7783 cv
160.64 89.62 160.781 89.5291 160.867 89.4671 cv
160.964 89.4119 161.021 89.3907 161.021 89.3907 cv
161.021 89.3907 160.992 89.4459 160.959 89.5444 cv
160.914 89.6347 160.886 89.7781 160.844 89.9302 cv
160.798 90.0831 160.791 90.2709 160.776 90.4597 cv
160.77 90.6459 160.765 90.86 160.801 91.0293 cv
160.823 91.1708 160.871 91.2921 160.943 91.4062 cv
.0281682 .0404974 .436347 0 cmyk
f
161.107 92.1262 mo
160.952 92.0752 160.771 92.0087 160.607 91.8638 cv
160.398 91.6996 160.245 91.4167 160.192 91.1369 cv
160.185 91.0846 160.18 91.0336 160.176 90.9835 cv
160.435 91.1214 160.69 91.2618 160.943 91.4062 cv
160.959 91.4313 160.976 91.456 160.994 91.4806 cv
161.095 91.6133 161.228 91.7499 161.361 91.8471 cv
161.382 91.8639 li
161.279 91.9551 161.186 92.043 161.107 92.1262 cv
f
161.813 92.2242 mo
161.813 92.2242 161.752 92.2242 161.643 92.2242 cv
161.54 92.2104 161.382 92.2144 161.206 92.1589 cv
161.175 92.1483 161.141 92.1376 161.107 92.1262 cv
161.186 92.043 161.279 91.9551 161.382 91.8639 cv
161.687 92.1116 li
161.813 92.2242 li
f
138.478 89.6376 mo
137.583 89.6327 136.703 89.6279 135.83 89.6231 cv
135.029 89.5959 134.191 89.5674 133.52 89.5447 cv
132.845 89.5224 132.283 89.4668 131.889 89.4453 cv
131.496 89.4106 131.271 89.3907 131.271 89.3907 cv
131.271 89.3907 131.497 89.3671 131.892 89.3257 cv
132.286 89.2972 132.851 89.2319 133.526 89.1979 cv
134.197 89.1636 135.035 89.1205 135.835 89.0794 cv
136.708 89.0595 137.586 89.0395 138.48 89.019 cv
139.375 89.0237 140.251 89.0284 141.125 89.033 cv
141.969 89.0441 142.757 89.0901 143.433 89.1114 cv
144.109 89.133 144.672 89.1895 145.067 89.2107 cv
145.463 89.2459 145.688 89.2658 145.688 89.2658 cv
145.688 89.2658 145.464 89.2897 145.069 89.3317 cv
144.675 89.3598 144.113 89.426 143.437 89.4593 cv
142.761 89.4924 141.973 89.552 141.127 89.5777 cv
140.252 89.5976 139.374 89.6174 138.478 89.6376 cv
f
166.542 112.453 mo
166.542 112.453 166.433 112.348 166.242 112.164 cv
166.06 111.99 165.72 111.666 165.452 111.41 cv
165.137 111.086 164.747 110.715 164.403 110.241 cv
164.076 109.777 163.76 109.272 163.435 108.768 cv
163.133 108.253 162.752 107.78 162.487 107.251 cv
162.205 106.738 162.06 106.174 162.009 105.716 cv
161.951 105.256 161.971 104.88 161.945 104.618 cv
161.936 104.355 161.917 104.203 161.917 104.203 cv
161.917 104.203 161.977 104.342 162.064 104.596 cv
162.139 104.851 162.242 105.223 162.351 105.649 cv
162.455 106.08 162.669 106.52 162.96 106.98 cv
163.244 107.438 163.626 107.902 163.945 108.417 cv
164.25 108.927 164.543 109.417 164.854 109.937 cv
165.141 110.397 165.441 110.824 165.714 111.183 cv
165.988 111.541 166.19 111.867 166.335 112.089 cv
166.467 112.321 166.542 112.453 166.542 112.453 cv
f
186.479 116.516 mo
186.479 116.516 186.339 116.315 186.116 115.947 cv
185.903 115.574 185.597 115.035 185.325 114.346 cv
185.053 113.659 184.759 112.844 184.528 111.949 cv
184.288 111.057 184.097 110.092 183.919 109.13 cv
183.756 108.16 183.619 107.213 183.286 106.41 cv
182.958 105.622 182.412 104.951 181.939 104.414 cv
181.454 103.881 181.022 103.452 180.691 103.185 cv
180.369 102.906 180.167 102.766 180.167 102.766 cv
180.167 102.766 180.39 102.868 180.761 103.087 cv
181.125 103.317 181.645 103.66 182.187 104.171 cv
182.713 104.691 183.358 105.298 183.783 106.189 cv
184.204 107.065 184.354 108.073 184.528 109.021 cv
184.692 109.981 184.873 110.934 185.058 111.823 cv
185.25 112.71 185.437 113.536 185.653 114.23 cv
185.868 114.922 186.057 115.501 186.225 115.893 cv
186.377 116.292 186.479 116.516 186.479 116.516 cv
f
165.271 109.141 mo
165.271 109.141 165.174 108.902 165.002 108.481 cv
164.863 108.053 164.632 107.442 164.463 106.69 cv
164.295 105.94 164.074 105.069 163.884 104.147 cv
163.786 103.701 163.663 103.203 163.596 102.673 cv
163.525 102.153 163.492 101.628 163.466 101.112 cv
163.447 100.106 163.429 99.1141 163.411 98.1405 cv
163.395 97.5396 163.385 96.9714 163.336 96.4545 cv
163.665 96.7422 164.012 97.0037 164.376 97.2432 cv
164.425 97.5104 164.465 97.7844 164.496 98.0619 cv
164.626 99.0069 164.661 100.075 164.702 101.067 cv
164.714 101.568 164.736 102.061 164.781 102.537 cv
164.82 103.005 164.905 103.472 164.959 103.968 cv
165.081 104.93 165.091 105.827 165.151 106.587 cv
165.21 107.346 165.198 107.988 165.239 108.433 cv
165.259 108.884 165.271 109.141 165.271 109.141 cv
.177401 .208774 .783749 0 cmyk
f
164.376 97.2432 mo
164.012 97.0037 163.665 96.7422 163.336 96.4545 cv
163.308 96.1639 163.269 95.8896 163.208 95.6347 cv
163.08 95.0486 162.841 94.5178 162.686 94.1044 cv
162.793 94.0998 162.901 94.0892 163.01 94.0709 cv
163.261 94.3982 163.623 94.8015 163.87 95.427 cv
164.081 95.9619 164.255 96.5822 164.376 97.2432 cv
f
162.686 94.1044 mo
162.663 94.0435 162.642 93.985 162.623 93.9294 cv
162.485 93.4865 162.479 93.2242 162.479 93.2242 cv
162.479 93.2242 162.572 93.4684 162.838 93.8228 cv
162.885 93.9019 162.943 93.9837 163.01 94.0709 cv
162.901 94.0892 162.793 94.0998 162.686 94.1044 cv
.250767 .276371 .857206 .00640879 cmyk
f
170.685 95.0907 mo
169.525 94.659 168.439 94.1282 167.482 93.4183 cv
167.837 93.5968 168.207 93.7952 168.565 93.9902 cv
169.13 94.278 169.72 94.6104 170.32 94.901 cv
170.441 94.9658 170.563 95.029 170.685 95.0907 cv
.0992752 .0885634 .158938 0 cmyk
f
173.855 97.0775 mo
173.752 97.0775 173.646 97.0735 173.535 97.0636 cv
173.001 97.0196 172.363 96.9613 171.714 96.772 cv
171.061 96.596 170.398 96.3145 169.758 96.0031 cv
169.129 95.668 168.524 95.3079 167.99 94.9159 cv
167.425 94.5154 167.025 94.0712 166.627 93.7759 cv
166.368 93.5766 166.134 93.3975 165.925 93.2674 cv
165.979 93.273 166.037 93.2764 166.096 93.2764 cv
166.123 93.2764 166.15 93.2757 166.178 93.2743 cv
166.373 93.273 166.608 93.2231 166.835 93.1127 cv
166.884 93.1325 166.933 93.154 166.982 93.1772 cv
167.143 93.2513 167.311 93.3325 167.482 93.4183 cv
168.439 94.1282 169.525 94.659 170.685 95.0907 cv
171.155 95.3288 171.628 95.5444 172.077 95.747 cv
172.646 95.9913 173.18 96.2366 173.662 96.3818 cv
174.141 96.5334 174.55 96.6835 174.845 96.7566 cv
175.142 96.842 175.313 96.8908 175.313 96.8908 cv
175.313 96.8908 175.138 96.9288 174.832 96.9956 cv
174.589 97.0167 174.252 97.0775 173.855 97.0775 cv
.177401 .208774 .783749 0 cmyk
f
166.096 93.2764 mo
166.037 93.2764 165.979 93.273 165.925 93.2674 cv
165.821 93.2027 165.723 93.1501 165.631 93.1132 cv
165.364 92.9781 165.188 92.9325 165.188 92.9325 cv
165.188 92.9325 165.359 92.8887 165.683 92.8771 cv
165.965 92.8913 166.389 92.9318 166.835 93.1127 cv
166.608 93.2231 166.373 93.273 166.178 93.2743 cv
166.15 93.2757 166.123 93.2764 166.096 93.2764 cv
.250767 .276371 .857206 .00640879 cmyk
f
129.237 88.9561 mo
128.771 89.0575 130.271 92.2658 130.563 92.5575 cv
130.854 92.8492 129.771 93.3492 130.063 93.7242 cv
130.354 94.0992 130.771 94.1408 130.771 94.5992 cv
130.771 95.0575 131.104 95.8075 131.396 95.7658 cv
131.688 95.7242 134.354 94.5158 137.896 94.5158 cv
141.438 94.5158 145.229 93.2658 145.229 93.2658 cv
131.396 90.5575 li
129.237 88.9561 li
cp
.0885939 .116335 .722957 0 cmyk
f
348.628 450.553 mo
312.133 450.553 282.548 446.566 282.548 441.649 cv
282.548 439.163 290.107 436.915 302.298 435.3 cv
314.823 443.064 330.934 446.428 348.52 446.441 cv
348.521 446.441 348.523 446.441 348.523 446.441 cv
348.56 446.441 348.597 446.441 348.633 446.441 cv
348.633 446.441 li
366.262 446.441 382.416 443.081 394.967 435.301 cv
407.153 436.916 414.709 439.164 414.709 441.649 cv
414.709 446.566 385.124 450.553 348.628 450.553 cv
.0992752 .0885634 .158938 0 cmyk
f
374.843 252.462 mo
375.493 252.822 376.403 254.411 375.953 255.122 cv
364.883 285.892 li
332.373 285.892 li
332.363 285.892 li
321.193 255.122 li
321.383 252.791 323.543 251.771 325.303 252.211 cv
327.063 252.651 328.533 254.171 330.103 255.312 cv
331.673 256.451 333.653 257.211 335.223 256.071 cv
336.123 255.412 336.753 254.212 337.663 253.572 cv
339.313 252.432 341.323 253.421 342.973 254.541 cv
344.633 255.651 346.463 256.931 348.253 256.301 cv
349.963 255.701 351.163 253.501 352.893 253.051 cv
354.273 252.691 355.585 253.513 356.902 254.336 cv
358.143 255.11 359.389 255.885 360.703 255.672 cv
362.983 255.312 364.673 252.061 366.973 252.251 cv
368.293 252.352 369.473 253.621 370.793 253.511 cv
371.493 253.462 372.133 253.012 372.793 252.681 cv
373.443 252.341 374.193 252.102 374.843 252.462 cv
.401709 .12256 .422339 0 cmyk
f
364.883 285.892 mo
362.913 291.381 li
334.363 291.381 li
332.373 285.892 li
364.883 285.892 li
.0885939 .116335 .722957 0 cmyk
f
362.913 291.381 mo
396.033 300.672 420.983 341.181 420.983 382.312 cv
420.983 429.171 388.593 446.441 348.633 446.441 cv
308.673 446.441 276.283 429.171 276.283 382.312 cv
276.283 341.181 301.243 300.672 334.363 291.381 cv
362.913 291.381 li
.401709 .12256 .422339 0 cmyk
f
.0865492 .0589609 .181369 0 cmyk
%ADOBeginSubsetFont: CooperHewitt-SemiboldItalic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /CooperHewitt-SemiboldItalic def/FontInfo 7 dict dup begin/Notice (Copyright (c) 2014, Cooper Hewitt Smithsonian Design Museum (cooperhewitt.org)) def/Weight (Normal) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 36 /dollar putdef/FontBBox {-287 -223 1365 966} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/dollar <1C60D8A8C9B7C3C9EDB5AAF218A484AABE0F16E69D0972BB0E4E64D24A7E87D7C87A3E2B8A7E1AFF23A6823AFD8176B07965704A350CD4B971A0FD42FDE567D27AFB11F3BAB405081AF230C771A5002615FF85A90763E1105A582E6E71A9CD65E94EA44CDBA7EC76F089E500DBA92DAF3427E21F10191C4E6600D7DBDEDBD951CB3DE4CF5D889142F313CC76B19AE223B8B5A285BAEC2EEC6494391951AB4D64B1D2A5F509FE4D772BA3309B5F65972F2A2A5B71> |-/.notdef <1C60D8A8C9B5CA3950766E423500ECEB024ACF58AA5F0BAC34102F01D7C29231699BFDEB19B231BAC67BE84FBA1CAC823028F69E7380C611BE2E9295E21CF863389D3802D9C621ECF1> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/CCBKIG+CooperHewitt-SemiboldItalic /CooperHewitt-SemiboldItalic findfont ct_VMDictPut/CCBKIG+CooperHewitt-SemiboldItalic*1 [36{/.notdef}rp /dollar 219{/.notdef}rp]CCBKIG+CooperHewitt-SemiboldItalic nfCCBKIG+CooperHewitt-SemiboldItalic*1 [86.3512 0 0 -86.3512 0 0 ]msf311.093 403.747 mo($)sh394.967 435.301 mo
394.967 435.301 li
410.866 425.446 420.983 408.499 420.983 382.312 cv
420.983 379.984 420.903 377.656 420.747 375.338 cv
420.903 377.656 420.983 379.984 420.983 382.312 cv
420.983 408.499 410.867 425.446 394.967 435.301 cv
.0992752 .0885634 .158938 0 cmyk
f
348.633 446.441 mo
348.633 446.441 li
348.633 446.441 li
366.262 446.441 382.416 443.081 394.967 435.301 cv
394.967 435.301 li
382.416 443.081 366.262 446.441 348.633 446.441 cv
348.523 446.441 mo
348.523 446.441 348.521 446.441 348.52 446.441 cv
348.523 446.441 li
.188418 .169192 .293126 0 cmyk
f
420.746 375.329 mo
420.744 375.299 420.742 375.269 420.74 375.239 cv
420.742 375.269 420.744 375.299 420.746 375.329 cv
420.737 375.204 mo
420.736 375.189 420.736 375.177 420.734 375.162 cv
420.736 375.177 420.736 375.189 420.737 375.204 cv
420.729 375.085 mo
420.729 375.078 420.728 375.071 420.728 375.063 cv
420.728 375.07 420.729 375.079 420.729 375.085 cv
.0992752 .0885634 .158938 0 cmyk
f
348.633 446.441 mo
348.633 446.441 li
348.597 446.441 348.56 446.441 348.523 446.441 cv
348.52 446.441 li
338.967 446.434 329.857 445.425 321.512 443.271 cv
323.361 442.765 325.192 442.2 326.994 441.58 cv
331.406 442.668 335.623 443.243 339.333 443.51 cv
340.721 443.606 342.038 443.645 343.273 443.645 cv
346.078 443.645 348.459 443.442 350.277 443.236 cv
351.59 443.108 352.608 442.898 353.305 442.794 cv
354.001 442.679 354.372 442.618 354.372 442.618 cv
354.372 442.618 353.997 442.646 353.294 442.7 cv
352.59 442.743 351.564 442.863 350.249 442.874 cv
349.48 442.918 348.612 442.942 347.658 442.942 cv
345.364 442.942 342.568 442.804 339.425 442.47 cv
336.398 442.142 333.058 441.536 329.561 440.653 cv
365.335 427.115 390.896 391.316 390.896 349.276 cv
390.896 335.776 388.259 322.918 383.494 311.235 cv
384.183 311.324 384.88 311.365 385.583 311.365 cv
387.993 311.365 390.467 310.882 392.89 310.178 cv
408.464 326.4 418.985 350.285 420.728 375.063 cv
420.728 375.071 420.729 375.078 420.729 375.085 cv
420.731 375.111 420.733 375.136 420.734 375.162 cv
420.736 375.177 420.736 375.189 420.737 375.204 cv
420.738 375.214 420.739 375.229 420.74 375.239 cv
420.742 375.269 420.744 375.299 420.746 375.329 cv
420.746 375.333 420.746 375.334 420.747 375.338 cv
420.903 377.656 420.983 379.984 420.983 382.312 cv
420.983 408.499 410.866 425.446 394.967 435.301 cv
382.416 443.081 366.262 446.441 348.633 446.441 cv
385.739 307.618 mo
384.362 307.618 383.007 307.461 381.695 307.096 cv
380.099 303.642 378.313 300.302 376.351 297.09 cv
381.142 299.835 385.675 303.245 389.881 307.2 cv
388.494 307.463 387.106 307.618 385.739 307.618 cv
.469734 .206668 .534539 .00805676 cmyk
f
353.056 289.393 mo
353.439 289.37 353.822 289.348 354.205 289.325 cv
352.546 289.161 350.888 288.996 349.229 288.832 cv
353.811 290.365 352.409 294.871 353.337 298.592 cv
354.274 302.349 357.378 303.712 359.817 306.352 cv
365.782 312.808 357.965 321.214 361.908 328.333 cv
362.148 328.767 363.309 328.682 364.453 328.597 cv
365.567 328.514 366.665 328.432 366.884 328.827 cv
363.934 323.501 367.318 318.512 367.225 312.989 cv
367.12 306.76 361.552 305.885 359.057 301.13 cv
356.992 297.192 359.535 290.812 353.992 289.294 cv
352.196 288.803 349.938 288.79 348.08 288.899 cv
348.898 288.851 349.73 288.998 350.563 289.146 cv
351.396 289.293 352.231 289.441 353.056 289.393 cv
.0885939 .116335 .722957 0 cmyk
f
356.925 291.707 mo
359.495 295.488 362.528 297.545 366.574 299.52 cv
370.808 301.587 372.667 304.361 375.911 307.553 cv
382.466 314.002 391.621 310.95 399.057 307.994 cv
399.553 307.797 398.763 304.426 399.212 304.247 cv
391.776 307.203 382.621 310.255 376.067 303.806 cv
372.823 300.615 370.963 297.841 366.729 295.774 cv
362.683 293.798 359.65 291.741 357.081 287.96 cv
357.635 288.776 356.352 290.863 356.925 291.707 cv
f
364.883 285.892 mo
364.883 285.892 li
332.373 285.892 li
332.373 285.892 li
364.883 285.892 li
375.953 255.122 li
376.335 254.52 375.739 253.286 375.153 252.704 cv
375.739 253.286 376.335 254.52 375.954 255.122 cv
364.883 285.892 li
370.63 253.518 mo
370.394 253.518 370.162 253.477 369.933 253.409 cv
369.934 253.407 369.934 253.404 369.934 253.402 cv
370.168 253.471 370.404 253.518 370.644 253.518 cv
370.694 253.518 370.744 253.516 370.793 253.511 cv
370.739 253.516 370.684 253.518 370.63 253.518 cv
374.843 252.462 mo
374.615 252.335 374.374 252.283 374.13 252.283 cv
374.13 252.283 li
374.374 252.283 374.615 252.335 374.843 252.462 cv
.0992752 .0885634 .158938 0 cmyk
f
364.883 285.892 mo
332.373 285.892 li
332.373 285.892 348.579 284.263 358.466 277.597 cv
366.004 272.516 368.955 259.374 369.933 253.409 cv
370.162 253.477 370.394 253.518 370.63 253.518 cv
370.684 253.518 370.739 253.516 370.793 253.511 cv
370.793 253.511 li
371.493 253.462 372.133 253.012 372.793 252.681 cv
373.215 252.461 373.678 252.283 374.13 252.283 cv
374.374 252.283 374.615 252.335 374.843 252.462 cv
374.843 252.462 li
374.942 252.516 375.047 252.6 375.153 252.704 cv
375.739 253.286 376.335 254.52 375.953 255.122 cv
364.883 285.892 li
.469734 .206668 .534539 .00805676 cmyk
f
311.52 326.031 mo
311.52 326.031 311.851 325.525 312.336 324.6 cv
312.86 323.697 313.448 322.33 314.187 320.708 cv
314.927 319.088 315.714 317.117 316.781 315.119 cv
317.814 313.103 319.07 311.033 320.411 309.017 cv
321.787 307.026 323.26 305.095 324.781 303.405 cv
326.237 301.761 327.59 300.135 328.828 298.803 cv
330.061 297.459 331.289 296.52 332.173 295.933 cv
332.628 295.654 332.993 295.454 333.253 295.339 cv
333.509 295.22 333.645 295.156 333.645 295.156 cv
333.645 295.156 333.526 295.247 333.302 295.419 cv
333.077 295.584 332.767 295.856 332.394 296.216 cv
331.62 296.908 330.694 298.062 329.625 299.472 cv
328.539 300.875 327.456 302.66 326.03 304.454 cv
324.666 306.198 323.258 308.093 321.946 310.059 cv
320.605 312.005 319.358 314.016 318.207 315.917 cv
317.065 317.824 316.013 319.615 315.115 321.187 cv
314.217 322.757 313.29 323.974 312.637 324.802 cv
311.95 325.611 311.52 326.031 311.52 326.031 cv
f
352.201 291.381 mo
351.4 291.381 li
351.122 290.802 350.977 290.203 350.961 289.797 cv
350.961 289.78 350.962 289.763 350.962 289.747 cv
351.534 290.21 351.926 290.764 352.201 291.381 cv
.177401 .208774 .783749 0 cmyk
f
356.02 302.906 mo
356.02 302.906 355.795 302.807 355.445 302.539 cv
355.136 302.238 354.646 301.864 354.14 301.349 cv
353.643 300.782 353.115 299.999 352.833 299.06 cv
352.68 298.616 352.588 298.041 352.544 297.613 cv
352.481 297.166 352.416 296.714 352.352 296.261 cv
352.302 295.795 352.248 295.318 352.219 294.835 cv
352.204 294.609 352.197 294.317 352.196 294.144 cv
352.193 293.963 352.179 293.783 352.154 293.603 cv
352.037 292.886 351.802 292.156 351.48 291.542 cv
351.452 291.488 351.426 291.435 351.4 291.381 cv
352.201 291.381 li
353.114 293.43 352.735 296.176 353.337 298.592 cv
353.804 300.465 354.811 301.743 356.004 302.882 cv
356.015 302.898 356.02 302.906 356.02 302.906 cv
.469734 .206668 .534539 .00805676 cmyk
f
356.004 302.882 mo
354.811 301.743 353.804 300.465 353.337 298.592 cv
352.735 296.176 353.114 293.43 352.201 291.381 cv
352.201 291.381 li
351.926 290.764 351.534 290.21 350.962 289.747 cv
350.973 289.324 351.062 289.114 351.062 289.114 cv
351.062 289.114 351.103 289.365 351.309 289.708 cv
351.471 290.073 351.882 290.436 352.347 290.965 cv
352.812 291.509 353.426 292.219 353.738 293.214 cv
353.819 293.461 353.88 293.723 353.916 293.993 cv
353.998 294.669 li
354.062 295.117 354.127 295.569 354.193 296.022 cv
354.243 296.488 354.297 296.967 354.326 297.45 cv
354.347 297.942 354.366 298.272 354.423 298.681 cv
354.552 299.452 354.704 300.194 355.013 300.778 cv
355.374 301.371 355.561 301.953 355.732 302.318 cv
355.85 302.627 355.964 302.817 356.004 302.882 cv
.177401 .208774 .783749 0 cmyk
f
370.229 301.906 mo
370.229 301.906 369.966 301.812 369.538 301.56 cv
369.127 301.282 368.579 300.898 367.91 300.593 cv
367.214 300.236 366.335 299.951 365.41 299.534 cv
364.948 299.337 364.45 299.098 363.985 298.849 cv
363.551 298.621 363.044 298.393 362.516 298.066 cv
362.258 297.895 361.999 297.693 361.759 297.464 cv
361.573 297.281 361.412 297.134 361.224 296.977 cv
360.859 296.67 360.46 296.382 360.06 296.086 cv
359.674 295.819 359.192 295.441 358.867 295.077 cv
358.52 294.708 358.236 294.332 357.988 293.981 cv
357.877 293.823 357.78 293.665 357.696 293.509 cv
357.615 293.109 357.514 292.722 357.382 292.355 cv
359.854 295.729 362.766 297.661 366.574 299.52 cv
367.977 300.205 369.119 300.968 370.137 301.797 cv
370.195 301.87 370.229 301.906 370.229 301.906 cv
.469734 .206668 .534539 .00805676 cmyk
f
357.696 293.509 mo
357.402 292.967 357.256 292.456 357.155 292.09 cv
357.151 292.066 357.146 292.043 357.142 292.02 cv
357.222 292.133 357.302 292.245 357.382 292.355 cv
357.514 292.722 357.615 293.109 357.696 293.509 cv
.177401 .208774 .783749 0 cmyk
f
370.137 301.797 mo
369.119 300.968 367.977 300.205 366.574 299.52 cv
362.766 297.661 359.854 295.729 357.382 292.355 cv
357.302 292.245 357.222 292.133 357.142 292.02 cv
357.059 291.573 357.062 291.323 357.062 291.323 cv
357.062 291.323 357.19 291.573 357.482 291.941 cv
357.739 292.327 358.221 292.788 358.777 293.303 cv
359.055 293.564 359.384 293.815 359.742 294.046 cv
360.113 294.292 360.451 294.449 360.927 294.704 cv
361.382 294.943 361.859 295.224 362.327 295.571 cv
362.557 295.739 362.8 295.943 363.003 296.128 cv
363.157 296.262 363.328 296.388 363.523 296.507 cv
363.9 296.764 364.369 296.997 364.858 297.287 cv
365.3 297.557 365.735 297.821 366.167 298.085 cv
367.033 298.596 367.822 299.191 368.479 299.717 cv
369.197 300.257 369.509 300.946 369.789 301.298 cv
369.934 301.532 370.058 301.698 370.137 301.797 cv
f
354.918 289.42 mo
354.701 289.42 354.461 289.394 354.219 289.361 cv
354.186 289.351 354.152 289.34 354.118 289.33 cv
354.147 289.329 354.176 289.327 354.205 289.325 cv
354.152 289.32 354.099 289.315 354.046 289.309 cv
354.028 289.304 354.01 289.299 353.992 289.294 cv
353.545 289.172 353.071 289.08 352.581 289.011 cv
352.368 288.951 352.172 288.901 352.046 288.822 cv
351.827 288.74 351.708 288.656 351.708 288.656 cv
351.708 288.656 351.706 288.747 351.737 288.917 cv
351.646 288.909 351.554 288.902 351.461 288.896 cv
351.221 288.507 351.14 288.048 351.155 287.7 cv
351.166 287.272 351.349 286.974 351.444 286.779 cv
351.568 286.587 351.645 286.489 351.645 286.489 cv
351.645 286.489 351.65 286.618 351.68 286.832 cv
351.681 287.039 351.758 287.338 351.846 287.621 cv
351.936 287.915 352.151 288.148 352.414 288.367 cv
352.679 288.578 353.054 288.808 353.422 288.974 cv
353.784 289.157 354.167 289.274 354.543 289.352 cv
354.671 289.377 354.799 289.401 354.926 289.42 cv
354.923 289.42 354.921 289.42 354.918 289.42 cv
f
351.925 289.442 mo
351.817 289.342 351.715 289.233 351.62 289.113 cv
351.561 289.044 351.508 288.971 351.461 288.896 cv
351.554 288.902 351.646 288.909 351.737 288.917 cv
351.745 288.958 351.754 289.002 351.765 289.052 cv
351.805 289.158 351.854 289.295 351.925 289.442 cv
354.219 289.361 mo
354.144 289.351 354.069 289.34 353.995 289.329 cv
353.608 289.254 353.195 289.221 352.875 289.103 cv
352.777 289.068 352.677 289.039 352.581 289.011 cv
353.071 289.08 353.545 289.172 353.992 289.294 cv
354.01 289.299 354.028 289.304 354.046 289.309 cv
354.099 289.315 354.152 289.32 354.205 289.325 cv
354.176 289.327 354.147 289.329 354.118 289.33 cv
354.152 289.34 354.186 289.351 354.219 289.361 cv
f
362.141 327.848 mo
362.141 327.848 362.078 327.693 361.968 327.42 cv
361.871 327.144 361.716 326.751 361.591 326.263 cv
361.461 325.777 361.322 325.203 361.227 324.577 cv
361.136 323.95 361.092 323.273 361.086 322.596 cv
361.095 321.919 361.148 321.244 361.243 320.618 cv
361.337 319.992 361.483 319.42 361.61 318.933 cv
361.737 318.446 361.889 318.053 361.987 317.777 cv
362.095 317.504 362.157 317.348 362.157 317.348 cv
362.157 317.348 362.138 317.515 362.104 317.806 cv
362.055 318.093 362.022 318.511 361.952 319.001 cv
361.88 319.492 361.839 320.068 361.786 320.68 cv
361.746 321.294 361.704 321.946 361.708 322.599 cv
361.701 323.252 361.736 323.904 361.773 324.517 cv
361.828 325.128 361.86 325.706 361.935 326.196 cv
362.003 326.686 362.037 327.103 362.086 327.39 cv
362.121 327.682 362.141 327.848 362.141 327.848 cv
.0281682 .0404974 .436347 0 cmyk
f
341.847 286.846 mo
341.016 286.84 340.202 286.835 339.386 286.829 cv
338.597 286.826 337.856 286.778 337.223 286.724 cv
336.588 286.67 336.067 286.554 335.706 286.476 cv
335.346 286.387 335.145 286.323 335.145 286.323 cv
335.145 286.323 335.356 286.344 335.723 286.357 cv
335.946 286.374 336.228 286.378 336.555 286.378 cv
336.765 286.378 336.993 286.376 337.237 286.375 cv
337.862 286.374 338.59 286.318 339.375 286.282 cv
340.079 286.242 340.836 286.223 341.59 286.223 cv
341.675 286.223 341.76 286.223 341.845 286.224 cv
342.685 286.235 343.524 286.244 344.311 286.275 cv
345.099 286.298 345.833 286.355 346.463 286.386 cv
347.093 286.417 347.618 286.482 347.985 286.508 cv
348.353 286.549 348.562 286.573 348.562 286.573 cv
348.562 286.573 348.353 286.593 347.985 286.63 cv
347.618 286.653 347.093 286.712 346.464 286.736 cv
345.834 286.76 345.1 286.809 344.313 286.823 cv
343.526 286.845 342.687 286.844 341.847 286.846 cv
f
352.27 286.989 mo
352.231 286.919 li
352.183 286.74 li
352.203 286.498 li
352.328 286.268 li
352.518 286.116 li
352.724 286.046 li
352.899 286.028 li
352.979 286.031 li
352.988 286.11 li
352.975 286.289 li
352.912 286.496 li
352.804 286.67 li
352.665 286.794 li
352.499 286.89 li
352.345 286.962 li
352.27 286.989 li
f
385.25 311.218 mo
385.035 311.218 384.812 311.21 384.582 311.19 cv
384.042 311.145 383.473 311.047 382.907 310.894 cv
382.35 310.729 381.808 310.523 381.324 310.283 cv
380.836 310.052 380.413 309.779 380.049 309.556 cv
379.685 309.333 379.406 309.106 379.203 308.963 cv
379.007 308.807 378.895 308.718 378.895 308.718 cv
378.895 308.718 379.028 308.768 379.263 308.857 cv
379.49 308.956 379.828 309.075 380.212 309.247 cv
380.598 309.418 381.058 309.591 381.542 309.78 cv
382.029 309.963 382.548 310.152 383.077 310.296 cv
383.598 310.45 384.143 310.554 384.652 310.647 cv
385.163 310.731 385.643 310.813 386.059 310.837 cv
386.369 310.857 386.644 310.875 386.865 310.875 cv
386.939 310.875 387.007 310.873 387.068 310.868 cv
387.316 310.866 387.458 310.843 387.458 310.843 cv
387.458 310.843 387.33 310.907 387.09 310.987 cv
386.848 311.056 386.494 311.156 386.061 311.186 cv
385.813 311.204 385.54 311.218 385.25 311.218 cv
f
335.145 278.406 mo
335.145 278.406 334.935 278.159 334.603 277.69 cv
334.308 277.208 333.839 276.514 333.481 275.603 cv
333.12 274.697 332.697 273.633 332.369 272.487 cv
332.019 271.34 331.7 270.162 331.303 268.964 cv
330.951 267.755 330.567 266.531 330.309 265.343 cv
330.031 264.161 329.915 263.011 329.837 262.033 cv
329.76 261.05 329.882 260.221 329.95 259.658 cv
330.063 259.092 330.145 258.781 330.145 258.781 cv
330.145 258.781 330.193 259.106 330.309 259.652 cv
330.391 260.202 330.629 260.962 330.863 261.862 cv
331.094 262.767 331.497 263.785 331.877 264.895 cv
332.274 266.002 332.679 267.196 333.077 268.418 cv
333.443 269.647 333.766 270.932 333.958 272.107 cv
334.18 273.282 334.286 274.381 334.48 275.301 cv
334.668 276.219 334.779 277.009 334.934 277.544 cv
335.049 278.095 335.145 278.406 335.145 278.406 cv
.469734 .206668 .534539 .00805676 cmyk
f
343.895 282.906 mo
343.895 282.906 343.835 282.665 343.731 282.244 cv
343.662 281.826 343.479 281.239 343.348 280.54 cv
343.231 279.839 342.991 279.035 342.826 278.165 cv
342.638 277.297 342.481 276.361 342.314 275.419 cv
342.184 274.471 342.045 273.516 341.994 272.605 cv
341.926 271.695 341.975 270.831 341.997 270.096 cv
342.011 269.361 342.165 268.744 342.229 268.321 cv
342.335 267.897 342.395 267.656 342.395 267.656 cv
342.395 267.656 342.466 267.893 342.592 268.31 cv
342.676 268.725 342.888 269.306 343.037 270.003 cv
343.175 270.703 343.438 271.504 343.613 272.376 cv
343.817 273.245 343.977 274.185 344.147 275.131 cv
344.276 276.085 344.407 277.045 344.445 277.961 cv
344.496 278.877 344.431 279.743 344.387 280.479 cv
344.351 281.216 344.172 281.829 344.09 282.249 cv
343.966 282.667 343.895 282.906 343.895 282.906 cv
f
326.994 441.58 mo
326.022 441.34 325.04 441.075 324.052 440.783 cv
321.327 439.952 318.546 438.966 315.804 437.757 cv
313.074 436.525 310.344 435.162 307.748 433.564 cv
302.559 430.372 297.796 426.453 294.044 422.127 cv
290.241 417.84 287.568 413.137 285.777 408.955 cv
284.017 404.737 283.28 400.98 282.944 398.368 cv
282.728 397.064 282.73 396.02 282.661 395.319 cv
282.613 394.615 282.587 394.24 282.587 394.24 cv
282.587 394.24 282.645 394.612 282.754 395.309 cv
282.884 396.002 282.971 397.033 283.298 398.307 cv
283.779 400.88 284.858 404.487 286.728 408.534 cv
288.632 412.563 291.487 416.963 295.259 421.039 cv
299.011 425.131 303.645 428.907 308.715 431.98 cv
311.231 433.552 313.884 434.893 316.533 436.123 cv
319.195 437.33 321.894 438.334 324.536 439.222 cv
326.236 439.761 327.916 440.238 329.561 440.653 cv
328.71 440.975 327.857 441.283 326.994 441.58 cv
f
343.273 443.645 mo
342.038 443.645 340.721 443.606 339.333 443.51 cv
335.623 443.243 331.406 442.668 326.994 441.58 cv
327.857 441.283 328.71 440.975 329.561 440.653 cv
333.058 441.536 336.398 442.142 339.425 442.47 cv
342.568 442.804 345.364 442.942 347.658 442.942 cv
348.612 442.942 349.48 442.918 350.249 442.874 cv
351.564 442.863 352.59 442.743 353.294 442.7 cv
353.997 442.646 354.372 442.618 354.372 442.618 cv
354.372 442.618 354.001 442.679 353.305 442.794 cv
352.608 442.898 351.59 443.108 350.277 443.236 cv
348.459 443.442 346.078 443.645 343.273 443.645 cv
.511711 .269657 .626368 .0401007 cmyk
f
356.538 290.833 mo
356.325 290.578 356.079 290.344 355.794 290.133 cv
356.157 289.985 356.402 289.756 356.571 289.62 cv
356.724 289.457 356.812 289.364 356.812 289.364 cv
356.812 289.364 356.687 289.379 356.47 289.404 cv
356.264 289.446 355.955 289.438 355.627 289.46 cv
355.575 289.464 355.522 289.466 355.468 289.466 cv
355.295 289.466 355.112 289.448 354.926 289.42 cv
354.995 289.42 355.061 289.417 355.124 289.411 cv
355.139 289.411 355.153 289.412 355.168 289.412 cv
355.435 289.412 355.731 289.292 355.936 289.2 cv
356.126 289.1 356.375 288.919 356.464 288.612 cv
356.559 288.328 356.679 288.004 356.697 287.781 cv
356.753 287.548 356.77 287.406 356.77 287.406 cv
356.77 287.406 356.875 287.499 357.044 287.689 cv
357.16 287.87 357.385 288.13 357.479 288.528 cv
357.345 288.343 357.212 288.154 357.081 287.96 cv
357.461 288.52 356.976 289.678 356.82 290.623 cv
356.73 290.7 356.636 290.77 356.538 290.833 cv
.177401 .208774 .783749 0 cmyk
f
355.188 291.264 mo
354.527 291.264 353.947 291.124 353.464 290.875 cv
352.964 290.643 352.592 290.27 352.291 289.968 cv
352.124 289.802 352.009 289.615 351.925 289.442 cv
352.213 289.707 352.543 289.908 352.893 290.092 cv
353.368 290.302 353.886 290.438 354.378 290.438 cv
354.404 290.438 354.43 290.437 354.456 290.437 cv
354.463 290.437 354.471 290.437 354.479 290.437 cv
354.985 290.437 355.435 290.276 355.79 290.135 cv
355.791 290.134 355.792 290.134 355.794 290.133 cv
356.079 290.344 356.325 290.578 356.538 290.833 cv
356.151 291.082 355.7 291.223 355.221 291.264 cv
355.21 291.264 355.199 291.264 355.188 291.264 cv
f
356.82 290.623 mo
356.976 289.678 357.461 288.52 357.081 287.96 cv
357.212 288.154 357.345 288.343 357.479 288.528 cv
357.488 288.568 357.497 288.609 357.503 288.652 cv
357.583 289.089 357.562 289.811 357.071 290.372 cv
356.992 290.462 356.908 290.546 356.82 290.623 cv
f
355.794 290.133 mo
355.365 289.817 354.847 289.556 354.219 289.361 cv
354.461 289.394 354.701 289.42 354.918 289.42 cv
354.921 289.42 354.923 289.42 354.926 289.42 cv
355.112 289.448 355.295 289.466 355.468 289.466 cv
355.522 289.466 355.575 289.464 355.627 289.46 cv
355.955 289.438 356.264 289.446 356.47 289.404 cv
356.687 289.379 356.812 289.364 356.812 289.364 cv
356.812 289.364 356.724 289.457 356.571 289.62 cv
356.402 289.756 356.157 289.985 355.794 290.133 cv
352.581 289.011 mo
352.304 288.972 352.022 288.941 351.737 288.917 cv
351.706 288.747 351.708 288.656 351.708 288.656 cv
351.708 288.656 351.827 288.74 352.046 288.822 cv
352.172 288.901 352.368 288.951 352.581 289.011 cv
.250767 .276371 .857206 .00640879 cmyk
f
354.378 290.438 mo
353.886 290.438 353.368 290.302 352.893 290.092 cv
352.543 289.908 352.213 289.707 351.925 289.442 cv
351.854 289.295 351.805 289.158 351.765 289.052 cv
351.754 289.002 351.745 288.958 351.737 288.917 cv
352.022 288.941 352.304 288.972 352.581 289.011 cv
352.677 289.039 352.777 289.068 352.875 289.103 cv
353.195 289.221 353.608 289.254 353.995 289.329 cv
354.069 289.34 354.144 289.351 354.219 289.361 cv
354.847 289.556 355.365 289.817 355.794 290.133 cv
355.792 290.134 355.791 290.134 355.79 290.135 cv
355.435 290.276 354.985 290.437 354.479 290.437 cv
354.471 290.437 354.463 290.437 354.456 290.437 cv
354.43 290.437 354.404 290.438 354.378 290.438 cv
f
360.532 291.381 mo
359.988 291.381 li
359.549 290.971 359.125 290.535 358.713 290.069 cv
358.934 290.221 359.184 290.395 359.443 290.598 cv
359.766 290.852 360.138 291.114 360.532 291.381 cv
.177401 .208774 .783749 0 cmyk
f
368.708 296.718 mo
368.708 296.718 368.512 296.631 368.164 296.515 cv
368.11 296.492 368.05 296.469 367.987 296.447 cv
367.591 296.215 367.173 295.99 366.729 295.774 cv
364.107 294.493 361.909 293.178 359.988 291.381 cv
360.532 291.381 li
360.734 291.518 360.942 291.657 361.152 291.797 cv
361.773 292.168 362.531 292.692 363.177 293.156 cv
363.84 293.652 364.471 294.071 365.136 294.419 cv
365.778 294.763 366.467 295.132 367.011 295.424 cv
367.573 295.725 367.996 296.075 368.287 296.306 cv
368.565 296.562 368.708 296.718 368.708 296.718 cv
.469734 .206668 .534539 .00805676 cmyk
f
367.987 296.447 mo
367.661 296.332 367.226 296.223 366.736 296.063 cv
366.15 295.868 365.432 295.712 364.68 295.409 cv
363.912 295.132 363.137 294.642 362.454 294.159 cv
361.763 293.631 361.162 293.195 360.504 292.67 cv
359.873 292.151 359.39 291.573 358.968 291.103 cv
358.548 290.63 358.263 290.178 358.036 289.889 cv
357.827 289.582 357.708 289.406 357.708 289.406 cv
357.708 289.406 357.888 289.519 358.203 289.718 cv
358.342 289.82 358.516 289.935 358.713 290.069 cv
359.125 290.535 359.549 290.971 359.988 291.381 cv
359.988 291.381 li
361.909 293.178 364.107 294.493 366.729 295.774 cv
367.173 295.99 367.591 296.215 367.987 296.447 cv
.177401 .208774 .783749 0 cmyk
f
334.363 291.381 mo
333.604 291.323 333.229 289.823 333.145 289.364 cv
333.062 288.906 332.479 289.031 332.479 288.781 cv
332.479 288.531 333.02 288.239 332.895 287.906 cv
332.77 287.573 332.229 286.739 332.062 286.489 cv
331.895 286.239 332.373 285.892 332.373 285.892 cv
333.77 286.864 li
335.77 289.239 li
334.363 291.381 li
.0885939 .116335 .722957 0 cmyk
f
364.883 285.892 mo
365.375 285.864 364.416 287.802 364.416 288.01 cv
364.416 288.218 364.604 288.573 364.374 288.843 cv
364.145 289.114 363.666 289.802 363.666 290.052 cv
363.666 290.302 363.604 291.01 363.437 291.156 cv
363.27 291.302 363.327 291.357 362.913 291.381 cv
362.5 291.406 362.104 290.823 362.104 290.823 cv
362.77 288.656 li
364.812 285.927 li
364.883 285.892 li
f
362.996 287.944 mo
362.847 287.94 362.699 287.939 362.56 287.915 cv
362.42 287.899 362.291 287.849 362.18 287.823 cv
362.069 287.798 361.977 287.738 361.913 287.715 cv
361.812 287.656 li
361.915 287.594 li
361.981 287.568 362.074 287.505 362.186 287.476 cv
362.298 287.446 362.428 287.391 362.567 287.37 cv
362.706 287.342 362.855 287.335 363.003 287.326 cv
363.151 287.33 363.299 287.332 363.438 287.356 cv
363.529 287.367 363.617 287.392 363.698 287.416 cv
363.323 287.918 li
363.216 287.932 363.106 287.938 362.996 287.944 cv
.177401 .208774 .783749 0 cmyk
f
363.323 287.918 mo
363.698 287.416 li
363.74 287.428 363.779 287.439 363.817 287.447 cv
363.928 287.474 364.02 287.532 364.085 287.556 cv
364.187 287.614 li
364.085 287.676 li
364.02 287.702 363.927 287.764 363.815 287.794 cv
363.703 287.823 363.573 287.877 363.433 287.899 cv
363.397 287.907 363.36 287.913 363.323 287.918 cv
f
337.212 289.82 mo
336.888 289.82 336.567 289.817 336.253 289.801 cv
335.97 289.782 335.707 289.744 335.462 289.708 cv
335.751 289.269 li
335.927 289.265 336.103 289.261 336.265 289.257 cv
336.8 289.238 337.288 289.22 337.801 289.201 cv
337.981 289.2 338.16 289.2 338.339 289.2 cv
338.682 289.2 339.019 289.202 339.344 289.215 cv
339.836 289.226 340.298 289.272 340.694 289.293 cv
341.09 289.315 341.422 289.371 341.654 289.393 cv
341.888 289.428 342.02 289.448 342.02 289.448 cv
342.02 289.448 341.891 289.471 341.662 289.513 cv
341.433 289.541 341.107 289.608 340.713 289.641 cv
340.318 289.674 339.858 289.733 339.364 289.759 cv
338.869 289.793 338.34 289.805 337.812 289.819 cv
337.792 289.819 337.772 289.819 337.752 289.819 cv
337.663 289.819 337.575 289.819 337.487 289.82 cv
337.395 289.82 337.303 289.82 337.212 289.82 cv
f
335.462 289.708 mo
335.265 289.679 335.079 289.65 334.905 289.634 cv
334.549 289.595 334.248 289.555 334.024 289.555 cv
334.004 289.555 333.985 289.556 333.966 289.556 cv
333.943 289.556 333.921 289.556 333.9 289.556 cv
333.712 289.556 333.604 289.573 333.604 289.573 cv
333.604 289.573 333.722 289.51 333.949 289.438 cv
334.176 289.379 334.513 289.301 334.916 289.287 cv
335.158 289.282 335.456 289.275 335.751 289.269 cv
335.462 289.708 li
f
149.77 450.553 mo
112.794 450.553 82.8182 446.566 82.8182 441.649 cv
82.8182 440.188 85.4636 438.809 90.1534 437.593 cv
92.4032 439.731 95.2052 441.228 98.3473 441.773 cv
110.271 443.847 127.571 445.932 148.978 445.982 cv
148.981 445.982 148.982 445.982 148.985 445.982 cv
149.021 445.982 149.054 445.982 149.09 445.982 cv
149.093 445.982 149.096 445.982 149.1 445.982 cv
149.136 445.982 149.17 445.982 149.206 445.982 cv
149.206 445.982 149.207 445.982 149.207 445.982 cv
149.243 445.982 149.278 445.982 149.314 445.982 cv
149.316 445.982 149.318 445.982 149.32 445.982 cv
149.353 445.983 149.387 445.983 149.42 445.983 cv
149.426 445.983 149.431 445.983 149.437 445.983 cv
149.47 445.983 149.503 445.983 149.536 445.983 cv
149.541 445.983 149.546 445.983 149.551 445.983 cv
149.583 445.983 149.618 445.983 149.65 445.983 cv
149.655 445.983 149.661 445.983 149.666 445.983 cv
149.699 445.983 149.734 445.983 149.767 445.983 cv
149.767 445.983 li
171.547 445.983 189.127 443.873 201.197 441.773 cv
204.336 441.228 207.137 439.731 209.387 437.592 cv
214.077 438.809 216.722 440.188 216.722 441.649 cv
216.722 446.566 186.747 450.553 149.77 450.553 cv
.0992752 .0885634 .158938 0 cmyk
f
214.817 420.763 mo
216.487 430.713 210.247 440.203 201.197 441.773 cv
189.127 443.873 171.547 445.983 149.767 445.983 cv
127.997 445.983 110.417 443.873 98.3473 441.773 cv
89.2872 440.203 83.0573 430.713 84.7273 420.763 cv
86.3873 410.913 86.6373 400.873 87.7673 390.953 cv
88.8372 381.593 90.6872 373.263 94.5372 364.763 cv
97.8973 357.323 101.917 350.273 105.107 342.743 cv
107.337 337.473 109.147 331.973 111.687 326.863 cv
116.977 316.193 126.387 310.073 136.157 305.143 cv
149.767 305.143 li
163.387 305.143 li
173.157 310.073 182.567 316.193 187.857 326.863 cv
190.387 331.973 192.207 337.473 194.437 342.743 cv
197.617 350.273 201.647 357.323 205.007 364.763 cv
208.857 373.263 210.707 381.593 211.777 390.953 cv
212.907 400.873 213.157 410.913 214.817 420.763 cv
.660182 .349523 .276921 .0120546 cmyk
f
175.977 266.223 mo
176.627 266.583 177.547 268.173 177.097 268.883 cv
166.067 299.543 li
133.467 299.543 li
122.337 268.883 li
122.517 266.553 124.677 265.533 126.437 265.973 cv
128.207 266.413 129.677 267.933 131.237 269.073 cv
132.807 270.213 134.787 270.973 136.357 269.833 cv
137.267 269.173 137.887 267.973 138.807 267.333 cv
140.447 266.193 142.457 267.183 144.117 268.303 cv
145.767 269.413 147.597 270.693 149.397 270.063 cv
151.097 269.463 152.297 267.263 154.027 266.813 cv
155.407 266.452 156.719 267.275 158.036 268.097 cv
159.277 268.872 160.523 269.646 161.837 269.433 cv
164.127 269.073 165.817 265.823 168.107 266.013 cv
169.427 266.113 170.607 267.383 171.927 267.273 cv
172.627 267.223 173.277 266.773 173.927 266.443 cv
174.587 266.103 175.327 265.863 175.977 266.223 cv
f
166.067 299.543 mo
164.047 305.143 li
163.387 305.143 li
149.767 305.143 li
136.157 305.143 li
135.497 305.143 li
133.467 299.543 li
166.067 299.543 li
.0885939 .116335 .722957 0 cmyk
f
.0865492 .0589609 .181369 0 cmyk
%ADOBeginSubsetFont: Glegoo-Regular AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginCCBKIF+Glegoo-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/lira <1C60D8A8C9B7F7BFA959B5307176AD342139A0B8EC3FC84D05462120DB04AAB676969EEF4E44986808B851A508C474586CAA5C13A316AE21EF6D8160153BB4D5333479DCC1A95A63DB989D7E6281505C62B815577E34F9B825FA61FD62C19EF2EC6743F6A42E6399671F76FE69E12EF324B35FF05F0105DFA3937B2FE8CFB6749299BD91A9424F4F560823AC13FD9245> |-systemdict /gcheck known {setglobal} if end {end} ifendCCBKIF+Glegoo-Regular /Encoding getdup 32 /lira putpop%ADOEndSubsetFont
/CCBKIF+Glegoo-Regular*1 [32{/.notdef}rp /lira 3{/.notdef}rp /dollar 219{/.notdef}rp]CCBKIF+Glegoo-Regular nfCCBKIF+Glegoo-Regular*1 [86.3512 0 0 -86.3512 0 0 ]msf112.729 401.775 mo( )sh209.387 437.592 mo
209.387 437.592 li
213.624 433.565 215.908 427.262 214.817 420.763 cv
213.643 413.797 213.175 406.736 212.601 399.689 cv
213.175 406.736 213.643 413.797 214.817 420.763 cv
215.908 427.262 213.625 433.565 209.387 437.592 cv
209.45 377.594 mo
209.445 377.575 209.44 377.555 209.435 377.535 cv
209.44 377.555 209.445 377.575 209.45 377.594 cv
209.421 377.48 mo
208.345 373.184 206.924 368.995 205.007 364.763 cv
201.647 357.323 197.617 350.273 194.437 342.743 cv
197.617 350.273 201.647 357.323 205.007 364.763 cv
206.924 368.995 208.345 373.184 209.421 377.48 cv
.0992752 .0885634 .158938 0 cmyk
f
149.767 445.983 mo
149.767 445.983 li
149.767 445.983 li
171.547 445.983 189.127 443.873 201.197 441.773 cv
204.336 441.228 207.137 439.731 209.387 437.592 cv
209.387 437.592 li
207.137 439.731 204.336 441.228 201.197 441.773 cv
189.127 443.873 171.547 445.983 149.767 445.983 cv
149.666 445.983 mo
149.661 445.983 149.655 445.983 149.65 445.983 cv
149.656 445.983 149.659 445.983 149.666 445.983 cv
149.551 445.983 mo
149.546 445.983 149.541 445.983 149.536 445.983 cv
149.541 445.983 149.546 445.983 149.551 445.983 cv
149.437 445.983 mo
149.431 445.983 149.426 445.983 149.42 445.983 cv
149.425 445.983 149.432 445.983 149.437 445.983 cv
149.32 445.982 mo
149.318 445.982 149.316 445.982 149.314 445.982 cv
149.317 445.982 149.317 445.982 149.32 445.982 cv
149.207 445.982 mo
149.207 445.982 149.206 445.982 149.206 445.982 cv
149.207 445.982 li
149.1 445.982 mo
149.096 445.982 149.093 445.982 149.09 445.982 cv
149.092 445.982 149.097 445.982 149.1 445.982 cv
148.985 445.982 mo
148.982 445.982 148.981 445.982 148.978 445.982 cv
148.979 445.982 148.984 445.982 148.985 445.982 cv
.188418 .169192 .293126 0 cmyk
f
149.767 445.983 mo
149.767 445.983 li
149.733 445.983 149.7 445.983 149.666 445.983 cv
149.659 445.983 149.656 445.983 149.65 445.983 cv
149.617 445.983 149.584 445.983 149.551 445.983 cv
149.546 445.983 149.541 445.983 149.536 445.983 cv
149.503 445.983 149.47 445.983 149.437 445.983 cv
149.432 445.983 149.425 445.983 149.42 445.983 cv
149.387 445.983 149.353 445.983 149.32 445.982 cv
149.317 445.982 149.317 445.982 149.314 445.982 cv
149.278 445.982 149.243 445.982 149.207 445.982 cv
149.206 445.982 li
149.17 445.982 149.136 445.982 149.1 445.982 cv
149.097 445.982 149.092 445.982 149.09 445.982 cv
149.055 445.982 149.019 445.982 148.985 445.982 cv
148.984 445.982 148.979 445.982 148.978 445.982 cv
139.695 445.96 131.186 445.555 123.551 444.935 cv
158.07 438.383 184.493 401.836 184.493 357.73 cv
184.493 348.82 183.414 340.221 181.408 332.114 cv
184.212 333.601 187.352 334.494 190.6 334.706 cv
190.602 334.706 190.604 334.706 190.606 334.706 cv
190.732 334.706 190.872 334.473 191.018 334.129 cv
192.155 337.002 193.237 339.906 194.437 342.743 cv
194.437 342.743 li
197.617 350.273 201.647 357.323 205.007 364.763 cv
206.924 368.995 208.345 373.184 209.421 377.48 cv
209.426 377.498 209.43 377.517 209.435 377.535 cv
209.44 377.555 209.445 377.575 209.45 377.594 cv
210.519 381.891 211.245 386.294 211.777 390.953 cv
212.108 393.857 212.363 396.772 212.601 399.689 cv
213.175 406.736 213.643 413.797 214.817 420.763 cv
215.908 427.262 213.624 433.565 209.387 437.592 cv
207.137 439.731 204.336 441.228 201.197 441.773 cv
189.127 443.873 171.547 445.983 149.767 445.983 cv
.692164 .396033 .381933 .0635691 cmyk
f
187.857 326.863 mo
187.848 326.844 187.839 326.825 187.829 326.806 cv
187.839 326.825 187.848 326.844 187.857 326.863 cv
187.824 326.795 mo
187.814 326.777 187.805 326.758 187.796 326.739 cv
187.805 326.758 187.814 326.777 187.824 326.795 cv
187.793 326.735 mo
187.785 326.717 187.775 326.699 187.767 326.681 cv
187.775 326.699 187.785 326.717 187.793 326.735 cv
187.762 326.672 mo
187.753 326.654 187.743 326.635 187.734 326.616 cv
187.743 326.635 187.753 326.654 187.762 326.672 cv
187.73 326.609 mo
187.721 326.591 187.712 326.573 187.703 326.555 cv
187.712 326.573 187.721 326.591 187.73 326.609 cv
187.7 326.55 mo
187.691 326.531 187.681 326.513 187.672 326.494 cv
187.681 326.513 187.691 326.531 187.7 326.55 cv
187.666 326.483 mo
187.658 326.466 187.649 326.448 187.64 326.431 cv
187.649 326.448 187.658 326.466 187.666 326.483 cv
187.638 326.427 mo
187.629 326.409 187.619 326.391 187.61 326.373 cv
187.619 326.391 187.628 326.409 187.638 326.427 cv
187.602 326.358 mo
187.593 326.341 187.585 326.324 187.576 326.307 cv
187.585 326.324 187.593 326.341 187.602 326.358 cv
187.57 326.295 mo
187.563 326.282 187.555 326.268 187.548 326.254 cv
187.556 326.268 187.563 326.281 187.57 326.295 cv
187.538 326.234 mo
187.53 326.219 187.522 326.203 187.514 326.188 cv
187.522 326.203 187.53 326.219 187.538 326.234 cv
187.501 326.163 mo
187.497 326.154 187.493 326.147 187.488 326.138 cv
187.493 326.147 187.497 326.155 187.501 326.163 cv
187.434 326.035 mo
187.432 326.032 187.431 326.03 187.43 326.027 cv
187.431 326.03 187.433 326.033 187.434 326.035 cv
.0992752 .0885634 .158938 0 cmyk
f
189.752 331.023 mo
186.15 330.398 182.762 328.926 179.92 326.737 cv
178.235 321.239 176.114 316 173.61 311.085 cv
179.151 314.904 184.05 319.622 187.43 326.027 cv
187.431 326.03 187.432 326.032 187.434 326.035 cv
187.452 326.069 187.47 326.104 187.488 326.138 cv
187.493 326.147 187.497 326.154 187.501 326.163 cv
187.506 326.172 187.51 326.18 187.514 326.188 cv
187.522 326.203 187.53 326.219 187.538 326.234 cv
187.541 326.241 187.545 326.248 187.548 326.254 cv
187.555 326.268 187.563 326.282 187.57 326.295 cv
187.572 326.299 187.574 326.303 187.576 326.307 cv
187.585 326.324 187.593 326.341 187.602 326.358 cv
187.605 326.363 187.608 326.368 187.61 326.373 cv
187.619 326.391 187.629 326.409 187.638 326.427 cv
187.638 326.428 187.639 326.429 187.64 326.431 cv
187.649 326.448 187.658 326.466 187.666 326.483 cv
187.668 326.487 187.67 326.49 187.672 326.494 cv
187.681 326.513 187.691 326.531 187.7 326.55 cv
187.701 326.552 187.702 326.554 187.703 326.555 cv
187.712 326.573 187.721 326.591 187.73 326.609 cv
187.731 326.611 187.733 326.613 187.734 326.616 cv
187.743 326.635 187.753 326.654 187.762 326.672 cv
187.764 326.675 187.765 326.678 187.767 326.681 cv
187.775 326.699 187.785 326.717 187.793 326.735 cv
187.794 326.736 187.795 326.738 187.796 326.739 cv
187.805 326.758 187.814 326.777 187.824 326.795 cv
187.826 326.799 187.827 326.803 187.829 326.806 cv
187.839 326.825 187.848 326.844 187.857 326.863 cv
187.857 326.863 li
188.532 328.226 189.157 329.617 189.752 331.023 cv
.692164 .396033 .381933 .0635691 cmyk
f
153.009 304.566 mo
156.97 305.477 160.013 308.403 160.244 312.592 cv
160.494 317.111 157.451 321.213 158.113 325.754 cv
158.74 330.051 162.515 333.191 163.671 337.383 cv
164.892 341.81 164.27 346.315 162.349 350.427 cv
163.047 348.933 164.291 347.686 164.993 346.184 cv
166.819 342.278 167.462 338.099 166.483 333.866 cv
165.436 329.338 161.418 326.037 160.758 321.51 cv
160.131 317.213 162.857 313.327 162.921 309.087 cv
162.988 304.597 159.887 301.297 155.653 300.323 cv
155.372 300.258 154.832 301.351 154.302 302.444 cv
153.774 303.534 153.254 304.623 153.009 304.566 cv
.0885939 .116335 .722957 0 cmyk
f
156.77 304.6 mo
160.263 306.106 163.975 307.678 166.667 310.463 cv
169.833 313.739 170.268 318.172 172.042 322.172 cv
175.323 329.574 182.642 334.187 190.6 334.706 cv
190.841 334.722 191.134 333.866 191.42 333.011 cv
191.706 332.156 191.986 331.301 192.201 331.315 cv
184.243 330.796 176.925 326.185 173.644 318.781 cv
171.974 315.016 171.538 310.802 168.737 307.603 cv
166.015 304.495 162.085 302.81 158.372 301.21 cv
156.77 304.6 li
f
166.067 299.543 mo
166.067 299.543 li
166.067 299.543 li
142.527 299.543 li
142.527 299.543 li
166.067 299.543 li
177.097 268.883 li
177.547 268.173 176.627 266.583 175.977 266.223 cv
176.627 266.583 177.547 268.173 177.097 268.883 cv
166.067 299.543 li
171.81 267.279 mo
171.81 267.276 171.811 267.272 171.812 267.268 cv
171.927 267.273 li
171.888 267.276 171.849 267.278 171.81 267.279 cv
174.726 266.12 mo
174.727 266.12 174.727 266.12 174.728 266.12 cv
174.727 266.12 174.727 266.12 174.726 266.12 cv
174.737 266.117 mo
174.87 266.082 175.004 266.058 175.138 266.049 cv
175.004 266.058 174.87 266.082 174.737 266.117 cv
175.302 266.044 mo
175.29 266.044 175.278 266.044 175.266 266.044 cv
175.266 266.044 li
175.278 266.044 175.29 266.044 175.302 266.044 cv
.0992752 .0885634 .158938 0 cmyk
f
166.067 299.543 mo
142.527 299.543 li
151.023 298.114 159.596 295.278 163.196 289.711 cv
168.282 281.844 170.681 273.3 171.81 267.279 cv
171.849 267.278 171.888 267.276 171.927 267.273 cv
171.927 267.273 li
172.627 267.223 173.277 266.773 173.927 266.443 cv
174.185 266.31 174.454 266.193 174.726 266.12 cv
174.727 266.12 174.727 266.12 174.728 266.12 cv
174.731 266.119 174.734 266.118 174.737 266.117 cv
174.87 266.082 175.004 266.058 175.138 266.049 cv
175.181 266.045 175.223 266.044 175.266 266.044 cv
175.278 266.044 175.29 266.044 175.302 266.044 cv
175.533 266.049 175.76 266.103 175.977 266.223 cv
175.977 266.223 li
176.627 266.583 177.547 268.173 177.097 268.883 cv
166.067 299.543 li
.692164 .396033 .381933 .0635691 cmyk
f
166.067 299.543 mo
142.527 299.543 li
142.527 299.543 li
166.067 299.543 li
.177401 .208774 .783749 0 cmyk
f
154.085 302.892 mo
154.076 302.867 154.067 302.843 154.06 302.818 cv
153.936 302.432 153.982 302.075 154.054 301.79 cv
154.218 301.213 154.573 300.891 154.789 300.677 cv
155.033 300.48 155.188 300.404 155.188 300.404 cv
155.188 300.404 155.089 300.55 154.98 300.82 cv
154.898 300.986 154.827 301.219 154.783 301.476 cv
154.627 301.777 154.464 302.111 154.302 302.444 cv
154.229 302.594 154.157 302.745 154.085 302.892 cv
f
156.911 304.302 mo
156.23 304.263 155.471 304.16 154.832 303.755 cv
154.513 303.567 154.216 303.248 154.085 302.892 cv
154.157 302.745 154.229 302.594 154.302 302.444 cv
154.464 302.111 154.627 301.777 154.783 301.476 cv
154.759 301.613 154.744 301.757 154.738 301.902 cv
154.726 302.352 154.947 302.641 155.35 302.799 cv
155.8 302.99 156.382 303.062 157.014 303.069 cv
157.487 303.083 li
156.911 304.302 li
f
157.195 304.306 mo
157.123 304.306 157.049 304.306 156.973 304.305 cv
156.952 304.304 156.931 304.303 156.911 304.302 cv
157.487 303.083 li
157.969 303.096 li
158.284 303.086 158.594 303.075 158.915 303.064 cv
158.945 303.063 158.976 303.062 159.007 303.062 cv
159.322 303.062 159.672 303.122 159.933 303.21 cv
160.208 303.304 160.477 303.395 160.705 303.473 cv
161.024 303.575 161.303 303.641 161.538 303.641 cv
161.627 303.641 161.71 303.632 161.786 303.611 cv
162.067 303.568 162.229 303.487 162.229 303.487 cv
162.229 303.487 162.135 303.631 161.884 303.832 cv
161.664 303.994 161.247 304.168 160.773 304.168 cv
160.712 304.168 160.65 304.165 160.588 304.159 cv
160.245 304.134 159.919 304.1 159.597 304.1 cv
159.395 304.1 159.195 304.113 158.992 304.151 cv
158.712 304.196 158.39 304.263 158.013 304.288 cv
157.717 304.302 157.467 304.306 157.195 304.306 cv
f
156.839 300.667 mo
156.612 300.587 156.381 300.514 156.146 300.448 cv
156.299 300.324 156.465 300.212 156.64 300.137 cv
156.835 300.055 157.033 300.027 157.196 300.015 cv
157.22 300.013 157.244 300.012 157.266 300.012 cv
157.4 300.012 157.512 300.044 157.589 300.062 cv
157.729 300.112 li
157.599 300.181 li
157.516 300.21 157.409 300.289 157.287 300.35 cv
157.161 300.408 157.04 300.518 156.908 300.61 cv
156.885 300.629 156.862 300.648 156.839 300.667 cv
.0281682 .0404974 .436347 0 cmyk
f
155.292 301.925 mo
155.292 301.925 155.304 301.873 155.326 301.78 cv
155.359 301.697 155.383 301.561 155.453 301.426 cv
155.521 301.291 155.589 301.119 155.699 300.96 cv
155.804 300.795 155.946 300.638 156.099 300.487 cv
156.115 300.474 156.13 300.461 156.146 300.448 cv
156.381 300.514 156.612 300.587 156.839 300.667 cv
156.732 300.753 156.621 300.843 156.515 300.946 cv
156.393 301.057 156.299 301.143 156.114 301.312 cv
155.986 301.437 155.84 301.536 155.729 301.637 cv
155.618 301.737 155.495 301.8 155.422 301.853 cv
155.292 301.925 li
f
140.644 300.561 mo
140.432 300.561 140.223 300.559 140.018 300.554 cv
139.207 300.539 138.452 300.483 137.805 300.428 cv
137.159 300.378 136.624 300.28 136.251 300.223 cv
135.879 300.153 135.667 300.112 135.667 300.112 cv
135.667 300.112 135.883 300.109 136.261 300.104 cv
136.31 300.105 136.362 300.105 136.417 300.105 cv
136.78 300.105 137.26 300.087 137.818 300.081 cv
137.823 300.081 137.828 300.081 137.833 300.081 cv
138.473 300.081 139.217 300.034 140.013 300.011 cv
140.845 299.976 141.678 299.941 142.528 299.906 cv
143.381 299.881 144.216 299.856 145.052 299.831 cv
145.272 299.827 145.488 299.825 145.699 299.825 cv
146.263 299.825 146.791 299.838 147.262 299.845 cv
147.909 299.852 148.448 299.906 148.825 299.929 cv
149.202 299.966 149.417 299.987 149.417 299.987 cv
149.417 299.987 149.203 300.01 148.826 300.05 cv
148.463 300.083 147.84 300.141 147.272 300.193 cv
146.635 300.246 145.832 300.313 145.077 300.375 cv
144.273 300.438 143.414 300.483 142.553 300.524 cv
141.91 300.544 141.266 300.561 140.644 300.561 cv
f
159.91 315.974 mo
159.913 315.959 159.915 315.943 159.917 315.927 cv
159.968 315.653 160.013 315.257 160.08 314.791 cv
160.147 314.325 160.179 313.779 160.19 313.201 cv
160.196 312.623 160.168 312.003 160.085 311.395 cv
160.079 311.344 160.073 311.293 160.065 311.243 cv
160.158 311.676 160.218 312.126 160.244 312.592 cv
160.308 313.742 160.158 314.865 159.91 315.974 cv
.158602 .178988 .16321 0 cmyk
f
159.854 316.362 mo
159.854 316.362 159.874 316.223 159.91 315.974 cv
160.158 314.865 160.308 313.742 160.244 312.592 cv
160.218 312.126 160.158 311.676 160.065 311.243 cv
159.988 310.688 159.851 310.148 159.675 309.658 cv
159.492 309.141 159.184 308.702 158.895 308.323 cv
158.603 307.946 158.392 307.591 158.265 307.339 cv
158.146 307.079 158.104 306.925 158.104 306.925 cv
158.104 306.925 158.187 307.064 158.366 307.274 cv
158.532 307.494 158.823 307.756 159.157 308.097 cv
159.483 308.436 159.917 308.855 160.177 309.451 cv
160.439 310.017 160.607 310.663 160.699 311.314 cv
160.773 311.966 160.794 312.619 160.734 313.23 cv
160.684 313.84 160.544 314.395 160.421 314.861 cv
160.297 315.329 160.133 315.698 160.034 315.959 cv
159.919 316.217 159.854 316.362 159.854 316.362 cv
.0281682 .0404974 .436347 0 cmyk
f
163.479 335.05 mo
163.479 335.05 163.373 334.917 163.185 334.684 cv
163.009 334.444 162.736 334.115 162.448 333.696 cv
162.161 333.278 161.807 332.8 161.461 332.269 cv
161.108 331.742 160.755 331.166 160.393 330.594 cv
160.037 330.017 159.681 329.422 159.427 328.817 cv
159.184 328.19 159.012 327.687 158.79 327.206 cv
158.585 326.737 158.466 326.315 158.406 326.02 cv
158.354 325.721 158.354 325.55 158.354 325.55 cv
158.354 325.55 158.397 325.717 158.52 325.984 cv
158.627 326.258 158.848 326.614 159.1 327.051 cv
159.354 327.468 159.671 328.044 159.92 328.586 cv
160.203 329.133 160.551 329.698 160.917 330.265 cv
161.267 330.844 161.615 331.427 161.924 331.982 cv
162.24 332.534 162.504 333.067 162.745 333.515 cv
162.987 333.963 163.155 334.356 163.288 334.621 cv
163.41 334.895 163.479 335.05 163.479 335.05 cv
f
177.292 328.737 mo
177.292 328.737 177.022 328.717 176.602 328.495 cv
176.189 328.265 175.68 327.782 175.25 327.105 cv
174.826 326.415 174.335 325.682 173.826 324.816 cv
173.57 324.378 173.312 323.939 173.051 323.492 cv
172.786 323.041 172.516 322.583 172.331 322.087 cv
171.935 321.112 171.545 320.151 171.163 319.209 cv
170.772 318.295 170.575 317.363 170.38 316.609 cv
170.187 315.846 170.032 315.213 169.869 314.784 cv
169.72 314.35 169.604 314.112 169.604 314.112 cv
169.604 314.112 169.758 314.327 169.979 314.736 cv
170.189 315.149 170.465 315.759 170.712 316.511 cv
170.966 317.266 171.245 318.119 171.667 319.005 cv
172.067 319.927 172.476 320.868 172.89 321.822 cv
173.067 322.317 173.328 322.768 173.579 323.215 cv
173.821 323.661 174.058 324.101 174.295 324.539 cv
174.734 325.375 175.184 326.23 175.548 326.925 cv
175.917 327.606 176.299 328.13 176.668 328.394 cv
177.026 328.67 177.292 328.737 177.292 328.737 cv
f
134.188 306.112 mo
135.519 306.112 137.729 305.154 139.938 305.154 cv
142.146 305.154 138.438 302.362 138.438 302.362 cv
133.467 299.543 li
133.467 299.543 133.104 299.821 133.354 300.612 cv
133.604 301.404 134.146 303.321 134.271 303.987 cv
134.396 304.654 133.854 306.112 134.188 306.112 cv
.0885939 .116335 .722957 0 cmyk
f
166.067 299.543 mo
166.385 299.643 165.698 301.237 165.573 301.55 cv
165.448 301.862 164.823 304.393 164.823 304.393 cv
163.917 303.893 li
166.067 299.543 li
cp
f
140.216 303.984 mo
140.126 303.876 140.026 303.766 139.92 303.658 cv
139.953 303.661 139.985 303.664 140.017 303.666 cv
140.279 303.688 140.5 303.744 140.653 303.766 cv
140.808 303.801 140.896 303.821 140.896 303.821 cv
140.896 303.821 140.81 303.844 140.659 303.886 cv
140.545 303.907 140.394 303.95 140.216 303.984 cv
.177401 .208774 .783749 0 cmyk
f
137.787 304.193 mo
137.546 304.193 137.309 304.191 137.082 304.178 cv
136.753 304.166 136.447 304.121 136.185 304.099 cv
135.923 304.077 135.705 304.022 135.552 304 cv
135.4 303.965 135.313 303.946 135.313 303.946 cv
135.313 303.946 135.4 303.922 135.553 303.88 cv
135.705 303.852 135.924 303.787 136.185 303.753 cv
136.446 303.72 136.75 303.661 137.077 303.634 cv
137.403 303.601 137.751 303.588 138.098 303.574 cv
138.218 303.573 138.337 303.573 138.455 303.573 cv
138.683 303.573 138.907 303.575 139.122 303.588 cv
139.409 303.598 139.68 303.634 139.92 303.658 cv
140.026 303.766 140.126 303.876 140.216 303.984 cv
140.157 303.995 140.095 304.006 140.03 304.014 cv
139.769 304.047 139.464 304.107 139.137 304.132 cv
138.81 304.166 138.46 304.178 138.11 304.192 cv
138.002 304.193 137.894 304.193 137.787 304.193 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/CCBKIF+Glegoo-Regular*1 uf/CCBKIF+Glegoo-Regular uf/Glegoo-Regular uf/CCBKIG+CooperHewitt-SemiboldItalic*1 uf/CCBKIG+CooperHewitt-SemiboldItalic uf/CooperHewitt-SemiboldItalic ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (Flat Money Bag-3 up-02-01.eps)%%CreationDate: 12/05/17 4.40 PM%%Canvassize: 16383%AI9_DataStream%Gb",KkBcF)ddVG_g]JuN,W*snPtjA3+MA<gV?DO.D>)]Lr-5FDPN6UdA72N)2J56%$a?_['TH]o1QoeBA&cDeDqN/ds6dE28\uK=%`!LWI$pTI+KZiC9l.o7-IBs"(*"StkJ'B`CMW=79c*5up49(ci\hD/8GXB!6.%4as\T9U\m&OGA0gd!?AXF(KSl!1J4<LM"K3j2(%>GjSTpR7b[cX!EI%`8EeWQpkX=k3E"nRt>bW7I43A5D7Y;NI\I$p,SWJ5hV\5DCEUgpfk`Y/Z(u`U::SaVaq9>">OIE<%?l$[d[n%-gRZ4n4T&+GsE]1$:pBYjjUc/*oPXX16t[)_Vdd*R1?-)kQ:j7"!>rZ3#5<$]e<c,4cX/H^;gZ>G!r8[1E)?kT/3?/Cf7#4,F[[B%`2$A"#fb\O(]jY6IhCE:KEYtBA*uT;ST'?/OT]>A4BAs`rR7NjmC?"@Z:0Vgb-HE&pHO1V3!O[CrX)G=a#(cl%==0G$2@G&T[kF<%U1hn[I_S:7Le-aEYjtk/:a=X'`<3ATkV8k6^d`nU\8ah6VP%Tk"TXf"268P,BU!K\"m?PV\\l5t^aPI?]>I#FIR5.Y0m>H#!t@nQ%Kq;^;YSX;9A.en3>Q^j(fNtI7gkugIV$(t.fj7>1Fu&&P$%EL)_3F6bC$GZ7GQI(l:CTa-!%H)uWhb@T?<.*Ziin\\#*8p,pm)$Q%0Ectq1EGGBr#%WuYE)2V(KWF6qAM.P`IYa:b+2:\3\:(;"ZVtYAQq<T"])X)Q3E=:q'OYWd52^jP0G^WKs#YCl;X]+204K>j>TW'%$&Ns9Oj+pTKVM7?s+X(@NUT,g3c@W];s6qWL_=$j<3K3jX$*0RT$X@4C=AC$$rQc%&0nPnKXQi>/L.`9KV=?YVIQ=a=D@%-NTIT#%ZI>N":^[\nU-_R>mh!N</.JlBW$W4m:h*2J'H\6U/>U([)ZjpdaC2,8""LQhWe0)2TdDSl%4%dnLVVDV;/igqKJCR+JjY92;=.2g%(ohO3a`Un[:Et20%=5psdRa6/2`2!Q`ql<5'CDTF)7J'">&W%4;Xj:.jI0QsIZYP1i-,e0f9kP?OtGhJ0LYloUr`Z6#c+NQ,\cb"%r)Oc\j5+`q(`f7pBkkHQ1tC`RDZV58_XEI,k1kc/;PC2-N3"FDi]kBn"(c#q!^d;l"8!*:A3aVRWUrXC'7Ef.(Og2nrol]LObkF6%r(6n;Ak@QK`A,Q/OeS6fNuNL7h75l>*^EgA%feTm<g4ZSJc^OKXj"*Ua\hU/d21/omkSA_LkmRG<JbBdof4Nn7St43;'=,_nGB1g%>YjHNVa@/9d&<](:Vs^f[($cQgo7or'-=P(V`:gq;S=Y9@R)hS..9FaULn$M9aG0"$T$KOlAgW?OrY'HEm0/]a:,%sW(DU8>dYbR%V"(d;N<>*ZT)/jW'UBE.VM`8<")WiWGMQ_b[TpOR6<::EXL]-gIdL8T&C@-!E89+^e"CHj7hk[d[2+GPTE'VorY!Ye(D\-gU"%`"%0TqcA+tRIT@!G(,J@j=_R&%Qb7&W%\KA"NL<p:%6;:GTEI#<S4$GX*fWA%9l5]uT[P&BsHm1@'MJ..@_Lh0cM-;\MAcm''$2!@,g%%TN^4LNL/Fl$*Kt0rP<3iH-hCNkc&&MPE_?63W5N-=%l:'B^F`)?6Id*QfCZ&[3u!An/ONHN8:e%gi8N0TQTPXTL=c!tg.nT^-=q%T;:c(oGB\?ZcmZ93c$T)0B/,k!ba<tnB?k5m^Tso2h9d=L@'VsV_*d*N4C(a)spaN=m].8Z`EOor,qjRn%m]YeE-_/QFkT?"CGOY%cp.^b"q0Y!"2;rqm(3?X""RdihF(_IJ*l,G:i.n&j`TP6ip\%I#4k:Z?"dm.h_e+<U"G:AP'@'[NGB.\;X"`NV"dH=*eD9fK$3OG%'E#7TTR)7lLuc1`rr?gD-hf3?<CREP&Uq(T02I0'%Trs#`T5Z+f6,[^L6h]pGV6m25=:LiRhudmK_?X+"ASba"sj2\?neb2$cC+`%i5m5iZ%3r/n/d7,()3)4NY*9#E*6QS._E_1'\9=6\V<aLPGY@pJb=qr1IM9HK*NefP=]ZFVYZ2R3r,N%Yah!j8[(5W?e&F&pNT;u%M9K?1K,F#kQQ/j."0#j3mP#,PA+b]n#hU_/kQrH63..(eDE&mH5kBn-J2%4:a$mMEi;\kQ>[s,]nq+'[_3ZtIi=l.]$aat^\mO;"%G7-=BFTmrU<#BkSl*,L7^-n^c+;"u/KjQI>^SKlQ(Z>PB(Y!U6HE=VqiXb%i8>WX,Jf[X`K#qsm!e3cG_6:Z+#!^+Za[dm2r"oNj%JbpP=(-ma(j20-XBL-JK@'J$<)JgT7:D4'0@ltJ/j+mt*7`23]]*UQTLP+!!7/WI/a&!#GBJ:po)N;_3kbi)FQic\=qCS.l$84m^%_+5ak(OcgK_[''U$mZUJ#X8q.!##3#Uk2!f&DfqG7ae8D.\2H4RRL-=?o",]h[L5Q;?D:U#9sgp492R<cp9Dg8/deK),7oF5pR$M%-;s*<Le\B+/eUqa;mBk<69UJE3WQ)lJ2RIoP%cb'(k=li+qd$NmZA?Z;)g&S4t=8g9a7AT86j%[[@j>N^NIe!_+6O*d<1ia`_ukK%aA+U;5b:LJ[8k57%`TV'[4%jP`^t/@.eM3+FBj?m&1UBW@u7.EW8L02rKtr__>s(H.\/sq<EKER9ERl7EYQSXOp6X1Wb.-E^^a;B%Qq!GcCbQ.e\g2B:O>2F!=uZODZ$8Yaa:S$KJ@\qJ!L\a#!i28+OIjjUDCRs+'B2\^9fnb=o#,or[9]AM#UoI7%lq*EqqJdhIsSc?%\2u:PpY9*El*O7t'D3C?5#@$4i"Kc7*q$Q:T]JB4^["YAAjH</F;_fM9?]iB7H8nPWC0q;E2m:ELk\Pl!R'Mt!Ze4^hM([._0@<\%TL#t;M!9/8!PB%SI.q41It2EA+o*A@1Z\*Ae"YbjN<#>0!#"eiJ0';4!AH(5f,4)n#6b.L&52:l1qPo^`DT(u4Q6jA!omU9#642-%iDSrbH,BdDfl;f8L-=J:;H4dX%(&b/+mH8Y[S+FJMfie`?*H%#Mq$Osa>j.`[J2@48n.,$N`#MWSu"q_Z6%$)X4ID)D6SS.r]2M;%nu>^E;RdROdF:I/'\N?3]^s`P`Krn1,,d3lGG4R%NK(ts#p8Kl/rH+Ya)#6Z;o9r99+'WX9PR+;r\@MAVTSX`Dha/`LK_S98Gjp8%H0;A@#l045*D:B^)Lm$rRf@N#,.Imfa+I!J-i\2%/bLWD?dA^r&JmC9@8hcoE\Jm2[>sZ,*"?G18D!tUj+URBP#4)1FeT<#Jf0'+%9/%uPa!8*l6h1YDboYu#^Fjk5B$<04Z4PO)2R7-iTsh@`$a0GS6Q<_55pl/^P6V6o3><[USND=1*6>M**C?\i[GC^1(N9t+=u$mJ%[W2CM0&YaKnRGiiP_;HQ=%nZZ3Ir\.n=,t6lr@HhS3ZEXkK4$7q1't;E9.2)I)+G6V:Z=N!?L+*1d5<-qM1fG?*_HIq>m(:J]LW,%OIT_L@pL?g!C^FST<`iRgY!S(.T$0;:kl[d^I\=O?Uq7bO)7q$3B0LcA0I2Z0urt.@EoY/75V6>E9>27TbbA"DgdD$BA.3_ip?p7%#=fG2phNss4.Y[E@b(%oHQ(V\0Y=QGb0GKZD-\.S$M9h-O#Dlt(OF>/FNoQ2Xh]qL2VFn+:!s?'1b\fMjBuh*ASa/XQ;?%>4&$99%=S8(pL)`u!nPPd'nJeo$SRPb"GJjoh.BlcX>UE5M\81#P\4$082HBbN*Nj&1!@eKF7>IG<AaY$>+#-3eRGO%?E"Xr'1U0QP.aHZS%dDf9Plf_u!4#gJY(YpL..L>*[hdNd8Zu!RA.CN.j74415O7*Q,*e24JR<6?-glfT6_>@)G6t"J4f*[G>k-.R`^'tV'S-^jULuG\9%ruE)QHTX?YjeoZJpl]5&RoD0lp-Y.mjmf+:LVt2d:>a"998`+5OHRe"&inJ[5F<aHDB,^qUK-<9),B-4R!=j.(co]8eGlcIUD>cR%kW`$r&r:$jids[T*U&>%RpX_2_,J4#DOf`WAWG^od_\N844GQ7,0StmL4e,K.)9nGa8!e`CArW.1;f-`n;)@+*On(HbKn^V5=VR0%=->,E:A]&(J1I2!O?1WPl.(C3HtUDFM`g[;0j0gQ+'>B.0$&/7WFl>nR/IDqa+"#%#7YK:@,Wt#^.GXVRMn7rI/-NS^uj24e:qlt%7Xp@4GG*t353JeOPN9)=qAL<:A^T,^#]\->HbQJTk8&Ct.,Q>+6]/$E1qMu[Iqr`W`P9/hM7lV?/Wu;NIbSmBk]%i9Cf9c>d7\Me%Hu%/\"C5GS^b1>EKWi]<I?equeDqgW9\>^`bK<5_V>o<a+2aP.\<s$eq!Nmdr#6;%iVh7Cl=1FVSqF#MkXkp2Vd4BjJR9;-N(:Qh%Zfr"O/hP64CHK[KC\MMr8\,`:%I@XTA-V%f7(-8^Gjd+?>0752)`-LlI++2Q#"2#Y(\uftJ^mF]Sn&kd6_XJ9YCaVlLFN=h^gA5n%E2?D.ei.Cd%.U5tZT0(cm5%qqkc%naL-hXY7:K><1eG9(al$gkX'YSuVD@k8CJZ#Vk*FYGEUAuKb7*kV0%B[bCNjUW[.)C]'A@o!%B0m)T!sc13&(RU0q=/Yn`B.i6R'[`Y9U6uX&kK.QAenmfs4"Cn#IAorp"7SdRq_khZl+6bQ:4a4+(r'1Gr)KO0,K+dqDilWJX0O8%`0obK8Y!W;A6C`I[V<EIS8k_FB>.e7=s_HFT""?%&ndXt-?053P@[mbCpIVQM)1'lp)Hc.79:,&`0k1-SAAjeZ5rd'k:NFi8cNca%o:5*-Ddqf@+'.SJIrNAcjZTPQH$JlB`pp`Ppb>9.Al%^rFAu)m=TB#VFBY89m,oFVoHOm[`t._>#EItMkr10lQ<<C\Q$upMrIuo)%/,cp)DabH>nD?.]-qJrTG$>UH[^+ajg<H=7qbJ/L/+'c=g21E5XgB%UG#N;ueX\!Ir%KFPNVm&T4dToME&EIl9VUTtGnOO1^R@Qk%8YdsY-JWV-'J0@Q>6e;7W]0p+,491D]([jH?dn*)]!DId78+6gcKhp)7h;oTJ?_1tAT]?EJt,F(;ibt8e<?qS>cc?Mc?!7#&Nn/=%(V=6>a/(_2;=35ep53GS`#DQ!?Z9t'M!Bu7T18,VmmdY-3"Gp#DXd[Sn/;/9%j&7\GV]-\:nH@-LQBfC4ih549W9+YR:O4W%I4C.%0(='JrWQo`J%T1IYF?%eEBhU.@T[Rq2s&oM_OjcB$q:X1bgsqhB!O(nC<0%-/tZGmfcK#k:cuJ5/X(XN7eda):LJrGq_i.M.R[[n%Dc1fi%FmmKGM#4W^'u17g^,X@R,PBIs4n(0O#t;m?efJ+ld]6trK*jtH+#r7P0m8EiY:ETm6@fJT,m8_4$+4!&`ZTdrTD`1o4n;N%[K!nnIpUqUZJ'f:Z"W&*FG/:jADO?\S6('_X$,XrT(?^CH*uftmuYM/ml<Ig[T4ChL95`6TnRC32-m97DNF=kSlp/HLFmWmhK`]=%*53T1<g\.#YG:l^U1ra+/tR0ge)eF;5SG2eMiFV5[D-XBA$9'G[S8Y/BDP!md\9OKs1l%\Wt=&9"K.(E2hg1[kfQmFDA@s(qj@?S%31OC2luuQh)X[\`S(\)apH$Ot5<XaupjJHCm5$:R[+i`/"mEZ`5e">\G[ZQ3E!e[u:&_=T)"TY0?)mS1eGcWZ=99EhM?[E-"gq<J%Hs?6@cpJ<*"ggk83Hq>C\18AiH*hr4i$S\E^_6FkIK/etG5f#aeHD0mq_q+krq`c;2WI1L30(aJ^:;8D.1Wf]mg-F-;dcT;\-hB"%JiTl>c753f$KeFA3D1"/&OSKD0Lq)gTU="SR'R.^XF`I5@*U\6F2#Ntq.$rMX2n7?oTPS"2"`Yck*R@4Z062:+'GiI2e,_BUod\<%F"F8MplX0"i0WLXq"Yn)o0O7"e_qTaZ/B89i/?6>T?T[rphR0J(DU;k?'*UA*31B-0k\k-YF[u@FK;D=T1**Q=/T7Sl3b*`g$6>Z%KJ$%EJ7JC[SSC%$350SF5NYqGltO/e-!STse\+=os,D)lIc/$GfLM70MZ">A9YK6#r]_jJ)Z+9uQAnpFB0,tf*K*1pbu$S;.$eU.%dW3Oj-K)3;q\!Gho\6`<"gRDYjWdGPV*EU8=;9oqSNXRGiQKB#>AtrB*$m_WEn[@[A2)-Ms*hI5L6'fe?HYXOT@j"DA#-WgX!<pC%EOGg%We#+/>7g=Aj6n[]SR@%f3au9QMkV_O@/(tO$@f.o+04nO/@_KViK%OVJ)IYJ(&h=b7<fRH=CAhV$@f.o+%m@JJ;uK_3llJL%\^a?dKAC.]-;W&k9Fj?f?[*HP1(pCtN*#VsAISP1UD^(ZO)NajjOB2=CgHAS%dMh,n,.T?3K)j)o'/;Y%R)5_iZ[5%a>=kI.R99s%j$;t\YPe>-d3/-39F[/[8hBWmVM7fm7nEC*19Cnao9Yd,r$<PCI6e7ei31nZ2k]_?O-4OV5ZT7(=eiGe8a9)Zp<ug#Ej43*=_<3!%R\@`N*M(_p8q/1N<#`0'0b'B>&r%<SjuG+*I)?-^j8[Ep0AdHNSt\8_'o',<]743(RKK(G-4<ON1$UY3jf=J'@hgd!gBJh0-n]Za%)Eo3,2@GMb1tn72"68R"r?:'I>.>P6Tk=+pji$/4b?$mcJ&2G4U*s&Ki5uF4H%G[@ZLS(sO;E_d9!5hBPo$t$!p<%)T:3j0ncP6+%&&^Y5@eopeCt)L'i5uL6\Uc7iE9.;Ll8$>.TH!(pVknA8*uLm*@7bk>]CH!;hZjRCIu5'+"Hsqn#QDe;@2p9uYi%Aof`&eRKT4Lg%)ljW1Asu'0EPf^kd;2&I]TCZ`W=,HFg,*b+KT#*h)Dp.6n%4:GQkA$<n\=f<`9B8\2iSm`(L-q<6u[tJ:XKl:OBFJ'T`bO=q52Zf%%%95H2@FEsb];4\U>LsLU#Si<5=s%HK0?S(&ar.cHOaunW]!ER`e*?DKm(HP?1g4k9m=ER"1H^9GitJ<a-1]@<3!V=rHj#7`EumU%e^QG2L&oU&)!eR:9DrXU^CV:;aV_@$Z:R&T+53%sIEqf-7;H<IM^UL$aoD#<@gCb3Er3VsjokAi7hcEH3!r0VhY?D]+m&4VNn4%R%;le84$N7i`2YS:S/YF6MLC6rc0;%Y+P748;EkC\]m1`W.02((?gYA'-i7QnWI.8.*4.Kb_r--'fW@>&N?<gW//*lHG=\gR.l&Q]X%<H0KAYP%ND2[lQcKbrQ%r&`$OMpJ;$<;l8+ABOW@mXT=sNrCfuL``$pM/C<*D%:ki+Te,cHJ!9.<?8OBe@0.kk"L#n71>e7rU8YM%h;b]\St4oMI""+?K5@ioe-q5:QI+.p3pR2Xo[OU^7kaZ&3L0WNkUS'q?<cn6'OT'b/*L^O?*k>gGs^&^9-kD,1A^%>_t(%mc])H1%`8[\dJFiq^RK*)<3oM-PZ[<P6cb0p/Fi<_]B__Z8]#$Xk@i=pNF&fL/lFdU4jm5pLQ;I=d$1U6T:\$0KBVSAub#)pQNP6O[Ya61?%E"Ni*%lC&1oMHh4Kt=hV5#UIFKLc%8),`]]Clul$5E-n<D6C(&j&i,ZrWP*$d?WJY.UhkVpu"=>`2rYk:=K1CHSJ1/Sjf8H@Jic`%QdGe7ZOFI)EnR>>Ea.HdDM<ZtpXl@q;NLeJ_5$,FNonFf5*)$Rjr&/Kmiin0n!uni2",hL6"&_]o60qob)[4E@+%cZru9ru?A[G2%Md,tkU>0eHS>_&;+]ntTA'#nG`kUnMEMWVI7S]g8itgH-S[.Hp)<)tEC("KlY9G>t#,,kG/57btCDMULe&gr+%<RJII.%oL\\cLQ%4Ui(tiij_9AHdR@_dD\1bjZNmJ^,qV#X@LN:2d([i49iC-Rn#r2*D.n/*K#:QT*Z.)O*>(Nk)=iOrTW*MKN"Q()Wh>1Ulj-:XX?g%,HN"sb8S:F+n0^2ll%trTbhq.!LMEtm4dK?nNhAU-M``0,h.P=6@@dH/B_+Lf-K8(oR&q7S%XqGRfgo3(D^ko3HlaUislF7"4Yn`%DU'de)?St#(rHiB/qi#(6RWg(nMt7ia:rYfs1u(5O;n)u[X'V3kb6/Z6&5`/i3shkE^u@i*coi$O&W!Xl#7:_UQ*;nK+1Jk`?"2*%R:%5#4"s0((,5Lm8n_<D>TaG>a&Sn,MQ.Gbj#YP,2e"H!Nkn!e@/g@;ZT5ZCUl@fP#eD\k6=SMN=d9bo!/[bn9+!X[k^:JL)PSlm%Z1;L^bg7Aj7:?AZ'p(>`P#Zj]&PYhk#^=5kV*5KPV4m\);s=FL\Ss#<9r-`uK4uO#,(Kq';rHO]Cm>@*'0uI:8XCWfO2&Mt1[s?:%r:C@Ps3gl:7^u[\kJpfVn?M'^Te[+NZfUKX%0ddQUJMCZ$`o89j8k$t@5f79j@]loq(Cm\/Mnl4$O@_M88NmDV#)4b"(!hNE3b6K%:H&)+p#'p#3Ki\ceH93I5)'#c"?iD.XSAMsCP;fK1&NWRAADs06;0no6lNWWE/d+f6bIHOgg3uFdLlu(,(<j^/8p&ANi%O_#DB?M%"*LK[,%?Ue14823PL3SWP%TNOEKA.+6J]i?70W71:@n[-ja\h%Hg`qop^]6`["OXJ+c+f_7IK989?K3QKY\Hp34VApJ#VQINkn1V%VhpesU683I@o9b7,Z9b<$8*gU80ec`(6rhq)2W,EPrMlYrkt8r!e)GHa89I3?J3&Es.Nj$#f/ni'd8`JG_or^Q@Q#D,+;+8E9,+h%5VIu@!iWnA_NAdW/t1]#>YZBIppbuOE']CEYR6U@hUYH3->AA#.>6)k"5o9"V3@#q_BBpp,92jLp^O@miE/2k%ak/o$f:&k(?HXN%m3$.+rm.G@h0%Oq?0C:"8FW-O.Mna>2.n9*6k-"JM1?t0*`[\#)@R(eq0sk!;>[+[kMfSO9QN=hL4"R58XH=rP.h$LJ`"sC&+Ej3%&557h`!/[b0RuO"'M2Xf!7WShf9k;"gB1hK$b,jKL8r$NkUAQ)^f(c!iJS!I01LU2]mtnJL1FNVjJ4/O-$mn/3[+@aKcW1IakrF1%gD9ku!(#f$>N(n_&J)LiC_!M#K#$9(Bo3X[,JP`[.Ar[m$B`F;i-k.!4AJ:+m@a#$1Wm!;.2[QO1KDY5P00Yq)_H"-E#3TZh^#5]%WETPI!7SE3>l>b-jn<n7Jh3QHr1,WX2cT<=C?T#Nl@:1=_B9932#ENn("Ht3;Th',k-T@jH:)paFVk3>+<4BRS;-b4WE[]*rA.?g%.]s&!&J"e'\<2XnppOF5VMW%]&,&tX9tsi*+aVBfa"rA:eRX/)%ehpq>+a0E!)j;-*<5fHW1l>+72a6DR&+'bf)i.qh`M?-]%:21%>oY3ta]:;eZV--FO5"\VCAGR>(B^L@]bWZ-h\IHAiV+N!h(K_#rl(=Rhi3HO$CYJq)[DSahi3KZ,atFS@!JpT?VkTGnh'76RXA`K%ep=.QKZ&QaMunM+@Lnd#miK>rilMt?I:aKiHH'r@[)@J)Nc_6=MdZs$,3EQrC=S^!^!a1Zfe$1gWi'k$BpiQO,^i=F`\]'/qb0aP%H)=gM_X^g7Vr>"p9FYF9+6C3u/TC.#&8jSAo.23>%d=3"B81.@iC#L;'e,M5Q"!sCEqg0e<I=bpcVsm#m(R'\Nai$^gbnA(hHasj%Gd>_lHi.ef@juYD3]nS=<h<`(S3.uqG7mL'4cZ3Z.Ld5fm_PAIe2ek%RWe9Vh/buin/*0iL[DM)S34eZ4<BK_g6,A+$f+tI%_Glc%:QJ"TOd(.7#T/([*^(aB$&P#oZIRB31Ea6BNWe-n&Odum!X(2Zh0UF''+#<uUqg&Ie-i99mEU`;`dLL#4N6;iggMXHBM%doOD4EV%0b9^.j3^9D[!P3$-l,X)0W%ho'fLc'8R[!QW,Su[\"TC@@P`P:*3f\H`-;E+><69"6b0CgObC'W\gPOH_35GCGDScaf3++9?HG2R%$G6&oP%s[0"8=ANUj"@Zbk9@aULCr+"Wkrq@6X4!---^"<d9G`-,k"<hBOYOTW&&aH)!.W7t@Sin#.UVdTmlS7UR4+qZ5P$kH=_M%Yp6\).CsaRSW]@h9sO2h?l4tWK.0oX)C6b04rR!>OsVbR1rHQ,''gbLQMQ=`$lCiX4AhN`iOE%N4@R_EYc:;_2=2-0YDgQ"XK#_Z%BbL4Bq/nJ?TfR7%;#aAa,d@W!>NQrn4*5C3\N.#Ac5B9=f#4LboEiVAB`OeT(8u(MgtSXd"k+`2-m.`_l39*oRLlJIQ/Pi,#SO-P%Xe.a.NG2RZ_0\Ec0L5,L;EZ:)k`J6Hk6AjIAHcYa"_GLmCrjSJPs_`I_NB-ZW(Z*N+f7]]YnPf8)K)"$#[2XLA<Y.G4#D\bU@r.e%o9^$i[FC/PFoj(5-(_D1Y4sZR[PZ2uWq<5jObQSqfk8a5VD?IFp3H:ijVnm+<^mR%iG*_[**"gJ26J\*[eDrM(Q`:g3j5F5G:K*m%]2PuVD5iBNnt`oiAkc=!^NkO-(5bn]B-ItK=Ys)LPI[4#L,q&K`D]@7IZZUT22f,4jqH&XZ,.Fii0l!J'M:h[7NE`mAc3D0hYac\%+pn#HR:O2Wd7>>P\1V/E#+JThNi0c1ol$hMEkFc55X<`T"eeqI9r?sDO(^L]f8!$XW!1_GN'.NYLP\=Tia/IMbcmoFCU?rSN]_8e%e<hW$GUsN`M+N_9O$H0>3rlV[FsQl)N+AT;.oRo5`T*58ZCY2j`OOF5A<@`Ep]kmBbY6rs.B:F)Qqb.N!bNm?n,EcSh%%dmZL8Hg%@quj4UnG9s%u"V]UDY4bB/gY#+^d<q88"pc1Q<++q>sJYg8."c82c3bSQdE?Te=ABhZK6=DfE2$i\iJ!ieg<Th><P5!A84]11=ug%VH>`"-(kqJA/`8r9Ya^0H7)4^Im`cO=NrN3iqfOfe"C8]L.rR0Yp=&;\gsr@)`7VjqUWnn@"Ya)`Lqea/?faJaqfQl[DS6'1T#.Q%CbotJ<`D_?`!osG_.s>4$f[a6'DJ`CG[6#p"u>DBVY9I(mu1'`EBuQiTEcZ&.)n@RHie04cCd2ZR_Y<tU1f*qAXmG`A[KXT8[Dc_%_<S!e?q>E2,u)@79qY@Y#K^H.%tFa>aUlg._Rn8Um?0^e.*f+_3XeSQ=q;Z**^!&T0H9o(,M32+,;8gQk.Q>3bc!D-C]GI`jB'EB%*]'0KPM1P%1,]S$Rp"RA\6`gHMJknaVH?3Ei*,e%bXJ\^is4WN>7h;lP-Qo<l4!MT:<M=um1;,kk"30T>P-Z\><s;]'IlQhb*l?X%A[S5,[UseAiJ8mP.OQofd^$b/"ZhTGZMKlA,Qoo+XZC8haRQXiHo)Hf.rTuR"+AdA2h&@H/=>c.<GHi9)Rc+!(M/ZO6<C/G+iYE$%2!POc!Z9u9;="o\WEZfAPs1CGS$p2rMJ^B`A1Y<6J.2sH6u7ka?4F\[=s:M?C4Rs@6;!uh>]l(2"VbVR:hYQp_M/(+K!^-i+<e*n%E%k0]5jUKcD"e<,m3J:`"XS:S.A1L3LDF9<3+R7AI=W;.p+U-Q/VSr>@FM([22!-UQA$6Pfq@[G!5kgN@9C@S"$+;1ej<R.7LY?Q%mMSI<)@8cPTE8iG:!`n2I)<hR[?3QoL@8;KKW:?__/GGOhRd/Qk^K0CmQ:TqfTuEb>CEGT^[AW30fZ=DU,s;&iHuBZh&M(@O:Se`%&_go.f.@jp>F$,7#J:/h_ON=0'6'ceODLNk7[cqNQnG+H^S!lu<lQ:tfRU6.M,*FVX#)<GG\'Td7P/N5i:)<@h*m=-#KED`VJX0k%78P]M:n`eWP(<AFpNS3@"?!NVmg@c,D4j8K"$Vdu//X55iWQ%nH8F9ofL1Hr/&%](XK#MlUq!ZQ%n.M0jqkB]!RQM`88X=P0A'e\%Q3(/-HsC_\2h,=&qo>iK:m!Rp_JX!P=4dr.J(/&^s&ga.2#??2RM3+d[2PHVm\nAL6NsB%4m&[EdmW/4%XYL[6("c$K%H[)B=329%<dI3rafDmKTHdgkKuh-rNSPbQK[AMf+UV8,#GpWIIFMC@7^V_q7-dkmd8KER_7aTnBp@.-G:")^C4?ouZ.]lA&'-HqTFPQ>!=F`u%L3DLZZ,+N!q@5*U.^m,;Pr=(hPC4Uk$rNjX4Z.r=/]d0uK3U8`_[p1@VQ1CfMC!DHfu"R:.C3OmY30\CfFg-NXgYKgQS'EG0W>5i%KG%$,p9?K:"O*Eg'&KpLAJ<bf^7<XD)!QDjD"Dcri$bc:V7Mn>UOiVIE'V0`E[2pioHpGfXs<l.[aEhA3"-tL!,c3Uq.mf%K]BgZ%kao/a)#NS2*gb*4Bm*Wk!4:snTo]Y#OJ6,DJ1;)>"@UR&]1\gX`$``7A$Dr.dEOPU"M_s>UQJ8<"<D>mk@AAWMRU0u$`g-+:-GZI%Z.-,`3"0VP\9BFfO'3@@OIKc02fKtrU<W*1)?Pd.kPj#.L2N%L#KeMVFK8sko%?`Xn7U]b$iiOf-ORHR37K8LX6o741Nnh0A@\,%%RhDM3JJPi_^e4Bn#*@^OJB=u)!Np=3JR()]G7Q9-Umi]\_pg!J"s@tRNXH)QiW-kX*>VIF:[(?!2?Y3*enm@p<l"GhpNY>G[DG5q%R4<1tFPUJS,D-Cd;b#TC&m6bS70nGH*G!JsYd2&R9e.S\1PVFNoWW%8ZSHH1>m+2b;oQ,PBN\hl"4_(ES.dal!&o$LKr3,R;:pa1%3U]OdTOCL\;[#o2`Ku)gH4)#hoZH2#)aNmn8PPM/WHnP#!Ej.p<FjX#OpVQ,VTNkr^g51`XEDR9`fTQ7MBQ_k7UFb_;$^bh3id?F%9A'k#=HMe4S.]n#+[)5`0c(=2BdbKgTj]N'9sc]T!\4SE2SU*;It8OjPTYm,mD#iD6XVB<!)shm[<V"E:ud<;:0;Sr#pa6rcbuO-%cb'K_\2@k8Dca-db)AB8&_LoPZ.dgX/9Q]20lE_*Yd,4=a"qkE$LXH0$WuANeJ&TAd9qtODc@RS,"uJN05Y)X#rujR<Op`L8V'3@%o*B]jdS``^SeP1>`5Dd9+IHK`@T_3V0qU-.k\QGo)C0eurh`dJ#Mt\/ne,YrUi')oZ#mq;$%(E5jbSmlLJ;/]l1>I?8/`hbRS3eK%9Mb!)'i@Q7]K5(Bc6ddGZMnR6eRYH28P6B8Ig9&[kX7rPG2MZjXTT*"Qeb4bX7V68_MK0Z;b2"IF$7XIbuXG6Vl=olJjKbc`f;QR%0><'o_sMmCd=2qfWW[>[[QNdAFbX[EV)?#345V98gh,R6UmTfebM8AD/n;qK(U)S[)0Xe/QAUgJPU@H/D%HhOpagOb`+EW]4h-tA%n;k'fG9.($4IQ/+2-+I6`ofB12]%m7(feiT%Zd'4?uW_6!U?EP"Q1R6--oog\]bjRhf?!bJ3Q,'0"C7^Q1+R0&f]k/+h%3.qkU\C%>b49O3,9@S[[BguPP7!hYM!)CG]+'kh/;[5F3lSRAbNXl^fU#P`[,Q6eTQ3LYt?*Gg(rC\&'5f^Tca$_\LsNC-D/0oEdV[<Rc01.%be`iCK?t,G17*LZ]JJKpelUh;Fh3kHUcp`De\K1$(rITO)S8,r:Tps)CrUD+q/3:JIus=k[sY_:s+`7khnCW&WU]E(rRjYa^Y'n0%n5IY7CgV8faC-8\-J@8<a'S65XHfPDa4gXGpH$T+<4BU"pieLjBAKN0PM!X"b@HCQm=F`qE^,d.]H6d0aUm'aB%c<\f[o!gb<7`k%BA>Wm>B63*5"(7Y?8!BE!Ir"RLYdQRb0e>sJUkScKdW'K4kP!-qU9EonE'9gZ#Q#P1[i&1qprqsUp9HE\igsX!('24h$qGgQc)8N%AdIXCPj@c`!hsAb[k<L+gW!eJ6lp00epPdpKT^irhGGr)M9A7Cek]f>ZgXi7+FZ@r.%UgkoD[a)croEYEXG5/OmjA3(&a93ET^0b%kMbo<^\)mFN]8Hu)"^nO`C22J;=7+!^md*0YkRW&2PO[E\+j.0:e.;cL>d,'nXTAjAo!)r?_JK$s!j2mp1>r)\@Y=>HQMX]Q$i#2%d'!)V11+sH*LA,iH`GU"@Ql/Ccc(4_GFsdVAh0^pk<hDiqb2\:gB16LP]-#F!<J6FP0)GoUVKN&^BWlSb/NdoWNai4(MG$*>*+0J%I=;mCnK$MN?NNPaM%lB2YOUr3g)3,H6qp0S'cePh4L/a#=&gqq.XBn4.6b4'S]JjfEIfOOAthg!%R(@p"X"htIUA+,^[$0AV6$,j%&gIP$3UUot6m[AARSIK3j_XlHN$RQ$2qn9[H/%Mu/9+L5NpLSr*s_trOs;]q9iEA,en?Gg:#,H#^5HAjO]4"8Sf"D7Wl5a<cjZ:@%K.VW-`_O7s/TSu3k1sl4q&F\,oAKIu^=W"j?7lH[NO09jdXCCCn+(")QRs<+0Lt@omc(3a1g8C,eZSh7CkG;XN"D+lluH!Eq!6AR%28*?H`1J9gU[gpjj\bLK=>ej0@Nh>e,m'?YUi:qEPC#Lq=pTP8G&s:'CQP<HpIr$HIG=s2SGV@W7R]O_'e*u'OtYMCG'=n<p9p5Z%pb'.0[bN==[ndWEZqOQJK#RW-'1ml[!9\:.BIVCjI"Vk+UX4g>+0p*^-Dt^iQ+a<5d&Bf%E.Bd6Z4I!ab&c^(36:d+UL*2X*;6CS%qt'2-WMTu(92s%p9JjaXn);lNZI7s.!_N+VaUT./<LnB+qXEmEEc%JSRiCm&GYGk_Wuku"nS(&]OZ>DC#=4Q7H_:Np[W:?iEBRMH%f4)m$e/7C(nA?Bd2YXW_DQ2f3kiq$8Orl#hgDt4BnU?gaDQRakThOXejnqOOIQA[ub2G^>C?usrrSIIWr7dA)L<H@!7)-UB3N*;V%kXG,$;8%e@^o)t)gCf$!r%0:<Q9>M<P4:fr2H##G'k*:.e/3Wd\30?OEj3rVdZ4A3_UE[jOU$@]^Tiig^sQD^+j&q[d6LqXKVj8R%*)uM*jK\u>gIIe`:f%sS&kPIA"%?SYri..Vq/,cL5(&C;3*&S,R\SgJ<#g)TDe'J[&Ns\R#<LE:mV<\O^tL4STjr]\7<f%M9BdCh%J`rmUa!&;lq2.4s+dWYXO>4]8aIX]pOO5Gd7ffR^Wur0Co:$&@WE?sU(G]$KW#--T4TLX-8ZY8[=#=tDEZ?Pg_o<E9U?Z?j9Ya#H%@QH=X:%kr"*,A'.QQZ_lXTOG!/$f^VZGJ1&=-"&p7Elu%Z3F6=?QS16X?6V/71[>IO1KI/C28)\,Y(g%4c;(-U];!Ao$hb.L&t$/%3@&921re9<._J\GT*4^P1sk1>T4b:j\!sMUT+=S_D5mdkrH:TB@&1+rYZ>p"8fsBqH_n.++BZT*?7BTr%r;<jV9mONCts1(^%ZiM%f^+*)#tp]/S;?dgk3e2^m-m.\G6[hO>)*:k[*T-G*"/Y$p$'c&ZGpUk/RfrG^[4bY]AqZ/_YO"/:5r)Q:1\@!KhA6=c8L1V94nH;%/JK;t*VQWA\pb4c-o(RrU%Ormi.TsJMG8RPPY:cr!L;OZc8@WdC:AG^fN-?s3ZFt3_MD7FCT=+Lh:+msE)!$ES#/hP>;4AM3d?U7%f)eY0o(FpK`s""?@'.JAB5p[#>SCd"c01[*\0ds#-VJ+QU*dCo)W1;&YBVHE3lmnK4Lk"T7Jl<=/;MGOKhb6A5KgAuNjRkCS\,``%F,=`6@&K.!ah7!&DEMi"15DR'8/fiHm>E*l5>%FN$`BUg;B["K/0Nn>nn3_*aa<lYQEAr5"*"RP;\2]8+D+B&5gQ2n@TT-$jW'iT%]HHOtj\bCEaam?T6FlQY_">2uJ3f/ApuLV]U\.);mG!\-BtM&4EDd:T"V"DU<p>PR]\WAj2fFa-Oj)Wb>4bd0]+cAg5A&sJ8"TSs%q<mS&*Z/k0/ognC#ga$4\Y&1pqLBf2h2]SjA.L^*n%!o.E(tU#$TkWF)UJUte!\3G:?5"P`Rgd<9="3h[_#Bd%`_sX7Qfp$8rtV(%B':P+CgNXnDQYd'[<NTpM$"b_H*TA1eU-Lq9+N(-UEY\c/L&ji2m/!q;33DO'oLO-(2'HRp:MQ\4L.MD1+_1nMsXe6*$YI\`:<g3%o^;9<4.ST9oj&Hs:3*UZNX5ON\2=^+?J`$QrUYR;TGID3p9MaU/,D'gqUnGSGK1d-lKSEF2u_A>XA67$;LN2[$SdWQ%N=fRbeoEY%CTm')p;#[Sr^:e0d`rL,N0?NcN8=FDA8G.Qequsa96pMO3l@H#O[O@#Xai)8@lJn49$kt3p8S;uB.n3-R<H<bob&sY&9t`3cAGtS%?&oh/^8fqW26_*oZSr68QZF'&faF_/JB_HTH+N.Ek>1'&^rF:`X&boO8Ga^lo<&0[rKo"o:H!mF.);o)"bf3l&3YA"N:0Uc>Eh[V%PNu&*%c2q+VpuqG4'Wg-imh?"X]U)I]R[hBehUUCGH\YgF_/)c=uW_N!L--I_DS5iCkSC,=rRZ[lke`pMsL%)#?XU?LW`Op]64Q6%P6]JZ<ICu,lG,=2LC0rm;f);df5/[#^&dNf+XPbB,5C@kk2?#PX)L,`^#\2IO2:2-mWBn(>OqmAU?j>D-$0$(McH5r_LceF.\+4X%lp>4B(,Z-Hq4MIZpf)*GZWaAICcrNeJ6k5s[HT?7H$?pB\<5r<Z6VK&5*1WnqL3dtg,/jK",l@p=7kl,g?Rc/nnM.M]k?alH!Z5Q%!Ee,[9CNao>9M&X=tlUp[(Sr!^6B/H0')[?7;+>=g[2]2p<=m;l2944iTXn)#W5>g\Bj9iIq)ekXW$$a-Eim8'j[#Ol@#Rkib3[?%Sc)mBcTHu6ArMMOeTg>\4Q(Fm@Co<,_b<VK"p`_BbH>6o*%)fNq5aGlYtd3qh$\Dn"dmPA[t)Sg09pZ.G!uN7GooL.&)%"<i'@pu%cgsQaYk3'Y:nTK$M@hBpnU4oLd&qgOq;1s[*!g_hOrYU71.F#%q#Z8Q_DFdIbB>;(Xm?eK1]+_Fg@?"LG2UWLJb0fEj@hK-f"*?<%diY:C1W=:skaDE\[qfC-It,Trh9%@CQr[="Es[8C<<`s<FaU3PP,#o_e4;jQrG8a)9r;ikfiTo7D`FsF$`ZN5mE%gHT7-$insRej%al[%,1n,!JZc5_F]:YMgg*p/c..F7a!):,2T%SI`3gnKRXeWDe,S]1`m35j;.D"s,@Odajg0P93o]<l4PUrGWp#YLbs%-g%'I_*J%#K-0m5WV*<1AC1i=Om.CibVj*hR3KR]rTJnauBWUC5MW30J@=WaOBf4$bb0I!3CVfno*!N0(o2eOd_0,a`12r(J`gIY2F5_M?c54%Si\'Q:LCXujX<;A0/r3)q<C1395-WW"aVf`!N'$P<+slci9V'CJSGC\Ec3%2:MK2Y_f!-YKf6gQ%0SQu<mAo"gtR**jkIgQAbq5^%$T&?V0G#b%=Ja9_cQ3[TpUc.MObWub7QM^2@%6o:SD<L\aa;`fJBm7,e.I`FlJN\o$=f^f!(sjcd9Z39.aIHH!3<'rRB;-`;;c%.%pG3%EUCHm$Pft9>W>/<.Ol6/`M5.[b0cLXnh`sUBSqM\6Tn0qE+uR7qBt\UC/2lNU!'(VG0d,%j2Hd^E!?O@/B:3SjCCCACr]FcC%Kbmie6tbu:(Bl='D/0SrVJ=%Ui/=#]bJACS#EuYUbS$&udL?bf&#.^(@cN0dallB4lt;tWQOj;!r03o&`h@'Op^YWAcW&BpX3Oq0%:1cDH.j8e@-K+#QEd%rb`U.!)IDF!mW^@>a-Ta_VVFM^h#@<NIe["!Z2Md!&[085WQk1<LBp+([&fYerL</4,(OX&+q.`Ke;L^6Y%>.qWm-sO[QHK#BY12C^*R(>H.)]N-3[hm+_hJWq5[Xd-3R8@]C!t4$"B^B1>0cNB_YUT8fMS@6A%hS4n@+F]/&kp479`V^<1kP)b%aKQaA#BXZMD1h.9X.%?r3/,-<=2je:>#9T:giHXrN^-f8PRbAc4&=3j\I/!fp'sKC<bbU6e"HokOU4(4I-_QRWA;N3Xm\NsHPX-;%L[PH&5..jW!'&m(W$*72%?M;2Fn0O9dV?sF2UrXe<(d9j\Bd+p$*a(>@_Y('=M=!2FpfJD)tM!&&fR)anJ+f#J\>>@Pqj@&jOJ7P%AM:e)jRaWW5X40>LsJEkfHUWffr@7=psRh9WhCQo/2kQ7okZ)h>_`Ml676)I3>tf+=MNBYgu#g$Vio*rPC3,$[15@$out6HoY#3m%I]tGC(@,<0p/m1,.VAD3mXWuY]^ZRGs&TkIq<'qDF5*JV/KK>f-t2[$_sKRh(XC@$5jUFM,9qmlmFko3-YrDFd,b9[o7r#p4L'@n%+2@L^7piksi!&LsPn$D\;&X$E,c`7`-]*/.':k$H/`0t`\R%P3"(36iq.-nP)usc%[.tb>Jt%+h<jT4N+a:,2F<Fg=5<_:A!FPVl%'$V)Y>eN)9V2r**(M6lf,Msn'o[dQ.&Sbnkn.m-t)spJ[!AOMuRiOCJS?1I%4haDjBFRr&=D5:Z#KH*,(_H2Y"4Z&L=EuC;fL*)j%Q`MXC9D:67(BF'CK-k+8WVl8dQDbD3AVl&?OX_]8Lm?^YW"jK&U#pq+krb;,q+kFK><RKER]E_[A4Cj$3MM4/"NFEDRB<!O_!TRq%';Ru`1SgL_YW,H4qr@kN$,"kdn^CDdVO:c\rNU\S'MdT.T_V+;Y4D-4C7'q-X(gIf*IaV02A81BguZgV00)/.nNfrU+-!u8li(I0%)i4+JF#!0KlJuCbd=@,O]m"rR>:X[)M6D!kp^m5??Jo'/KXL=1??QjqHths?%h!<hV[\oaao*?k*iq@(ZS%t2q/3&E.%J`]#MkP=%6uH<i9&B/E$Lm0Rg!?Vdf>PK=Z=`;ds"dtte;A671MS$s6c7lYK`]h'K]G.Q@Of_pNY3p\b[mtKIXM!u_rJ/jdYIQK![km$iG>Vj%.)V8FY.sFt<_dNGH]N@[J.#?i9gg+=U:*$+3e7+CbhE-u?Ic=W`88KQ<bbJo?2#'eI;(D$I"!c)C0\#hF99%bgDXq+mtrcfl-9D#%Oho+6?sGnjSum.)4<3D]*QaS1&U=#3]7S0`3-PCo4KYU?RlE!=-lq-,9PP)0;Knq4.sdJ4(a0V)Q9$fg1OZC#\qeBa:7,suX2u<C%6`FmKMURi:_`l?8_5;6FW`2]=3paK;7;/\V;SnY@?09a1Y;KHGBiktGUFrA)6aoQa"d](_Y)&0#M%E_.JPGh?c^n*;C$HaH19c/*%c;>V7UZlI1Ag<K-l>g+8Vs\LtW9&]?JNP0L2_7gFK(R2KIG.?S+Jje8jBtiYoZW$;44V(_k$InEiZCbLnU2WMKRB,8hf5!D_G?<H%_9H:cIW-N]64`dba#-$c/BMr4AE3BFKJ)2Fr&!Cp]M3M"]E*%cc/8K4GBqbec/@-@pLSPi/auqk=:8Z7oed6p^46_hfDLb/%^s#U%o0%FZiR<]Bs5bJMH@)q`KFXWeBO()8r6A#qMf?J;M&6#nj3#D>1ma)sJ0#X0*ts>tOigOm'.7oPca$'+DZ9$>j!;*$pFZj"L#_V#%EB"]Wm0pG'q6s;6:ji*.Ol>-_*[=".DAqLC,Gg].mmKq]f)hX_JBLgi?u>)l3=SgNJHm:ai0nSs=,!RfecNd$`"Y(n'<=UJ$FRc@%ej$`,bFGK@UX[E%6a4Kka6nlPlSDC_/j7`WLY9Ql5V4uA65Ae2GP(MC+jR6/o>(5bq1seM+)<6hY^a93Y9$<[Ig\L&^l,C!"S=*j%ZMCI%c`Olt(F%U(lNLRX@#.I@,KC`NmmtI@1st$'.S(8ei)k/p]4YL8e2\+u<<XSF\kSGQO3u12f*bmm&)fc'$B<`Jr,*hu]h"-2%8*.-16oG0:"<1igX$\\9n*F8l>;ZG-p_!P[*>+#kh\4>f/rpLD%.n(_DM4U@JKCo+E#\OIf>^'o%_%Mmnh4V_:r%JsXDbik4"p[R%n*Y'7a"E@&`h"6.'!Zdt#^!c0!Z']@=Ndn,E$\,aLOoiZ`.mHdRa%9%r?06%cZ]^m;3FAPjZmGTZk7[B,k1+IR1OpUDf9F5>E8.C%F:/*Q!neu:H2?UmY]#Z1.gU<2P,lEcf\pDu#Csg]#uQ"5.%(-re!5&^!=E@2".!KT[ljC35YKA?E'"Xh"Nk<5U1QYd!6(=l-cR"T%K68iVS_R\6J?n3rY\2"'r:4G&e9A-HX25Q9d;jBiC]'\Z"r_i7+\Lo&f7oZqQNh/"m&G#7";GO:'%8ou_)8L&F]kE\Aj@f>I'`?Z%9\ufT_UB%O<rp\/aQ:g#jgN?TM82mfY7>7DX'`OTJ/2Mh,n85a,N@]>*JHb&F[04RDZ-C2Q&Ogb@gK/bdTd47PUXu/Ab!HB#5"Ib%ckW@?@%:Iti:H@!o3dYg%=qP5UIeCW(Zj:pbQoVa05Tu$7at264%?^]TOY]^;1;(T!kfuVSgi#)FVX0cTJ"P9XtQ]krVQ;N1!kjN%p:Y\;lIZ[36f<F:#Un'A&F;d8]>%c@i0PMTlp#kV#'tDaIBGGO]nSf0)XE^q-sU++EUE5BgLhiu?]U'<pMA%jBZ7GEg',W)#8G03%+kVk>UXtaGlVHu]+_./MCMPJ*]'_qY^55E[M.D#"WIlObQ*%1%0>1C)LPPUJd!g:B#P>'g*3]\s=REdL)GG@XI<uB0KL#JC:hX,?%F0ueS<-jn?!,.,9'=`9E,"/+%Ytq8)4iCr<Qo'paId]t2*c?dCnZE"f!3j:2<TmT?VS("u!44T6X2;bNi'@?h*'OnsJ?IMLC4^bf%*oC7.+J98Q!ZU*RCQUa:KKtA#!oHLT59C7<])_'JR\%/C>P(L&lLdF:F=iY>D(F2VjR['V1gp10GBCpQ(/M-C=QSe#[Np_8/\gqj%3aiD$A56I,VtYK@:L)]+l:+Pq8\Skd1sOpl>ba@r:Lfk[o;@jns&5WDjR_Yb3c4Do>KiL"Xkb`Ijlloe=Pb-^(:E_^UjB[HIS!=B%p!\l0n)VMY:F1l]CgM%K^\s7=oiaI@kn_L850%#X$H4?a^\,8To;D'6fV?F7c9%jbSY-g%hN*[jh[[]p"/PbA_dNAeJn!\D3YjN$%qs#TPQp7^#mHpB,h:ii&FUO)/D>EaBl"Q^=5M`t7l:XnlHHio7+US>5WBd_Nc3&]6k#QXm\'WU!dE]Q6kblUtW-ZP>SG;@/lr`rj%:(D&nIQ3r-SNRZFW3^6tfN52c4K6-Meeice?Y;_'G/!VD>&#Mc)sCa@gVE(2#k\ZH4+N1R7A.tfD`*uE?&reD?3^VV$i2k%mN6:6%[mAna"/K1qVt6]4gsBVI\.-+/a"^ggTQmjTN.:tX^),?$Fa4\*aO;jERb3.>cC5-eVcQfi^pG+NFnV1@=6/V5!el(u7flkkeNaYr%G18ceeP2B#:#P>^6j9s*[C)\P0XUgjTMZ0FGSaQ`Zn]q[c5VpW2-:<jAC)#=ZMmRK!e1b`ruVSEJ;]/tFUOl(c%J)RB`4D#KjGD!%.7b+WT5Mo)VQS55c%/3N6DIrhfM2.r07O=bk0i[+8BZFFG0rE\h+kETG5&9Z4X+B/d2"El'GK>jS@I=02CL+$7S&Qfji;aZqj9?s%KSf!3Hq411?hGcgfZhUb\el.a^YLBG#nSu.j3'14Psd@r\H(Xo70HhmRK3,pC[cHS>)2-D$%QCdlb[NucuL!q9r]'Wp&o5*T_=2J%\AtBB3?!0I2:5l&r?r<q1^4',HjNM(EP2VtE%]Y:$6JtT6`,k(Ms4\l!/$V)R,$I\OU7t`r6\Bh,Q@4?1:BP"!R5OCW/\%]0'n@C%?IU\GEEj6h1&0!t4?"QHMY1gXJ&oZ^i`@)X(Z!k2^TbTdrmC9I7MYP8gg2r!TT4M@IQj]Y)?]o1nVTl6`*r!lBSmltI8]gjo'+R7%bGmA$s"L:RX)LAac@h*o>^7BR[3&B30$aF[.:6^BAe&(.m4$r<#@F@Y$rHVq,?J9o8%XZLJY.gGeK`8.,LqGEI6XbE?$XLpeO*UI%[fiIBP'0:X9:qZ5#5Q@#D4oW:rA*aKG6C2&pL<3#S3&Z1gP3%4LrUCXb,<&Om&1rnh-;GuU8WYEWBYR7cl=fAn5'%G4N"8).\CY$%gc#f=ibK\k#@7FD:9.gaBrI0d/bnM[PYFP-]`)FhJUf:(O#:@I<p?,U'Ulq_OG(+TdP7'K;'bn+5+Au:h3(R:Q[RRj=+X921%0K[%NQBb:P:fF>D=%)G+&NE?9aV!-+P5rFC;jc.:631c9q6]"3_C&h:u,9/T_Q.G`4-`5*KtJK6;,E/btsbs*DTdH(+^'a6k)f3L`tdG%S$B-8<^!R*GW5A"11$9^#U'mTRo._KTAls^!`SN%I50(g%/tZ;([J'%k\5=_C4]R"l@mhXjM6kUFgE6&jO*a2/\h7W/53XtXZU7@%q5;mCXg4KhLX!T@8&mi^@^[8H,h@AD<u<2EfrDC:P`hl&>)Sr*B'r@\MO5d1_XjR*A=aKncI/,j/BaG0ZK!E4$j^k9KP54d`L3jg%8FE`oW&FkJ<UWNscNF/k%GS-BS!BNXm2A4fXQ5F$m::%M;+CGfL=G1aI8UesKNOkoGdaKFN^=\:,3sH=3a$;ugm[/!\!b:Z5YV-)%3#$`VcZC;H`)YR6;p[pF>FH!hYV&V)@P^sUSftYiQOO_/'4gbn3%%Q<T0\X&f]06G^k)mlP#mY9NU-'l&J?)aZ_5>$WO6O/RT(A@%'BG/M10rpWL8=NLd@fWt!.^o=>*^c<I2iF[`d>1bq>9;BNum310(CgmjH-21jc/S8cX_/jab808U.mckIT"IVA"b+#gL$#OnI.8K%@n%o%OFm_n@9Cp1It02&=L#CKbBSUXYE]d>dS99$)5it`dEV;sD!Ih,4:^@sK/;m/[tuCZZr=/ndEOiCVPVatlVsD=m!$na#t@I/%E2L&#bu(goquF-lfA7UX$uZR"d'BbC/"O_/J/jNU/u9^X/jjMjAEPIXl:,:'IEiCgf<<j6e)'[[>K6O30bEB$%AJkO]Z*JW8<F,(%L=$pg+e:=s`\T[-RaSVE1o@Wl^)Z&+2J/c@khIT;KsGS908+[2gGffh08#A`-AiM1[Q!N")4dN;:rlRUVNit?nUrX$E`l'3q8CE7%'g_nXDUFq?!USXDBidAZ=^8Ii8RN+Le<X+:qr\VcSM>8kCg"8NV.=McOpli2@G[t["%q4D6eoW?Z]^,,?rP9QoBB=<[#,a(GHeD:%$j,_SX[ZS>D0a4K.'&D/h'RiD::B#TJ6\:d;<JRqiP*U"S79YEp0o`UPc01tIdhM1P[4dlP#+AD.j+Jr-ZkUa^=ZX+At<YRic(C=%X0XbDDaBpA5+sfPj)M:Z_HQuLYl-3,fri;kO5V.PLqOC-W^H_sX0)23WR5*#Uc'Ib#5pS9NQ1VnG'q-QBIKh]6_iU.i*g77k0=9f%7T6EBYd<Z'=Z+p(O[aCUpArkcCG[7RKDj#sd6K@j7[$lXC&==9hCIk]X3ib.0/q$;Nj11/e0YGPZO2k0[LS;!P`^9lI-gWe@cNOD%o@e^H5E1WWBWX.0CRIJCg1Wr#-#:0.%m,\/ZKf]"/EeQuZ1j-XAr<dq2K"Q`@liKtBh_MU"blh0S+`cs0a0nqMa#j)hp4+h[4XLt%qS>ceZCZeK=5kLDc6'At%:?jsf0\tr]G:jCJ*PPqkcrM$*a]s:P"4gA$n%JiE'HQu5)%+g)Z&].(k]43Zj1CD*d8>$I%.sd=8*o@%KsRjiTH?l-g3OKdrA_4RNI$0Tr]F4KJRR."AEU"%?o#7bph75S,&QRX26=,"6"P3(PR;cdSO>HC7eFWP-#-=-'@L^k/WVA()V,ZM%DQGl0]':3:B6qg`1V5qcIHq`]?IN(T$tkIX31"b'C.jM2DRGT7VaA`SF:BJsnHCF%%h6ZrP$1O3H08JJ0K$A^KrMm_l(h&7>X=_)%4;<X9\Y^A`$3HYb7nokIRA`6m1#!IcVTZ]jgq/^EU?a@XIPD?VDK)!5jN5(9"&=TPPAdjUi[,uVbU5*RoJI7i4=!YV&e<&.0T;L%%.S^>lL5VjqB;);k9=A3]ahi,`^7#Au\Vh[/ITSP/TsLnp6P79teBk1-oOJ,rg.n69L<dA^%Rh,p:d\k*'NWSK<XUsiTsLnp;ca@P%;F>)&6)W+r1XscS=3tZ]"_Xd-Z`]t-WYT\S6YB[jVs"&d20@CaFK.C9R;1qrI;W.Q-V$^>XJ)u'TT^s0>sbiB-.(VlhLej5Fg)@s%0F,;lTp/:L!(TE!ZSnEML.9"KQNqOJ.And/:9B%1dVDW+dn"CC^Y2IXVlDr,9^a4ddYZ@(oEKSQQ]0pCaX=P7M*SU4F=p?Y?(noh%M+k!"nM<o-;qj!N`GVm1AYOoH19,`W@Vh8*E/.sC\[%ll:=n-bbSfIj@1$i@p!g?:7N^&5p%[C%G'dW,8^U=b27uJ`IFoC0p1,6@%;Iui\e:q\d+e>H]Lma@/fM0-Rml5c%1lW;5MY+bp\#E7kZurQJrfM=Y#f_T$,`CLg;0s&qNek,"9J?.'Om=PTSS;$,Fsi7TZ=N-^%A*W-<[G1#_kp8tVGBBi/;hI-F0@P3*lGXb=p4-6\HeHDi1I*[Q^gV%7Ic!r+)!1tPNYT@pd<s-`BXAPOBu&r$>90>IL9[L7^9gW5%$PZmMd?&I^4KYnIf25m[k[[4'(-1jkoC**hZk5uqdR)/=5&CGO1&oaGI/4-2%)SZ!"TcRpB'@IM6q6H6<Ae13R8$_q1Q'l8bW%md%]+HeC`GCQ$YbRR<nB2o%l)SH;O71Z=3@_?I=aald2LdR'Sa7[DLt-M]ePGmEfUO3"l<QW/d3%,ca5#^Ap$B]Ol4>MC'7=H=fG$EP%<Y$en:)EaX!XhaB>#.E'lq?GV3HW2Be;6iaMe(<S:CC:aAiKI$LgcCkn!"e/20(>*!bZ,U5_SLdq6!/&>\chJlumiLg/Z+,h+Ua=%5'7_!EEXE]ngq09WbFn$EFWn[fGj:q-mQ[_gcS$sh8UMRUD*+N[MDbL-deM\"l<+$a#nBR=;tlfBs9(!dmdlT*ZptY8jgIVaOjMF%3K(tG%1/s#eUgQMLeMnHh%+3E11ue`G>&g8M/Ma`gLTYYA>p$`Arar'Z#MIA[cS6c!N:^]Ff7=H+<$b1O2t#]M8M)*Rp8IB1,Rh:%;sj'8/OORjOYNim8+h/67V!WEi`I)Sp8-na(r\Kf#GpR0f=\g-p%ZgBP=pO?ZqGo4SO$u=`iR$r%d3h]Ji]ZJdu]U5j".,2;"H_<%9s_lq$EY9qm2;1Mku&<+eebFY0k^0SLAPHCVJ3AslKT'JFo(Gj8/SE@'%=@eQ9*,*MX)PUbGfeoK:UMl?.q?r676;ebo@M.WJ;-E%$uShrPkB!M17"PV4kqS+Wqc7+eetLZWe['67B1c!S:bRm)=$1fH;(>pS$Fj!H8nXEQ!=n[ms6sqQfPYU"1'&oV-U],;s.bnLP(';%A4>91ol*sD^:JWqbcI]T^uD+\4$m.)L7]-)k9q]UY[G^N["+]Uj@%^&I(;AGm&A.(LH`pU8DASINjZ+Gi>)3WmO/bIBFKiEVj1Mk%+6R:!R[jkAMX/Ig@eSmdRRr;tnYadq1^(S<0F_$G&EYf_:S=/^ZHCagQh/5aVW%K<WQ@WADm6S$Vr?)q2[QCe`o.j(\"8=VVZEQA%AsnCR?Jm*!mHb=V++%AKm]7AW&$BVbC=l/t#'FOlm:tCD2CcDB3tbYp(V?n3>QQFhX8MfOQ\s;^]$2BJ:+B/ZlWB`':.8oB4Z8@Y%<-"P8.D!?p8:?k(7I%cq.T.AN<0@#2Vi&t/r*uDe6<\YV%(+!V-q;4>DAjE5!tB%NmW@-jdnW93;E4V)Am2;m;^n5#VNh**V/S?U%^sAtoc8'8t[o,2V?Wh%A81C&EMM#F(*L4L@1*S8b[&5F.P70h+HSmYi-]Se1l9olB7Eu._O#V)b=/WA=N-=)4Z`7DGQoT^MgT3YB%^P6fk+dNS$&'bfZe<R9&,9Y"(Bj%8b_"pEV--pOMd,uhB#)+K<<f;Ua:566t)2bcA"*DL.f3&IiDsD-;qtD;IMuA&UE0`,nlceti%dhBBn]a"LIi9foEC];1f*r^FM'gq4[RA!ir+cDsL-"&8?p8BXidoIm9eg#NU?.Bh"qLfKcoe!4R[pVJ'Xu&Cl#Ed;k$.-W1`ncH"%0s.[,HF>;Hqm<B-CL:(a5h-Tm>N)o7dgTp5WYR*d<<:WU(UqegDH1JK^'*fdCNJuS<p]Nj$5ATrd&OsC.&DbN';12Ac.bPFh5p%g%ZGMW[=]O+>r?(d25iHRa?*d_OTOig_l!iB].*LEeXdK5rbIe!n)P0i@#s=JR\=Yh8aZm6=VCbg8hT(8BD7da+f6d%mU<\EKBc6As%E[NK1Yit:.X#!/?.#iF)Z(.-"XMkZ&7`qjaJi21(H7A((<11I\k'FXM&p@/C9jBZEIbEQ+ANM15VECsm4E[W*amPDU3Sbrn'OA#S%.F7_A&NnW1_q.K*Q,UFM]:(V-2Qq%r9B<I%;K\i-/+#!P_oGPqUPeS%nC[Nhk"Y;ZpQ7$3Kq2@]3[>D>YeNC4T2(.8W2OX#1e`+9%>YSk<U$]]W!m4@tSLMP?>"rX?NEY2X3E7r-&Sae5C<T^QB2hN:[9kq"24_Y-a#RsG9=8lJ7BMQLl&;,CQ]832]UB<X$[VM]3qF)3%T%.pPI^;>iHH'\\UKT^0qt$ndZd.s+=#HO?D8MgDl&=1(e[Z$.WhqRMX_,2>doY!9e^A/P8(DW8FZ#^R1p&f?@?/l[7f:_*H=sFY%;i#"7_pn>/F@KQpmdT4;dp^d.c<O)AmRj+H3594>)(C;C9kQr#q,Yr^D551@Ir<eY7NK!$QsF*$di$DIF`_^heT=9gFGBIR1KDmA%FeI>?ZWGTne^>>jq)DkASP^u0DXPiERa.l0`r$O>BrgKWC?^[nrn4=9ZpW9n-K%TcXTKDciu14c"*eR&FH\oK%^V77\E6'8`#,gq%%WBa<ZE))cIbU:5[_t(Lb_Dq.7Wosc1V`hPb\OI?qdNr0g[h,&DK"''O4f=SfClp[Bh6hNQM+D1i=/Ag?-^i>[Mk<c"^lMrR0B/@%cA,r+@Gme2@]telVY5+o6XK;<PhNT&o;g+V7-9H3\T=,I2<?]>L:%?aMs_SH,8sj/2reaXR+L-(4>qn81S4s`3UZI^S;N,Bc(,6K%_Jlr!ma/&B]BBb%0O(l!mL1?Y/,dTC20[?kKfdo,%Al/K$<X/`Bn!Q%FnGG]W@E?SY8,#1]$G@0J?<R3!,=SO(HmY`4L5jPfbYC6%YV)lD2$G)Q-JWn+o,s!;d\61OWFhhg=CsNm4ctsrU9>shle<(3ClriZ@5)!No_Fg'.Hd8)L2)b%:nY/jAOB`6E3FDlO>0:ESD,3(%.j&uZMgO"*\:$TR;iX=QrC!<JNoknX?e<JcpE]/00Lg\[f`aID.Cd8DXAqB@SXmlfn$+d[I>g[\#<O:@&!"h$R9A?&@7n\n<WqTW%*:80XQDG"RLG?\=]KPTJ4alP?UAARVKjC_-:1gW\jSCdW_oW@B>T`:'/t9C9EUrXaQ&h,_$rbq9FQ^;u_=.qj]6TnZJ9hfeGan&A%qgQbmel(V0\o89q@6Oj'l@2U7_n0cI=TN=.o%!r^NPM%=ETaj9bA`AERmVcf%3=>FB5qiI]&R]%H6RUOh-;EOD<m$tDp"QOSk-C@%Dt[mYI`%`JS+<GeiQb9;W:%0:e<ro$"M4DEU4,FWa5)u:(/jhS/N:9_Hb_L[0[:\mf?)9NjsY4uf\,VF[BEq,3DNLP4pDuAef(0%%L&.3)@4gh7f"RIE,hi!FGt=4YMja<LEA!c6+suj@aZ7q]$Y<2h8Vj$i?fs0R!ELk.a3#7Sa(JDl,ZfXZ],V5^YSIs^o1<7&.5nB)%bs>E#DEE=&;G4:5]_kC;bBnUaeO0X+MPk45VoBG]a]p%J]'m/K2>?k[d+>em;_sA-D8N>nD/de(HSf)lTB:CS,=&QLDI\adf=:*e%2U!A&=>d7l7ioQC`3NgCk'#QjK0pS;QD\D*e@<BmkU`oa<)l*9f=6Du9m>Eg5#4a)fjT3o"_Rg22#UgMdb=-bIM`ga_6Uf?R_R^Z%XmO]F$2EagXR/*Qa,//Q5:QEL7u'cF4Zk1)Uog3YRb,HRY![l2SsjsbQ\X>PA4Gj\:3-r8\$:552nS4to#A4a<TP;`4^2-FQV1:O%J0m04LXH(3=V9N&.8YQ<H?h)[MCVOVZVN>QI1b>U=(;)B<goncLD-b/:$ph47X^>j[PZ7<:Z%QTiPiF@R>9U\&Q"f!ibDfs#70*.%9S!hQ\!(#0TSX+R5BPdZlstP3+)(b_9^J/KA\$+>L(R7K7ju9%h+6=h&_M#Ul04LoVf6AT&:!h=idU0-gqmaHV(*Du::p2AiL6p?%E79KS,s/:(4fW'+@Qe.A8eW#RlhB\1:7_9X]DJRJCTuYu>s`MD2:1^p9uKe>\A`8pS`4&h+Yg2#a\6]tQbebcQVAM7DRGc&aja('%B"?d(8M;q1k>$8LJ54]k;UA,%[&lqcS$=HfpAPa'W\g>83_acDh8og]o?To:N3]fAZNi)O$T]2h72;_KVDdk(Lj@5]X":BqS_6^N%3d(,V+6qCAP8LXfSLI?`G1ILH&SYmIF5Scsn_T2Tm]Xfb"8ij8T+X#HjtG#/$oBMY1Q#s.N/tgO1`X9`k$7634<htQ##O>&(u3,e%7i4`d2Hn+/?tT[h>1i@"3FtV.A%L.K`2^Fp*!6XrL)0,\I,pH50N^=E(h;/:(>P>@bZP&M%.c&DQA=GZK^?'#'q_F51^O;eZL,%T%\:nHBcK^WMLY&hGUQn;mVVmdBg)[lbTZ5.%`?H'bifDEm4,N66c.3fb%S<GabmOQ;("p56E-(/>:=2r@K-+9(`.L-9b=6&(':so1%c>;o+<co_6(TYjJDUH9;QOn^$:TQ$%;9Zb?a$F>r4."5@Ap9l-,Do?q>%442f\AMEW<%+oa=iiLA6T0"R]-W*[g(49)Rl^Je.BWo%#1-L8H.j51<0B@4'qg!aAi5*n\!UT*!TJ,j<@^+!'d.B'TL"j&K.9,BYr=\nI**p(@tZ0f==nr3gF>Hub63eoK9aVi?pDp7;EjK-%Ck(_J53jWP]Ir;5H`nbg@t'd86,)8,%@^NfMbEl)FqWtf.A,J#r%j]1iLQf'l_T!;3Uh+#PY]$.Ee[6_F@.gfSRn?CNlS"Rf^rK7%CG-LiCab6hrNIc^k&`MGfr]_PS.0%OYFkE&gM-*KRi$tD<ki@pL=4uFB8r!e%+aCNIO8kDDtTU-^/DPocT5<cP<"SCYFfs[U./A4%E3GnA_%-8rO*gi,ZPA2+SnGgicT7[i^<o1XN2c7<e"`ct\Yk<h)VjXk/YC%l1H</$c^7dsj#p%iWqp$dl\TCU?\s37T=)ooe0N=g%YFf?:);j^,=FIL\FKKKSF&\E:ENc"@'<%eAf?[u4iiRYcAO0C;pJUAHj.!I=?+c6E^'#8<*^-PMccLT_GVd^F(St_S[X7s"L88ft%c*X=rHi;GMBC](fK/8=\]%>85TaL,"?'Q8`]mePAqC-f[m9W$C>Q#6aZearFb]omerMHVfF'@F7C0Na3f?^b8o5;tiT4[NK1Y27]%rdB1>lQ.As=#8b"Vs7h'pK19>p\HnPk+F'hop`DX_'e.*B6m%Vo=>0b>Q$,O(C0^2c(un,`[Yb(`R%<QqH;_@2dI38jLp#k=Q@]q%oeYt=9u;22a(JcWM00o4o4^0mN>p[=kNjZ^h2mS5opbYC*W<[#;W45;XaZ!d,F6:a`qT=(;3a&Y]maRi?r=PYH:R`+c$jC@cFnZd%Fg&./lR2@7*6iMQ+5\oc;F^ENc$#tLe;JW+>F7'ujm\;uoeYB'_Ds^6dCk"[E@iI<5MNl#f!kLT<jA(\p!]%$GH7@p3EK/7lY#Un%]<H%Am-jVRLg0-n2QrRIM-Kppr(?=&rFX+lFE"FU[:(K8--^\<T=&+ko$$9'5Il0cn5oqCZ^CPp5O0=/`0WL>lY!n>L+K/]h!6=d%bV2":Z'R</]mf++::%X0C$tZ#^=CQh[biM@@OI3Zc@b"8]L<:50Qlam1#3u]6G"n^^okC\kftsR?<aj?dY5(!l58*-LXth]$:^M4%o8]K273_)s#]g]pAe]RV4Af5XG*336D2jGa\VE'3>BM2LWDe(EqfWgu*SnClH.P0rA8H+0O!q-t1=_l%aBnPf[nlJSHq/s.`clX`%h'S"\UF8u3(GeJDmHoQTqo?1a75FU(>eE0XM9B0W86#>mj$^;(S0RGc)_L&uHe8K9]>"W$&bi',:#b-A;'=^FrH$tX%mCX!e%h(?%fY-qh*s_6r/:/,aB"@84K&rB%;g,go^Mk-e>WWe98<(U2c44oDPh9<S]ZYRE8M@VK?#SL_f)T/9LMWor'oCJE[Qgd=WV+tJ1Z5=!%Y.'I0%]G%V/d:#oTjEY.jMf[t@#;&ibME;9D!rt:WUqf]Oh#BamH&.41l@hFSR1p8YoCq&ORPHUfZo]Li#o7:81[:AM!c&KETt.k%`DhNMgMb*IgViUo;5udDM"1akc#Te=(9/XFMaM9o_bf7l%V/kD8LtWA6S.uSm).^=F9]?28)X#:l<Zt1.oS,L`-CT:>.l;YbqTd>%nQ$RG].kC]lSJL+&!(M_!4`S4CsV%3I?t1FWd28n#]77BZ5pd92IGECRV=`Dj^^\d?NhjE9FC;>4('\Nm.nQ:]<C/eN(`#kdo51S%%UMg$SX4COUS$Pmin/o&`fFTh)Zdd!3f:[mn7tQo_XWh,q3)WOiCCdf&A2!*A65`+"m`Q<IeAV+o>)RI)O+S:q24p--S>oLcYN1J%I[&%MaAA60*Q>[f@cS.3q0Y[i:k+o]1]%u(/:?AS5Ig2?jTbhZKD-XF*[",?>_!+=]n)HGPEk'+_?s_5dNCm<_d2B5n8:G&0/bHG%rMg+`B)YVQE#M,jbeFOapZdCLg&X8,Ess,GL=+W:n_G,YHC[q0Y+m9Tr)WC+-G*[^:cTdX;#R5`]VN@8WN`$e,m4aEo-<S\CD6Vb%LUu<$DPdY$q"bU4>upi"n93(>45)[HJ5:Rn5]AuASh:("cjpH*#G?(r3D^!D#?uPGiV$RATG[Q*q(LKsp+ASdW'a'Qr((#T0%+-d%_n:,Q7f?%\5U\cb[ZAuI;NEnPWLJ"0>fpk][DHWNXDA&B4bb7[WC7N@7s=+m7^:YH8qSI$%*4fh3XMJKBoutd8cY$q&'11ZK!0AA%j@4btO$pKtEOl69]nD(s51Fh<*2QFUJ6*18.Xc'N:^;f]OCJ/me7/Ir@,U?\8:8&L6:da*'kqF`;s`L7*)40_<BYS6Mq3Sbq/Q5l%&TR%G'&rm`1ma)sp8ReWG.sFo<H<1r,Ge9`BL9Ri:d@SI,K(RtopQ0VO$OXs;\TuGST&kkj`&3I5*KF>;_+TL"KLGsi5^>e-:S[3%mn:8S8,LF*_"qX,j3j,\96G?Wc6\=RZ7c]4op1^&rZe\A1**a1![-TI?IkTm;s;JsX(O*8QD&/g3QHL1R"CMZs3>W/5]>qk*>TN9%puFk9&PSXp(JQk\KiLWP'CmZ(1s?X&SZZIa=C.rmlF\C4:g:e9E9`YX_65peR<*`P$[i2.SsUYe)u/Zc[5Z$KW&"=mD$Mum_.fkB%a9SPdEmMM`6`U^DA&U7!QkE5o=6DX4_ZtAc8ePg$UZ@HZc8T_E*$+n&Dh:`5"*=;Q/;ZlB,h$(5,kc<OqQQdZ<N&oKKpTG:aa`rh%/[Z?In*NBn\:gqV!m+&g"Y,i,]ICY(:'FM]lMo?,k'L5N>8uc@E"A=(,:ZO]?kOh,,LNH05dqsN_[`Vbf\ae8kLr]pCT-ZMGstQU%hS1>?W:$g.NR(eIik\rH'ej,V<qt:I5Fbrkq!67E9RG)[_p!2?Z*2r*Zk2V3-XZ>Gs04K=\,5^E?%]gFlR+j]QD-J?lM4G,Fi>VU%m"E-f])?+4]"R\.oRBX0[.n7a^:ZFq-M>4fiQq0E([^A4+0IO$H_LE&`=ou$m?>['!LT=`r9Be6ETHCZ\-/P>RZC_Fa)5-hVZH%)%\u8'%QP7:4rp7k7q=FBV9<I<DPO5m:^#IAQ40glm<Aaif*'7#I?/7^9i3I^lT)@)EnFF6,Ye'FQYB'?[7R/$tR0-AY!r9]^1tRfG%4PS0\k-&V`hd9OBrr(65]6O"8GmP)$eDjlrn=Y5+cTZ'r-\&[Jl(rZNo_$2#<,YM>.;Z-"Hh[,S2O15G>PmGL(e.-)KqkT*nXI8P%g!SJSI!kJ]59intfL,E!aP%ilO^C"cC%:R$\Cg`IUjr\!V]3D"Xl]Krn]g1K=86QlL0*0h="%:2]]8ej?@MaG>M?cPc0EQUj7^WZ%<sIbcQADt7N95dis8MF3%V4oUc-+M+k-?KSo>bLAmE%r=Np!43oBk\EF6F--a3Qs')>fZ.c3)sGrmU<&Xr'AEFCH^0JrY;hkGE1J%4D>6G*-nl:M(;<5]<D;@gMa9pWWj8Qq+kKViC`Es?("fT.rTOL4s%O1O76,'pQ(>CSrVa(%p0e.>H5X#]#-JRa*86Bq9^H-rV=Mj%SV44.9YsK6)"s?f'O6$8B2U^d:Vk(A2mFtj#nNnsE,,DETTAqj[uMPs.<p=8k%"fo^R$B_+/M+IP9<Nhq+3P]Isitss2*4W4p>"0%YC-*%]CYa4_U2d>cm8CmIs`rUM=]!,AJ3cg4._,MS%jAd+%Rtom^7CaCT%b"h+IRYK'KieH7t:.ZqCsFg5A>k@D!I)0Apt5cmu'[%fU!U-dDd%7roL2#I(UAEpN3m,gTLP*Sj#>ENU\M/3gIabcBV)cVh]9co\ZkF'do$e]OI7`:\LKAARGEnCi"1ciggn!JC*Ur]-U@t%Ub:%:(])!e4PmEbL6c2Va2U799D98`o"M19]#VPU`#g)I_\_aGnP&;iH9_3,Wc6Tdr$Su<p_C-Q(a%@*9I9DbIP^LOX2189o:Ro5%l'^2m(%_4h]KV:MfUc/likup\23s!)BXZP0D5sF.o&"^G@/7+k'r(s2U1"JR8V=g;*Hi9l@U,Pn_nsgS=+(!p*r5?cIr<@Yh#!M.%F!p+@:S+hDcGYRuHlf9u,Aqd9In=a45)a^IQZ:1^_nJ7G*+Ef2i_]Mm?6@sV%=;salf/MRIiWuD39kuQ]lnfHpp51rfDDa!fg@Om%b&M4qFW00t.IkR[/'""Q=AHFLcQ'\\r-d;*PLH+ojF36-^%L9b<VH'FbTcf\Y9V6*eqZb]bOS$1=ILgbjODGN;q%u:=J\%WkX7Zj%aTk=2rUY42aJn&<g`.dBoD^ieIWR>%RdcRq)ehq9)NV;rK=n;SeO0!;1Ud$h,OO`2#>$K:>Kth".s\WB>Pc3R0q#:a@ClmXn"(9G%;-[>a6SijDN*QKh-[n)pDHsiN*p@VB_`]kW?oIs>_uT1ip$\4&M'I/f/Y+s8aS"4uq9cg:%toR*iYQ<Yh)K]Ei*RXWo8Goi+1m$]%Z<LL]L%kMM_LFF9587U/^OQ:Tah'dNlb<-Q_O]T@4U,Q`+)T#H\<u.o3Hk"V5B?,UZ)aMh,-Pn!\9k'Sb?rY(=FIi2o$"*1/,oIY%5P!I!r8N8^>;&=3pn$&H^M-#)%?*jq/9Q;KmEn:G4WgtnC`:Z$HhdB=HAR.-e]FQT_!`4!2]T(@:ej6+,?tlU/&j>6'CS,*9=Kse%o]P]CE>,K>muP3T2e^_u#^kee\A68ZI=tUVp\pS&i*Lu,ApNhe0"SLQ:7ke)&_DMPQ[ZYgMtfn+_GA)7p@#K:g<HZW/^H/F#^SSf%q09WhW,Sfmo'5f--[S(^;;2>)3MfYrnhiG/WUo-,KnoV#]RHB`6L?2rX+S`IiFr5ZO&sYL^sRAofnnh6rqqa?Red!Xp'Gg=oW-0;%,8]aC%sQm)3m^>d\NH>@`XM:pb9,$=='`B<\aN9rGPp"7.rOV5oq2/e',Rg\2m-NWa5#Juj=9'!,fcX-Z$u;=4gk8QqIBNf?WX^H%qt9c/07lF^ZbbJdDm+6p[(Du.Or0Ksk.C0@hcq7SZ)<'KCE2bT7PTH1bk]-ZF#EYXrpnO7rV=D[\OD_6X2i;lXs&MV?E6<$.1@R`%)#N>HG=ZFPiqMq.]CO,OHg9IKQcuWT*aB[HdbgX&PpXiW3Aj&J3qVQOs(`M6N6F9!7r]9(N:>\$:;n^D=]^"JhX5Y;`a7]D:HqBH%AE2g0n1iX3l0^4&f?W8:p=&>K5FHj_cm4]/.djroH0jP.b8Yr$XPr5%qtQ5E]tO@%b'1b1)6GqmDWpQfq4Fhl7!:fj@n2Jbh;5Yi%A`;k&o6eA+4hPi(G/Pc<dc#K"3;[DLEr0pSI<ZB65]_0JS$>>%V8Mo#"`TscBDo(S=0If7N'dCJ+J]DEr4SG7_NhXeY>+un%e=\_%p3+dUk=NUU&':+1n>)]BYAPd260e'eagU>EDm^VEgsCh1UWSiCrR"$_g\nY1Xkb>#n%QKR4R)+\\**+C-SJO5&,E?@1&k_^Hua*W%:Ei!R\C/L6:]Fs$rH#o./$69n<iSB6nNd=G>&3Kiq)M#lLpeNG&G#_t7[pgq7#2mJnq=CEk>2##WUZrlQ!b,uRIkhq50&cY5eSQ1%pVeB7Xe#KPWj0l3jV*%4E6]3^ocj_-6j.qQV#9KO2fcJOr-_K&Go-HO'[Hjp3mmZnT6^+55?E;bR_$qCfVSV<HUI!&<P.\t,?>2W%+\b5Lh0naa:BI^(T)8N.iu]pH%!ok4=C4(3V/>3jkK]a3lO"e<-GYm6l:6JMe24#*f8iCOL&7aPbZi,BaWMou(m6>GN[m?Z9NXQE%2KjnYc&&G0dD]T9QumPp-uPnd><eXoH'raADEL/\MZ@,p*hX3D':@GomGb#O\*r/*bGjX0Yj2o.s8GJdGcj/C>0(VX/6rM0e:8p+%'E.mJZ15mcWU7JQIs^1Z)jdA^$a)@q1&\oTM31CRWaBrV,L_c"%ks:p;t0^WqnlHKlXFccs#a(WCLao\de8'+r&UBldlom]<+,RK%qu,'82O7k0>]/SJE5b!;m;:UrGMf$::LBQ57T5f:.hD@WWfNrkN<rn)?oN#[D2`3-^ZXtGmJ8?e'nh4c\Y\,gM-pAHjmh(E$V)(B%YkA"a+3+^1@CKRU=a&,O/74',?gSEIcS2'_+#FO))D"=[$#8.pkqcE/+(oG'J7r57Er'E'c#.F4(4"`S<b'?,:D'maQ(Z1drur9]%!sDR5IK/>X+Su(-67S2u8&#DsBqe@a'uVcb\Rkd5nbXot$pXS1IfB/25VAXuHe!ZV`s9*k:?D$+V\Ln/qSWY$0cIlrEs"DgnJL#%%k46[Y%isD7:VC$Q^1Z3"*%%QQeJ$/)8$onK?YK&.n;[G:._P+t=<YZe%#&+*h/luA5AsYm]='=nce\lbf(e&S?C_3#j-JnkRm1G7%8cXdmB\Uen?P#oF[7Z51DP"NG5'G,l'=[DX90H_0fG6Q*HO#T%$8*n8-mO3mO)\?9ci#\jcO2fbY>1VfIIkeXMq>-Q\aq9Kn*&Uj%MilS7p%$F9o>Wr^]=%VGb85KbL%sX$+1A=7ITTpI^[puNm7RssrXObU+1?*RBC><1-g,%!2kKdS:^a%L?Taf>AF]Z)X@q#:f&0-3%^T,F5AAjDH^dd+g._tHc:O[qgI/bWL5JQj>/l9(hq2Oh,-8#/50)QcZT(O'Fg/3?k\L6.cT8.mnLPpZ^T]i`^7NK[i1_QO#kK_IJ%Vs;\D<U>i$2V@B5ZY;\B^Eb,`[d)G)=,)e4@nSa8WK5fK2XZ2n5IUNg&^1d@o!_[$e1ddb[k9nW\$:,HA6HKkq9j3UMIM*Z@l"<a%-fQKOloubcdQ@Zb_LXFL-bf]`7Q4$]#QscX#Va9i*s;]>2$gF?UBebgSbrft(iu'!#40V7HY+Gu@Ma*gG&d3Ka.9>V2rAJeg4$_[%C>l(EeaqCo^&.ZfS'19/[f4qUIm.+bZh\Tblh-%Pdu19in#Tg,<oV*#br7;b(+HL@4ra45.G6hX(ATs?QQ)=1`BW[R^TW*9qj6I^%s"k[-As%tkDuXbX0(Cg//-#J7h'5G!luaMfAc@41hX'6lRq9`)N%D(Ehd>/bGN%SYPJ=6WTAaa(>@75>iFoR#j43a&j6<<Tc^t(#%d=l3lgmrikgt>Wnf?NE[#LR+nQd#-Oc%%g(UUk&\RVVp#p8ok:'>5_5Bj]Q&/+qR;=+7]%s2*@SF0"b:rOdILr57j&?h`uY>Q%sd%BHK^DYc>GO"(h`q7]+Id@n2i6^(Gnd]SF&0fQ?hmHK<T(\T<B#]_1(i9^`Ggi@M5)0B"7lHK<"/hnLBD66mRW4`ei<A?k^C)#&IS%ku6F,^VA/`h=T>uY?mc.UP>J[It'rnoEPS32g&u&IYD_!\GZ!V/],U_M%W!AJ^Ua"O(1ba0$CHa6!j*Eh:!Iq`HBE6VfW>]SiP6$%s8=XsSEp9ehN%>$3>qY8cWjZprieUr*_c-_0_:&dbVLsG$S_1-6HkW"p*H+%6QtRuU@9Irq*Q=fS#ZL"R/')mk-=biKUG%=@\-[$%$S_1-6HgsEpX#<'6QtU2.=-6_r1O\nUO`7#0_:&dbd/ha$S_1-d[)A8oHfn#6g76j<r`19I0jEZ,0]tYoHf"m^'HNE.)^Kh>J:M%%:VZb$Rr?WbV;'2MSiXT7g-*(<kM7"eK8uOfm$L`/AG5pr+u?;"4kV!gB'[(=3eIs@\;d6#hjn$)K+EJ+o@Z4#='YXKWKl]ur]5,p%l%r(1i5=CJmq2X_P@B'4?24$9i>&iq^>e26'j$H%*Nr;Lo4-D1RT4@mL'-4]&lMJ1"mG!j8uJh8>1;/#h#Tl(rf.jBH^6#@cNl/J%(Bm#"`LZA:AHHe6'Uo?b5/,dVbE"lA>i+*<^.kVp,*tk?ru?3-#.Zk5>T=;q2@HoR0q*bcn,*Qa"@CV],V6&\I/-1.?tFU="lZ(;%"]'k%BObJHOA*O/nKbL@N$j0oO4YPgrVYgt_\Dl941:*cP[B>6>WMVf0`H,8^CJ7Z(J,,kpb)W`9,Xt[m6q5XI-MIHq<':*5Zb2I%r\+E-*VpL(hB2A\Fcc"W/,oCfebK)-_c/gfVBd.':]LE9m]lQJ4:%$qnqsRDT,kq.+%CZ<]CsR?aU?rFRH['DfcHMF^&(Q3Z*?C_%_-HqU@rpFCj$.I.]1EXUoU9")'g9<LO55*[eU),u_a41haZ[(Rj=BuW^"6W)a#;euhd`:'JH35.YB]U*o@rorI`(qrFt2\CZ$g9E%muN7]&JOQkbf8,@T:^u=qQTL!0'@j$46S@V[QZF2T3]_`f\Q>go-]"e55bBDN=G](OB9*opk?WLj[V5cIHB/7q"W\EIGhHHhq<8L%rV)rMK7!Wji<;`#]_C$K8RgM6[j-b-"Z+P4Z1ZEDqCn5VH[G;7QYn:$_;F^rQ<V(JrSaDi8C.::,^T",(EDte$U,W"m]k%*^Dm3$%o@Wg&-pXI9BU""<5$l8nJ@_2#TIk*cX<1TZYedPDf[;p]Lq4U3dtGN,H]185KKXU,J'?"uLm'9XNQW^j!5\BZpb`aH&-Uaf\bb=>%",Y48qF+\l$=irO&DJJ0G$c*@/;W]Qk"S@so#P8^MTU'poCsiOEh/Zh'hrI&odjN&BK1]F`/Qk=!8?o!D%OQs0=8or/.<(=R)3><%:7bN_rZ!a5?tp@NKlPGq>bNFZ#OhEbl,<8dW%>83Ke8h[Y_>``Pgs)&.lj7,Gf.Q0f6NEO5-Y"UlKEapS=:N^&,qmS1HZFBCWuqX%/uu1AlLqqRBj[r+]%Zl1o$J,e/cG1sZp3^!?Cg<ahMi_pDo+eK,4e&DD8s:E9Oo28K_F%WKo+"UM/[.s>J`ejJOK8`hZ+uY.QCsF%5O3f,FN)*oq:"'FNnq3/`bq<XCHJ$!^,#]*X'biG`E7m[/H9\VYE&<Y;GbE!p$[3PU`8@b86;CaFKE<<EI"@'1_F?7dGY*b%.Etl%BcW5*)dGtM^3F\jq+sQFek'cOiiU1>^9ub,^^lr$e7^@a&4pY^cRjbWZ/,NI:;=qe2]k5h&iJFRI'Q7O:+8/>.@ol?1I:EQ!?B==%)sjOhf\m$aXK$4:S%[4n_\FdD9kWmK)s?hQQcJj9OuFEk!J4t%p2WeJ?iJlt+fE>YOfQ74,BKK$\%DG))EW`U*SJ(S[C\'Zgi`2:%a%&qhN4DSSc_&?UmM2H&pS/j!*hL7g+0H19ffe.oB?ZHaqXHJYgHAbenCOo@&'#igB0X*-Db#e?NduC0)U#Ja8(J0(`u1.95;j%7%j,\Z%em7O$=8A@.F*@_A?'"sV.*>=%T6EiL@k[6;m@L64i!Pt1T:9VG4MH2_kI]"1\,Z6LO-a0(T=YW5qD5X<L8-rF9cTU0p4)mP%*1,A=%#k3#q5T9MJ`@X,<;/%/(P_hbl&'.iE.U"IHg9[fXP0\d\GYP96*.%Yb`eA"W'q"fW1j!ZK5HpM12jh<3kklH]Oj"38C_7H%Sib%RA;I?!p2,U1T;H$:T)lZG`.OK@R;8iM^:8W8%nCuYAgBo%)a]k/#)OSZVBDC;5))GDn?^-TQC3F9R1@HS,aPad-M?JIMB3;s%*^[qOM"glJHY/sg!2)WL?@)QjN!*9CHF-Q;Cjl*R((K9P$X9gC?`u]oGO+(:?*oNEro&@i\nGAPF>:42,,jf\(62`]^NTRum@/<<%>[1H;J%]gnl0A(g+"hGLIb9,@qY@aQ(Jf\Ui4&Bkf.J\I?CWkPC%6H6PBkk'BRa:h#j#ddkL9.do*]1#_>gomS]<C%gCH4Zb_i[Q%]1)YL,p2?+BRN>\=)(JR>Pc1T;"6n&alUJHcPL[;m@F9c?[ciVr3qgfDpb#mh\I:s2N'6Y^"WqGB!]";g>I,jP5_u:5?doG>E"'o%-@^JfjR&j\(SA::o>eO*qr#]e`>]qI[[uq=*e1nPqXj0Wbn&--^Y7@%I<r#tj4:gIr17B`rp;VRh=59as7^nRqrQ8clJ:(H^]<3d%n8A-rX1_<BH1uXNh&l[2D*QcB5(!1Oa4E!!+!sdQ:N_^^FSkmWm>p^3TD"%Sm(TK,jtND_?SQus0HW@B>`V,1^M5qB4.G7`bOi.n%Gi?o:3CDSIZha@qD84ufB$l!@0!9)/^\[96<t3&smMko0?[hccs!9[ds)8Xd\9dQ8LHR5l^#&amrI!eZa6,,54b#%Hre[,HDuXbA%c<noFRGXXOHbTA``\VnZr)&Fp^&%["bFPbZ2kKJUc%#VHENWYV0&Ch6naPZ%\Qms6Xr`Cij.F?I7pQ#Pf)+i9YI@gj?MJ^VkeXa_%IijK[lZ5iTr;3icpIRPePg=hqs$-#c^FQ@//f38%qhd1aGeQ,U;Qj/B0tr7(UT4DH58E@V58:"K&[0EhnSaapCaulur$g$\<#]HT%d?Ih&fVYZ$Q;CXTDI4YeLp[dC-(gQhCm.,R$Qt2f//*)JT%^aK5:2Y1n7ZN&/'(e-[[nNl/(nK[?X>HAG\S%(/jcR4!eOr](mFH&%DVn'#dOq^+RtHg(9gg`_afsKWkfME!R%u+/[###:A5d$;TbJ\2=*<dp)`/Uq/%+lr`KfH;T0XqR<$m=IjoM:-BM<14)s#D&Bl1em%P%*BnTmG$1B3h$hr(?\ZUs`M;/t1"oOotI1Y#K>M]>!ZOUA,FcNmo"OL:34ZjZ2na@ml243M,)*dYPglP@AWtG'0Vj<(SrY,5G4"%;4:J@&#o-hRsni$)U[t.Y&a!b>)(#d0!oJCOhNjfD-aF6"N].n@bWNgnG@V,6Aj(Xqk?YKnpr1%&X+l5M)JiO2c=Y&^Db3nCq44\%%-DjYiR'QCD-CQ*7?`A<blo;f5VnA&\ru1&Fq!H4Tj[:,WGNG%A$@[`88Vh,WUcu!ot[`V&4:?iR6K$,Y+.M9'6hFc%VT([rCbu`%\/A%0iZ>^8PsjeI)#rfI@@j3qPBLe$;pfZ"A^XkGSs@rWP"!;goD,D8EQW8f;dgL*E2Lk^X-_Le6GF5JqBBnaCRLa$F+bdM4!=gt%?;&>4/[CR=Bh[Y&ig<SsQ"k%JDA*r'j!3r-iKMcYP*:M?N@.UQ0ek,FPiO)ma2bZ[g>nV;qVpRQ,nSBNi2gfai^[eaKX>NbeL2lE%b_IkT?A/#P>P]Me<BefH#(EqTXCDMgbIPhXf#BUYrG3lJk(K(^L<T6)@[N6fIegg2fU*6m<.1*KX>@f:2dPaEGLBdaRqjRoF*HC.%&sH]2nOU?6]k!m#Be+\,SV`dcMjj>L+XrIFNJice4M<q53n(6g6/bGT(g^iX;g^DLfab,c;>TDgn"dAtdTmC*6p&M:.jM/sG>b'.%-@GUk_d<#hcB;^a%sg97h=#HU\9lTSP^Qm@4f4dVfL?m,8O?X:2Z$<)g+I*OF[TINU7S`Z,5,#M9.cB+l1`2)H%.`QPP5cEV:@qF%,IK!ecVln]Gd*%XioJl0'5=0[d5r_:<cC?d@S&jB*uL+_2'p;'89hN?QqEpV9A'%ak%ccfM%iXHo:uF=[BV#pB'9LW#465,SKS[k%Q)=;s+nh<GD*6>t#=ssE+PG%_U*msQ0o\4;/lm6SfHBRo%K'ngU?$/L&c9l#.[(kG*;$:#1cfS;Biek(gJg+lhai`^q&DjL4PGgV%nR8;#n6+X\Tis<OA-iQRaFl+*VVl#"V@o),U`-)#"2gXlI%*iYZkI"G)@;VKdqMA3J6JTfW.p]KHH5Rqb?CUQ23RPs8.Gk6,U:3Y%Yf^"D.;(0cU^8`HiD?V5?rDca?D;?q*S3d:9KMQXKm!?BAes$1C[7j=ZSK&8CZ-l#gP$uT?'p#i2uQ<*CM2_U`boWoR:*61N<d!<%g1F8ZdtBR;iaZG]d?WJ:.ZB=p$V7,#]-\0_dDh&tMjlu(n;RN0iPeM+G2-G%kF6X(fFj!:GI)%?ODm>3+So\!o[V<!=n&/(]%gpI%1Cn6c#`1U4I@K?G;#0;keO`'bKaF?sW]"Um<fAHID)NuLZKJ":3hbj@3M/^m[`S$aGE/(/[)BmE^Mtfe9\#E(gG^KWjupp8OE+cX%WTj.'\-^9pP1#mc&=\Ia]^o:TCnst(Pp9Cb,9&-AU@leW3L<HHnb+P;O")mK3R%C4;C?rp-Q@nr2Q5CHDjR?,NA$?KlU8,!Mi*Ua%(Z=X6GB>O&RK'_h]%]>OBOJWAq0A1gOUcJ30P)=l75c\NE\qJu&qLWmR;$;g[j>Nu$T:AmlW9!^_,,D-3LC7,gObP4du6!;]JJS4%`:TpF,Lka>KR.A<b-R$=6*WKp6L_@MBTt%`1*%uCUhHn*#Ag`=0fb6WC(RQ#FJL8$PD9BIr<Qqc2c:&?Q?o=ZVGR^#,D/0;<b1u:%aq@W7?,HUGf%GjFFKaO2en@kqbPfDr04Lpq2OP1?+j0g`^b2R)25io^,h-Vi1t('#`qXp>A%3?jo[WGpY,DiYQ9EKSI.UD[*JcVs%(Re`p[i%^0B2a;dlO$Sann>*nc>f%Fr+M*jeh7uP)B,SE5:5nkgDZ>s]1-g.]=+Voe2j=5hY0SK5'B46\Qs;P47$D=1f?)+<&G%b%(I(OJjGcRq,-4JhR7d_/Vm_'"FHs"3XLb@eX*-pAD5>`We_f;^_%s;L`XrN<2CXo>SS>"Q;#@gO64N:-_Dd\14W%\U^000h:8Tt-%CLfd&SlOAKd0/>"NLOIL9":;Ybs%8<@9V!gU"X`nUithL+]?*K0_CO8Q1o^aHg@d(nAtL@#lkPC!K&e$8k^pp%2ij6%5Fn=5aE<.%J6?]R(hEB<PZ9D;Fu*Q6`ZgAD%?qt-;;!f5p*lsiP?-"'-^n`D'5cX-<@7T,"d,QS5\54;fb$WVCd9MrLpiq'd"+4iqdb'F5YJ7(%dUP-sQ!RJl:P?jN152(6Pr`X0\5>lpWdnM)Qutk:,p/D7[J+H$SFtBl*2or@O=RSuFA-NOKoOU%4\`4kO]mqE@&RC'Y51I109.*3%6R>N_UulM<#6jn/fGJIQ`/c7@`^cddWl0(Jq#)?R'l[O^oLY[\C4OS[YI@7JN,X3n!.5JYnqPIVZdS2r`,h/j.5U?X<Ne[B@6D6G%A0$&55u1YkW`2tXk&Ah_&cL36,D1/SFK_OTVG4N2<N[6$=#bV7VDlD*%8oUPQ)Cpeh=>7FMWbGQ"Qghd=i`?dg@h;$,U>RM;15(M%=ZaIjKijb;b%#T\=_Bg:\pX"ddUiuhRWkG`O=W4Xg%:j!'5dU>2Q-/o:)nbiWNJ#89s9Q)=XRGo1K4'jpoa(m3T),-Y#^X)eON7e%nn=$"A=YEQG#HD1_^Q3g!*65eG-G;@MBfSJW<bq[:GA%ODb7%LH5O;pE7bfRHdXeYmpE!:X`]<IQWTg"2-]^oW,`]I5LdZO1.2VO%3Vq,H'Y3^M'KQ127BY>(Y\D%@hNZh_8mF.`;m@Pk8;<m%NR[r^8W@Q!&h1]LJuO=D9\cEUK-A(Z"C`^GAB??)-D])PR0,hj,(L&Z%r&46!8%9>uX3QOQ]J0KE"g)tpMVm373lZ"FXGt%(&*M;aX?to:RoE0>m7JPHJDTEB<lCQ1[.9&Ji'qh>937P^Z..(L-so]63]nb^%Yms1G8`WZ,Gl3EZiHsakAsr;TKqBJe7e%3s$0lE7B)Tqgc)g1R[bdoi)74$G4bj;_J]tG40sOlq5!s/;EKr6odIE]X+Ce)Og_(oP%<2K9&)@\/u&tu:GgTIJRP[d,?#G&)O;)8kpfB;+h92N:-`Zr,9C';_;.eJSM6/Rg#d>'DCU6/2oY)(X$)4HPF%ubr<2?o#@TdL%o%e1IX_DX%:fZLPG(Vs'lt'TZ[_L.3qZrC+VGO$5NS9CLMXR4[4TF&r8OS'$1!I^X/c#Q-,3F[N5m30Gi_ZOnq"T:-a'T-:Y\de6*N%FHm9$'2b:+ZH8QjT]L&ZCKS2;J.MXOgr+p<O\(-%^5\@FU)+XgFRC)&=SAsu`&\R>CV7hFaeHg%,N?P&W?O5cU:CkA@e16&%I1.a%+mKCBPt<lm.<lJ`cU,<(CXt!uV+eb_XQi&hr$_(O)bm^sKNW""PU<b?s(KX#OR`ghC19emL!O\R1s=MRDlCZJF-Upn&kis:L0H.K%UB@c@:i>IHE0$T8,m'q^FUZi%Gr"%uBAZQK2'EU6Th%Z\?NCop$ksSWM0[mV6EEg-RZ1L-'WX84U)+OG_5@pBZ[md"7EAJ").j.F%9uYM"VZ+s]F]=Xm>:`At1:`--;'Xc<%`pVEJHsnb:0\;5#IdUC@!0=,4GU</3=2Z&"M,>RB-e!a/a.Br7p^DGcgUsF'8^$K,Wscp%cJW<h'q%aC!etmQV:HJ$K<<';5kJNB["2eeL)IR5&B@FtK`b4(8S0q$(6inTWigH_U1TdMlJ$;]^7(fo2br[q4IT1_><Z-3T?-$:%6rYL[-5DPr,K@Vj0"U'8;+IVlNaF1QS?C491]4ZG`_(3\a>?nN_bdER,\N;:qZDdRX@#t?80h>>lR2)(S%Ld29%t"IC0%up!2q!m%qpcFDBJ)>0Wd5Z=^aP@(3gR$b1!.S5<jbm:cQk')'E<][M&VSqro,:1@M<b:Y-BL^Vm:G?::XOBQnEhC(c>gEk7(=jC(aNqeR5sI%mD6oD;6LpT&AqGrL*FolQ>t90eD)B,RO?](p%:7"N#0=R2\iuWFU<L$j?i1q-6SXE8k's[jLh5Ci02(qEj!!%?$8Q91$LTW@d,mn%J7Y*7W[f@4U%o!,r+:A3`o2seDj9s_h2*CSS157;WoS.lMhF<0'OU0.Vgujo3Wr;08@%n[U/hmGOKjG%6VMfKGn_c)_V*kcn21tZ%Ag3eZ.:I4V^co8/&bh8n;`"N%6+/n7]YmS1J_9<Jj-[LnEe9>Q"oZ5`SXpV[=Zd:kNT0ko"Ra*t.6Xh)&R"Ifi5R&$%+a.#FudM_%Us@3,N!\LkN/l_W`-cml(034G:p4b(90*>:Q9+k72Tg?PYB#pRFsUuL)\o8:pm)N6A,UN<%R_71'ZJ"4O,WQs$-5CsanfQ&`3R@_%TdSSc9ba3fehcC,kR.tui[F,pg**SE>RGQB[P0Ut]:dDA(=&T>_?"iB(T2%e-j[D.3uh_=m14>!W"'d@%=r54,m4*ZK_nX=F*EAk%`gDQ01a*]g\>Gbu95LCPWZk\6E(r2f;qI6q-!"AnA'Mi6W#jkR);:T$gCUp#gr@I69VM01aO$q$<[dL<[^QX?=Z:1)DraBH&i_T)%:2crVG6[ZV6@TY,f+&\?W<2j_E"`SaK4:*ee:LPLOqgLJ/7TJ7dFms'$D-!4QW-XEjWB\j=hK2^M1](q+gPBX`5Gk$lrnM_-jE`>%>)ZJ>P%rVbT]IL4I?9nC29+/9UUKrSA_Z@[feR:CP@]Y`&<+M7fk-D&'?_.:CK6iIbB?3MbB?:,0<K6moa)6$8@fGq]+47>-8dqP%3.lq*Lu7@uk(1ti-V"AeXi%1`TM?Bm'Pg2afrWcd8\;F16PXI2"PUU.c4KfOYme*U`/oW2YY+%J^$2$'O`3WH\Orph7!/[Oas]"s%-#RA$d5`B.lA,R"!ZOEMiim\T`$Vt`E.UG_2\/>;1U`6@[?%)Q)(8)*pQ">_6_,>T6#t@I[n[,g.8MXdR3G_]XTO>I/2LK81+;;,%ee&bZGjC;[IHq;0E>P_&&1n%gnHjbV"2@-f5jO;ZMR.O'\m1D5B#S^FAJ<4?#h^u.^a-kaB3L#Er@>VOKZ=Ql-@LoHbT_oR+GcH>%opAQV9'PVRQ,jr2e12Ha">]Db]\=<e\pJ]"+b\7PM=ej77J]YC`*9"T$Jd4,;2fm%#3[+a8T>m^h(&W[;(tin67GYs]`R%@mEEX`%<:jK_J>c/gHR8=RiIKd#`)Mr!@uT8[Uag%;7HKf3^PR4qT_BA0WDmc4?!@[3"Jb\u[[g<`RhU6A,L[(X.fbGUSr^^7"\:oCQt#ds%]MDZ4fVAO+;?S[qH,-BoS2;mL$,u<I^r$jT_:ZFjW_p[hN86!%JL+.o't`(RcE"CsfY'cF;,KJmoJKP5&RiZH2.F]8l0[jV0A!ZF%G-A]5=.NHuH_hU8[`C!SFq5kgLadLc6;m1,KICnn[jc'BZ$Y\*eM+XFpBnQT:6S^LNQ2lpAnWlA&&Z_./LtuTEu2EP,jZTG^;P:2%7>LOkl5<Fb?3.V^:9])t2pk@te_#Ru!pASQh"^1<JC;_6;q^a&X2*1a`?,G1Y7Y'jZc(e8!om^@h&@aEFDji_j;o]i,K7_e]\TTF%Ur^4N0O!#ZBTNbCPUFO8oJRP/'FSrbNQPE6+LC<)"4c<i,PStqJm+Y$gqt+cY&1K0LNDp;2%qCAJ=l%h!o7Y!@b#G\<XDlG[9X*M%LIF*f;</dY%"RB]"*0I2OjO.\+nr2CSQ[P$gqumHWdldDY=N&8GsLeW8-<mN6=f-uhA1u^V2X3)!uPX3HT8^X:69f>6e$b2aM#:"%r"&pBhhWQ2g*<RN+STh_We*bU\HcSC4e7^^"V*PPlSEPla!t'91DRH%#W/@iDaNkL;O!+b7H@l9340Y>\Q=;LZP2D+JbMH!0I-<!%-;YrK!o1]%bT4)%(Hj%5m;#>0]tM<J`9cn6W'.@Eh`#_V[Uo+sAVoKsFMA,Ze,:2ifl1E=E4TB[E5a?r,YP=%\6"AYC:[as`iPb)%:A:eK&?7't\mL0'fSS%Ul$h1"8lC)&detYg':m#RS#cUt\/?fr63dl3NOT%1'B<25XtWS^O-\>^!Wt>o3YH/cKeRS3FM@l"P%)<d%h6.DB7rE[b?U8Rdat$6]CSYF^9Y+RUVP:SH:A4k4=`r%e]&/=ne,;`m:%uOA;UHHu=@;:i;PpMZIMf&W&iJJUF(FRS_c_O%;]gU;%66!0I2\V6$<\Sa4.S6ZJhgSTX=jm6u]La-O6rm54nBE67DmTn-FMEAd9(s8:2;PHuU9To(^C!FK,a>LsIZ9^ndZ?\iqc1EpOoPbI%NN]eD2`?[eGdJon5p,L]P1TImVu&>L:1Yd.Y<r%?dQ:4u""@e%"/YmS840uG5THWt9o,>-=.s.P9sLO:5BJ2p2h\"(U!)GPe9o"l%+CFu]kn>a7@"@=hM(OSKX;\RAHp>i$GDBkG+0CRo'$Bs<YT1s_gWQ#q_*dsV0p@:-_%1f<hetn^IqU'P3RO;af17&7%S63iE,J8[%*L-0o.L\\h!9/C@$MV"ZlC./Hp(b1uR".h;E`R6h30+RTY'.%RjSMqjCWTB++i:*''^,?*"'.3HoDNV89icKsWD\^TX!1V*hiA7Z%'_>)kr?)KRk$]QB4td8Lk51-/K=X&dEk^Gp?(14@qW<n.2sQmpqp>Z`B#aXq(hnl-LIo?)Au'2BSFD;Z9,_rqb2ooiWq4$e6?.:J%R?L#Nc1cjd.DC:r'E562;;m1un:rTYWe(^0i=B-A(`fV%r6^g/:E*sE9m/%"r9`=ULH$CQK-q//@tado#?f)\S?>HO8_Wb'R&Jeg%SVUSP"Rt9V5D,2Hr_CEhJlJctUl58a.;l@s`9Eer/0LeC;7frCC>)R]mJu68"u.(9eOhn60SfLT&8hLt(,[m?-,1LWl?7m9[gCT^%EjUid:$ZM+JOn2Q(+0V3*Yl'[11Mcfp&V-<X$MVBAk=QAa##KL^s00\BEN;-(^rrPim\So5sMC>m/[$BHCKfW.hIR\25O@ph,(\.%T^>i^<V;<I$#'fA'AT6,J`N!*%7uo'jAo@&Y"FeMR*m0;BO*rm.WAKS6+7<jg6)f?4nA[Y.?#rd_98SfWaG2QF-&qH([782D5:(Z%m?:K1N<DJ@;;4=a=%uJXBZ<Y^8e4HYJDF*/JfjYS*P*:i+!g#,7ti/`j..jWp#a,U-t7Ts"I?,`8)%tIR*C@&1u/"/("gG)NJc@h%pBIs'YE6:nWK%r24-Mt_Lh7ul^QL?T-Z:O)`eKnb,&XS*@d+o?YF`d16Pr`iXH/0F&PXPsX_&]aY9d;*oS!d]Uc:,Ui`'4Tm$g7q%UK1j.)6R]_.hEd?['`*qYuZYDKs``(1+/U>gYe@"Uc6KO]P"POMc1?-)A&heZT`K[0@"!\#NsfLhl*:b?>DVV\cCTn4!>deZ73>k%01BEf3uDOqB/N:DpPb,'mO?-eD03576o=uopAhS!-@D[Jfid$[dhR:6A4j""=AgpTW\>Aje5]`u9r(;1Xn4OPX#MGKq)9VrA:j;k%NS4A35k"0P"NAp:VpsgiK6/]F,L!ISBq3A3?;?"R4c!F^(ki,(]ENF_3ab';?+V61j\;7ZB7#11GoLQF?Y;P0Z08'U"&![JS,i"A%0@^RQj6-2/B;,Shq4ltEj)sD-m%Zpae,?&q#?EJN%r8+adJ/&dkGi<]Nr=u'SYf^pUcF!o`^WXj>MG*Y+pQ!?1eY`3(4XS6=2b:p%_^W\BRm`JN6o+e!PSC"EbU&&^,ds[0:%7"6l&#\G1;#ssBorn*gZ41O^#Fa7N>CU&&3JIp=+3!KC#P^#-sAi#6XQLoP@V_9''-]'%E:Q;8;+"^MEWr^>0[Zu#nc;9)CKZX?<$RN7:XKsP!Z",GC.RJ2k.F#+Wg=Q68=8VSSufA7Ylt/F[H%1&OJ:9=@.hr4Em89R&G?T)%W?fa2L?B5GVVQIRKW#2J=&U#b"4[Gk2NA]-@WSc;a_We82,:-QJdm-6RSX6gM6F(E17POF-[WQenP`(ZXm0_]gl#DO*F9@]M'*Rj%E!$asO-ZMHP:!>C8^8[]C?bP5Y$174nJX&.*&Ne:!pV'"Lq4dA<\,JX\\g]nT$?'LVCF$N08bM=7!,L;TnZWfSVUU"7)6C^Xog_l%Fs(OB6o$A%F>WgSAN,lf"EiF)LIY3A`<aK:@MV9#h@#k,jcJS$'09OTOg:P9U)h.HksS'[Hq-lji$>9;e(Z&5gM/gG+OcH2$C^ZS%[[.->\1>BLMoYr?Kq@D',^?L^eq"HD(%+sF"C2Qi&Vad1,qLZ#AiY_^G!S0*-.n$aQ4=ER@3Y6:;,mBh]?!SRhI\7P:"'uA'B>iM%RO.R3&`MpUWMCfd@0Zt!\59DY6t-ALQ>YCd)*;.ZbcEn%?A>P#Z5,YC`;V7Q5U8hK&^c=C[3<27kcY[Kj@9N>9uNPm2bTnI<\__N%VW-\K@W;?lqLQWD^;6*;^Lc;q!Ykoe\W@Sf0.fAt^[UdZM@EUI<,[c2OnH@[6qWO^M!Hib)k3S91F=<H$$k2l.YOTfNYK,IeQYJJ%+I=R^EoS=#K+J]jAKXP_1ph:A*K^tI`?V@?;j'GJ\Ypkm/?F\PE5q>>D0uP`lJ78J-NRaS?aDQsM"bUq)H%o[Ul8J"G]ZW\E#fUK%_]UWE+AtLG`bCDoeffG!1^orfE)cJ)1=Qq>@rrR720SdFM>NdC%5[Aa-b=n_6unCAa,0PK]_(\V%3GaTC*^i-=cd+O-Q@,%,8)%d%+P>49];CgMUE)HQnao9\DBm?Lp.#2ik-,q<@7&&`N1?%UP!_Ne[ZG84;e"X*]dHG-Tok&)=@[Q0@%*6J.B&iRQiu>Bd,c@*!EfUh%SZ9p[TRV2I'`h&.GaZmVdE5/"O=!bWE'_4a\ALY%%S_cF';C#\G%QO2R/s\"Zf:k4GlU9#r#P;2U.H@k7_IUh\]O=N3$oq1^_YSt%_l9\(7\6u&.^#ChRu*TKd(a<P379lIE/?c10o8B22W6!X3AHJU*f/$LXSBkZQ6"MfcsUm/640OJZihAF_mf%ohLhmT6$jo8dulA;%EL;oZUTi@;BGd10?`77-j__J^H*/`(4t)cT2s/li$`Z%>&Y2ce@<Y$Xm?o[`0OKFRY&G;&pNaRI1tZ"lEs4rbl1+'.o=uV32q\U6%F)g#OVjf$?([!L$/l^*9,*XW5aIpLS$g0ef407]sCGl/WC,nAC`aJBHWUH:,#UFOsd@CTkE5i<7<tl#jrA627rsU0E!'@ugND+lK%rD>QD5T7Ei*#GG#[T585<4O;Q<_/3e/:pIDBINpsXZTe0i&R]Y8;*R[)c0==k+_p:g,/%u@f4,g"O3`#K1RL:701;&BA2H0jHe0I%$=g$4?UZSTS9D%a\lgO,YV1Dk$9gFpF<Do+iYEYFNVX2[$7#tBYXQF^I3:SU%8].)>OGc/>`#jB*nq7+;o_"_Gc2o;W4BC\^#Faf%Kh4Z)$,a8@&7+H9(!\7i9[[Z`"T_QGH)V,a,ndCUME/qg$VA5D']9&7>HRU7(gRZH9o;)Sf#i`/oH5P?T!qcq)Pfus2.P?59I_@X%d;R0u<)Fc^.PV5!Is]i/;'+4:6DAZt=cS+X3JRt_K#-iH48a)l.4V9)du0GZdQN4K4X;s1mP%N),[aT@C^/!"%I?DM$&Gjc&(;lR%s$?:b"$07&"/K%R$BnSW@/?[AN+uiT;!Fc]7=>`/]MiuC)D+M%C,hhVr+N>;Q;uWrKhpL,KMek&!\+'M*2O#3:eH\%+>KOBTlqt,%q&h!LAZ2";kof!b#T4Ga%md4-W%a&AhWETQoc+3,+Dk;<?3SFqK,,a$e8n:r!Mn?U8o]8/d#nIoX-$H9BpoZ[1-d>"N$ro^eV^)j%1^hs?l:PqFT1H,g<ASHc4R2fC)M%-=$=9M%Nk-sBGg6;]&nO6.<":M2M',$21arQne/Nkd`kJ5S<FT&fCGa)J8ta!*9c4\!.a=Hj%$;j.f$RFm^eKqJ$,qJbBSB/@?>3HS)<>`I&20P_D"U_Vr8\FR.'A_bkL&,?#+8,-lWU:l/<NoUu#j718-3oE@BS"!/S=Pc>?m:Se%h?\&OJq]5KW(@%)F`g>k+V:t"HU(QlX0ia1U(fu[Y>HY4`CoVL#>/)8@1YP#NC4TF(=#AQ:H>%iNl5._BKr"s3:p'AMbr?;%8\(q%O%CU'(Rrs_/+!Jb`O__+1INCbjUjtI:5i+oeja+!fLW^*OFbF[gT@Ir;8p/*m;"f71-4:e&cs;:W\"ksG+$tL3tN'qX?fJ:YQ/@/%i/a1q%V%LIN6[,`8WrEb%)LLLMk7i/%j<>b>OZtj'ECGhR3VqkHX%O&GF7Ul(gfc`PC**p/2*PEX!B`-]VmH+bljG,`3l`8[l3AB%,h9_a,dO.XSLJ83Ul#Q<'r4[6VNtUhBkR-59TM#:)JrNbFs\/CmfXVXIf6`))=7r41:dZ,q0?#<Vs]onan4)@mWP!NVTBt0;6mUR%b&l.lopU*A1*,Hti`)em/Z8ud?)D8Ec$S:R*Bn!cA?@6#ZFY-VIjEM%+]j#d\'(pLAU6Z0=HsmVdjnM^)[l>=DPBFq"/Dl+kX)uJ%]a'0dLSN*iKfT8^AlbkJ?I][P/C[Oe4XhqAKfZ6F-a/ml(@%jT+7_h"2cAiiaPn-4"k\u.,^qRc\]Wc&l]A)Fa,L3sM`e%>O!n>.%QZ'*-#:XkQ)g,Xa;5l`&nq>B5F@'*0j.ds>WDnqqQUapo,B0)n`)7V.0AXJ\W?/%)VV9ZReLNIu7=;==8'[ssGpafd;6*-fDAML?%K'8Rra87WN+OMC`gHJChdN=kS3;FollP,;W69QGe8(2?HW!@uAZ>*bme46<#W)&4#eAIBTTgBdgGG42j#Y/aD0dR"b#Pi,WINm9o%*6!b2a,MHI$VR^#+%@_8*Jm`_fgQKp8<N2R4dP=loP,S.YV'&3)4?LM<Lu+LW/IVR*L>r,NU79&p:BR<dX)."VILQJKc70ha%6g^%c61T24>;r_\AKQgM+f"R#+7XuP"_d?H*%<:17aGtRuuqp\j\JnQKaNhC@nkHh9Jr"IL)A5fn.U]TeMYo(%hdZN(c`EdQ!NV6Zfl^%FR`@,AU4@i<P>gle"PXlC6'pHV-_qVVB\g6\4O<KB@(3NZLg1a:h=t$pr"<(RqS"[Y?e$oR=IZKn$gC`o`qH5>uB%`kcb-tceTIJ%!h==eL_?k`U&a[<70Gi4W72RY'hBL8SrUuZ,#mDo=q<e?+.tJt):W_cpa`LlLcrOl#o6lfT0kHaG,Q)B24fk4#p<6OIQbZ'7W8`X%,g4$KN&0IGlTLGHYD$KYhu[9*Ukf:<#d.P&KN]?oMR(\C;2e^'aaGB>-2U4Ydg]ZIeD/dse<pn)8ZUVfaJs.YmfZNF:<c\;:V*LO%`k[NV0gLR!#P(k[9)Z>S_M&akFLA`:EI`"rJXCO/KLY8_#V2-@QXmkf%TSV@`^L4B.)'A/_4iGPG6;O(!P&ZEZa/RT.2Qs9"%E/l%Rqt`"T!Bf1<3`,:4mJQ#(aorH/?WPP6:[Iq':?b;SJ/Pm8suJY+</I='fIH9%(qI#J-Q:d._qWk9G.AE\o3u[;,MqQKeX/gpkG0o%KP9<GTMINN^lV3W\e9?I,L1/%0%U+e7/I/lZ\RmnRjJe&\;bLk6^TpUET_sIe$jmXWJ":%2%DM86rHd*L*aRDQa[rd$%=eAOg_Xl%7Q`'mm*60UYC%6t<T-5Th*;<=P9!S2&-M@on9Vd17p\8JK*8XnE%&<c6d8*BC]H1iNBOSEejuLdb/tFP!mccC7*&V#OH,=N_CEtd%oQ"E,POdqe3&PGVi*ZZ4NE&t1Z<HX()(D=iIQ8b:>''e1-k)U&Q8FL>nHAi+kbujWJ:7/IZ9:ZIIrJoK4;k2]Gaa6MG+5p5=d/5/%!C`cZn1TiCF(ckISf!2a05#t!:j.TE26&)medXjDjkg,[K7k2d/jVgrZ&<[HdigX8[n.>-#>#Z4\.HGiS_=K'pF[%V/Ug(j8[$Z3%8OV8QM!k_I+`[Sdcn))7;N9GJbsn')'ET2::bgQjIC'Zo,I*9<'`hJs$![2"/3g'o0S`*D3NJNfkG>pm7:3(od_6WS.\ubdMT'qU%#*@TuU'%QoL:;a0K+s1e6p-eE#;NIo_FdBrOL!?)!>B;7.7qQ@,$*"*j0r_oAku8I\s:.XbV4A+]cAa/`XoLPF'l)<ANe!2gG^*.%lFY3/h$FZJfLe3]KZLE%N%u;+691d0#%,snq5)7]9M]db5t3j[QoNr+FT<M^14a-oDPj!$I2/Q.IH5_6Lk$1Q^M05[R%pEN8K\3*%Ak4c.[INB*\4EK9o7Uc`[krIuC<;Dr@Q9%\*RP?i/Y)@8\pPNQ5KMg21hjSLAEqo=P<OA:ZoHdOa^R1lH'UkaIu(6"D)0Vr^4+4n%\<;auJ<#R"]#d3"^pR(F`JU,hK(A<gp(.nLL3@0bZBHI'Ct5(mM;i0+:4qbX:N`S;LRTH=+030l[h!_IVAgD>%2>:Dg,5JRF*?bL%\6b#2FF:#XCId,iIalR_`\C&9'*AiN1o-?&9SeB9#Dc?[OD#u>.pd4A*ectl.m>K$[Y04P^iGqfn:h5d61?R**,uqOot40QQ'joF%::#^DUVu/rS!,Ub&jMdFLl`nQR"YC59#D`O)V5T]_Qg#kI@AMP$#G:chc3>8(#7dT;Fua3bD6AL<\.F63sek>@CA7f!jH-qS:h"A%WD-ml\Xm]g?RTok>qR%PMLai@<1Sc-'%c?L<,5g$Hs6h<RScI?;t^TUX+;OX'7P$G;Q&^l]teF'NEjtA.E;hh[UbiQfWY:JS*1,1%N^DbtIFSpn]L,(o<%#j?G#?hmB-76M!E/R'2O!P`'M$R:B+;Z5+DKb<nD@0-96/+n`+U[I9%,JIe.`Kf,[[st:s!N'@hc1k)--GF%-;P(R<:^W(EkEK2^/8Y!/G+,iTm-lu_]ckM-h^-Z1sU^L;m`%,-?6<t]S?M/S3so:@lG-FZh(!U]0pbD:.JSeED&m1E!>#g"YQ,M%!)[[H9mj>k824nrOHAE)RZM>7735I'`)#T6;P+,4&R*?ZOJg_DjQ,-mrYf9(JYgfOOGbX-2Mjg._c9H$*u(Ple4Q:EqC8MXY-3^f%O9%b9qrPQq(IHs,UmM*^gaP92%0N.48\#eR/9++UnOEoRSu''Q3F.;qie_qmV.Nd#&=[6<hebfI;Qi&!"0^;D%+1c+F/A/]4Y-]/%Q3Z;pe,k1DMKlsj,oSZO9C3As4W<GYN+Vp,'mJ$!>\KM7X=?anBM^$#G*=-ujXg/c20]aa^+PcZ+dQ!\V1TS@nRl)M1T')%cP[ea%AuLfc)/P`##$c7TH'7-:&Sb+.W\I+9O'8\u^>*W8)j>fq@d@Dg[(p^5'Sj7-W)sC)XrThP4:*lnH`bOpi6F^s@b:(=!cnRF)T=L'%28i+@VL'=P#FcQ1V2Js'EJu0<!)<eE&l5aR)QT!DaG0$2^j&):cBlBc.4W9:WaIfN\H/VLK>juGj=EmGK+cIjetB!@*ju`jP4_j3%r$`GR$L`/999MdM0kEB+9`%mI:G',\`Y;e44Z]H/5WS('>+mdJ/dH<7N=hDFog-9L)S)D(,3RI^7n#qBEE^n3M'O$)a#qg',`V^u%nh`nO(Pf%OlBuYj_JW>RT_TAb'D]>(T9N!$7S(EJAbLEA]N='YYoRLlZ`LI89B@\W5]ltu<s$BMf@6DRQ73%L)lYJ*Omjc,=8e"O%DF\8g3])T:OTu7/YFMY6BY5,%L\m+W%!98PTeF?ea/%]t*?,Te.N=MUU(%E^6gkQ'ePR=?blb0XW9MOn][O0BAAjK)Mm-nHnu,T/%#JZ5QNfp6,A\\Z2';tt+?*0KjINNM0c3L.Q@oou"X2@Nr=!l9\a;nU#?0%di-K2Bp>1TGBc'($,bF4uBmYK;E+B@#$lep2]g0[<&%.'/q4:%_gM6Tc/GPlSfBZ.b?obk%h5/<M,(maL%e>4j7.L4GNLl4JRBjAAq'KHqotKK*\4OXI%Z:'?dFr;%tHP)7=&6IL%F3RAo=%J8:gK\OSCr6KikNK=WN&\2H[EO7:Qb:5FHS@&[+E<<9I$D%/o(7e`&,P5$0R?ACASFDWoF,//qe-(\2X25,h'i).geBeB&t<Zi:3%Ds\\)=)ko#3OBTO'#pa5i?WdN[E0as5CkYES0Z$Jji536&4ma=.!ZUYCStKG6aY6G\Ua\MTT,\9[I8f;!PPN^BAMMdC*B:NH;ZD;%iDuX>G0.Z'ajo&,<fTZ.M`##S8AsN=%>A#*gi#S!]^?FW__((h6!,#\B*aYZ$3h$7C3P<M`#3DX"6_$H$#Ms1*NBp6d)CZOO\_3c%k#p/l"PsK\fc?eL=G5H_fcXFNV6XtY8/eVo@._maG70b,@<Yg<H'oTd[a0>f)JqCi1Hs`fTe4r=#jA#03\'JEp+8L4_f2:M;@IOV%P#Y1>9'l)!d;Vo\ifb@L&/BpraH8GBP9-RqjrDi;0S+YinJ'>"OP>),9BQ@dU@g>bW/.-.7rk1m+nbV,AFEnDOK>t:dHcYU3(W&p%_tj[n=2+AUV3r3V\7gqu.":NZ*!/cU\mllT9Fesq=V:XjK0`B4Wc^^.Aq*=j4\^7O,o%:BP!kTuhf(Cuooh6E;2Y`85'i^@M-0#`%$u'#R&$`EphDo^q3)iqV0c2L(6@L1$X3+>N*1#bU&cDlY3BV@`mk1>BdkJU)R3%IHCfi:IgAGJYqq]3N`FkT#hB@^:<PLM+-QQZk%I[b[:h.JL6gO;Y,2QOM:I+I_=#Z]DQ.e86`O^sQ:=5PUAr[UuT&IBW;>h!_6h=`(3DPc*B48Ott7HN9,VIF8\'-+D!>m!B2/',M+%iM^*Pq,,`sT3uh/KobSF#SRg[F_tP\7/4E7S"1FkTm-Q.rL2LMQm\#T=5\sK9FAq6MEq9U'$=CN-tu\_\KqP_!*\U<_\D)0nBU7J%7Plr`6GF1kN,V`emKlfp^6s=n0Q!)+Pu?@f8i9Fbn)?hX_ik'(/*9"R3d$NV%:]<5JVknU!7A-]0I@8KB0mk*Rn-RG_0"!n/TQu*%XJ$VOGSaZ3PD-4n6\\\"&IH1*=bR("n"d$E8BLRI9R[q*92F<lYJO#1NXtBFYbgk,`h^=i#,5YmmE?,m<[CAgU^%L9Z/5jP'#_',%U$;[u+o4dm,ms)On.V)d^a=bL41aLXf*a5oF&A%J"2kj';*1ubFqdKX?c1[KVcf1<bD=c"+;0W_LN]DK=qHBR?tG9@XXr'[Qac%Y%6r($X$2rS]Uo;5eV7O_<J4@Gm$2oHO_)UEK`ub':G)404M_U=6%oS^&nO#WT@nrmhXg;\p?hn+:TsK?H(Nd`#q9`Go,p\B:TZh-7%i;t9NJi'Q^NjW'(YL^gt6PYkHHglU,J0MkE(HmqdUA/@RPHe0!p3Cq6qk;GS;)hKdV_78cp+,"Q+'\nc<7IUB<(O&df<i&4FR8fi%Bj@j.VK;!k7T)'+/pP8lR?5Jp[^Ik:No\BN..RP6R#76G"WjQ3"UW>b_B6r;#dZ;F&u`O6-FL.)r4uDqe'?Xp_qp5_c6P?dRjr].%e=TE>!pebk9O^[m*\l#<!B*h\CnO)[U2Rp9WE%4,hJeQs;$UVg<S'F8T@-_RVC)\E`A4FMKiN3ErWfJ]V-($&UrSK!980#UM]19H%^8nHc.XF89Krd3!n:%'.NL]!*ad&eR`t0sb0=CMCWQ=S4#Rm_:)H,'0RBu%_;>%Guk!GI&3QfPh<3CY#56ocLp.']+U,%]=i!)SL%1#N8h'r'qoZm.[m+o-uuPo14h?(YmkHJ@M]#I!+Hp-g._eNU!S[IOLR9[p*^M"k[^*g,%K;8K44RYi<jP-?+Z08Fk6!>QPR;[ZUf%@bf8O-Ur$,%D'$dCBpF=]0DOs%[SmMD-+Bo74E!3:_FA(HDVEp#U!$kQOQh3jV.%D]P[MqK.jC`5:0qJ.]=N'd=@au5WpkfLh&Bg%9KN]Z>kP*>^--;@RHK9opTj$R%l'Z(h0jNjPkngM3]`cZNdAgd#:X5tc`*)$8&N`eD<I("\<Jk7US>?SbhE]1ifA7m\:&Hn3hk2E%PT:d(->nIAEUZ9_le\SCBA2&JH\#p-K4C,,UpNb,RIMN3p)/9&QN:/B!X9e\GRN<[F.K,F0#i$[?/d[hM^!r_RlS#qPt24M`OuEd%;ppFaXG:pB<]4bZ["rHo"O5--<$,aHML(9JPXl:j8cTN.'H?:o6r5)>iInL.hm?9&='Aa3924,.J(94JT,\Gif:Y+c0GslU+RA7)%Qq7S;E>_=u2^GTUqgq'N"fYi0L\)!P`)ZG(Fkp/u<\!,A0h!]@8Ee)F`"8Rk;)p&N'G!SIIFd\IE[`G3;q514..7eZ-'>JpL/"pc%mi:=<md&))Ni*H6KY%q`=Xo4`_5jn;`6+E?=n/'ra_;(?(kgktkQFQui@*f/`WeCL$@sOQ?&2[e$VXQ6?>?ND.X5g0m&jAs_gUJd%`N3I`!"9+HJ0\?Q$O5D+6)7o-/aK+''?M\dTB+oW4\CP@7!*ArJ><A9gBJssS4,jO"ZsgHED0?&Sqp(gNXR2@O8>'eOIVdso;EP'%:Z?P-OE/n\4\D/L>EF"`#\/\"+dcSIJub/,#?#P>/TaZsLL;@'lst_4emXXAQUXpe5O(4[2/[&s/m!PW5T5&NM!-Oc4eoL6S3rti%^8`H-2"XBC]q&I9#8.P)#'I>;WR%o8JqD8R8P5be\fn#X'eN-51E4!Ja2"0?Ln6Pc9:_:KD_LR*rg%c>Q[GtjPaJ.u;5-UY'I/^0%mKgDiL3ITUqC'B1B1TH<ad*N13ZPNLF.3LXR&0j,(IiXNJ>6+L99e_N:;go>(+G^Q&-=:oab`Q.:)eQ&Yp?EVi!nK[?n9cY"X$5a%qGG%T%Ym&tVRN`:[8J<p+Mol=\iHTb4apt.7'$NAbJK5hQ?c.*L7W8rR1^O.m3%[#U!XN4:42.ZP7mb!&/WQ:CC];oX27sb'*.k:%'eIi"G&h2UT2m[VTIL\l"Y"1PGUfNq;Ck+/,ph@<UX:Te2?[r;Ebc+?;,e#MP5O`^qC<kKCSjCj8cbC<_SB/N6#A]<0ZKQW!26bp%ce>,&%2DLD7^t-eV+:h-eG'DBhs]C/h=5$hbccVJZqQf*n=k#'!hEs_i*%Bg[ncCmrCUc+Y!=cUK`QHEq;(';G#>j6WDk_Y9='e[%\iF3!PjQ#s-,+'gZUuY\JYnJ4SNFueE#k@A[m'>G2<_%u`CnpA2M,rWUpD16?FNYE?KSLr^A&'&E:3sm,eHM1bD\BpO>c@NaJ#,D%]?FqclqHtn:.Tg)&&`ofL:?iN[-,LN65A224K#EH>)Aqn"a.3W`(gHLT7W1gF,M_OPZf^U5[-Y,/X%I:UKRbiL6.Go(,NODZr.?0%5:161P37aT%&=mt[q[BHR&uL0>V[MV]m,e42s!nECWNm2gIb%Wq4oIFf4(.Xf?CXPRVJMZ7'FkbS9)LpBn&KHe@1&IJjbRr[KL8A%bkd*`<;,(9e!OAb=;Y"c"-OMmD)D!R'1^1<dEmEIN!+`Ah@Yj`d$.q'[A#D[MhiXF#(i(BPpl"#&L+,XJCn.o0lVhB&=o+$O!o-C%q^Z>l:GKd+%8\?\d\`CLMK4u*W-[(1MeE_uKAeX?0TOBHIk=-qbdBL!q50sQd41/,G`R\"D@P/HGOnC78JOJj(,L95:S8&ADN*#E%RGj?_#$##2(@EMP".mY2&A`HrLIrWWB>)SVq6!F1b&Y"AGRc)\30X0n78SXnYQViX[U'MjgL[,2r3I#!+2JriC-c2/Df`K!HC5/@%b,LI#Q64:=IYd'3=beE'G=9=Bq;@<j/7U'Gb-gYWC^63+P.mV?P)2K\GlTTS8IHsO#iGeFrIj4TF!8hM2<J4#_"c!k0Q[G'$FKD%%S5B#<_4.Y8I0Uqs39]UW`6cO>a:eSle?9_jnr^Db.>mjn\B'GJ.?0U;r/l3;OW@,@'=*8(#'(B_6hkW",-2]F'W?Z..8mAd='T=Y%+_%+NhL*3"P`/CcSI6$mbi*Mr@X!VF;&?(o:1FnkRu*bf8Bb5H,2:JgY`U=e1[HFq;?7^YV2GIJ>fnoj#\RdnCWLoCkV#OB@BiGm%H:)9&$QZN[?:<=..X=2L.O;T,&go:XocL[p#6IT#L]ZlBA7$]nj8pt!66OS"#[h[:@$Bq?ed",kp<=a(YQc<=S<lP@T'Aa/#u430%,$%$(C--HfNC\^>Qea_7&Yp\<hqpnh([^Gc<@.1TG>9ekQ$0rQCIoRmgHZ[*[1e>PosYB?fJD*2F5YA(Z]!\sDP\W20'tLdV%(Ac%2ELTgdPWQX7ER-bOr"hhD$WNd]SbY20IVZO.Z"mlgd@jb%LD_N6:Pl48Adqf7.&au[Q]5T"$QDnI[g0mq`:M`S<AAXlP_tecHG[b%[bbp%rUeD/X4L/A2$[`"]maDKkkT#al(uubf:W)Toko&CJ%r5\CATkcRUkU]j2o:Cg5g*rRqCq(+#&TbjRj;sa)>;Zp!VP9GEs#r%?[oMr^$S#>4Q$-`n:(ff(SG!&Ik*HYR%+1s5Y4!d^'f;>Te78OXCs(qDUOe"otXXCE1KZS\?\F+d,+S:He#=eL]99\s".E\ptOf'%a(Fif^3=q?)B_g(?`cmegt`BcBgPP\5dsJX6flb9H9Erl:^*:e"6'CqV:-8L89I6[NJ`BdG"7&<QmCSF>Sn&/h=\?=]F4Nu-oEdZ%VU@@=`k<<p%\o-;bo?)KcdQNU2iF`G\"<%>*e1nPqXgVTSaEoT[n`RpI=&$^Y4Ji(m;2:ogVq\NDr/\r>MFG0q=jo+^R%E^I+Oo"%cej-f]r`/LKnhn]J[MW3+1C#hkT@P4qSQ!bCTk33Cd6gfp$qk$GL'WGf^J.8hgB[/nW(XV,oOVUk#]%#?i;9(//C6GR,(R4E^O/i%$K/_Lc>.]TqrNUJjIG_3f!k[gFm#skD_X?"h`]kFc[Qs"[^<Pjp\"7BS!S!_hJL#V[HGB,cX4HBfm7l&q<li3GE5KGMM9Ds7#%t#%VM(+mVX75AJpM9-;j_OrT\bmM[[f]?5(g@=$"cc`[15YeP3d@;f2BF/8$8r5BrjU3blD+^o516I%+Jri[K\Q<S)tH;&lBiMC$PnW%D,tAeqk@'K!;Mg!V[h!g+G#()L-N7HOPClooJRjJ]FbW^lGt>D5gJkoN_41LMc-cFYi.cj-5B+^+QjUS]]3pB!2o%ML5Z!B)O1Z$%3]OrqX"$E,nBtb)J0dL%FWhsWLB3\jE\E0"MMS?$CN->IkHVoI-+HpLasG!u_U;Ni=pE)F!0&mSUQKP"QprC&l01e`7XCooB<,.[%%`\ZCnr6/5`YA(M5/fc9+cQgD$"giFTG'1ND(dCKK/!rpo'An'%lKn!7\ij!HBcj^#4J]dBF_lZg%F!_Q@!,Aj"J:MF>VHc&/GZb%L$m&FG-'+*%8e\FH$"`b)3#!!@gu*h\D!9_'e+i16bZa!!Gb-A,E"M'dtlu,9J(-kZ.;[IbbK\ecJ5%L]=6AFe$rJ265>N^LP-gs%EX4DA^cgID$",79&".S67a5$=-bI=)\KDgHYetg>3^^<fAP!Pq#bFI.i[A$/!]/V&k]MtA-_,fYo6aCUn'2JiX`.UQj'<XeN7(8X%<R[^ABF.Lk1CGZ'"a,f,`L2Vd9:h*^-4DFgcS#DJD]V,oQ%BEqKX_2iNWI=]E"Uq&7/SOMmq7`0"T1I>mgB>S>H[\hPMLpQN+[Qi%k+Oqn.?"O9@3ATK&7'B_3,kY+0Ho(L7`9F1\8@GQZd=[^ON.W=3#$U+55*j)d)Z^CJ`l\6K0nS,TrC\@&-jaTV0\NU4E)14V6`2/%E*33Z&Ae2O<2AM]hkROf.jTXf_^X24/&M:iB00soo9Lg!UD#.pMidei7YK`q,GOlA"W-r-l58[-pY+CO=JpSAMBj'gF;nC-5:/gO%$`TD.@P)1RRL!R4G"VfJMg!8bY08m2ZeTm;O.S'5k"(Fk;Itm\JOcbOrW$5)"=Q99NU1Tl-h=gp$$`896(H)2C-`tcC>]kM6#aba%6?*GZ'`k>E=Y2G+Ae'i/jGB`OG<\tWKXRi^h*2'@6$_Koi?*6k.S1[GY#tsPR@e"5K=b/H4c4V\(.A6mYiqjJ.j^pc9fn/2\e<r%%-Ge.JDrcI="TR2i_aOgKD<W*=WpiVY`q:cPa?48qaKI"1Uq4URCT/3uI6&:/*>[UTa'F?WSRb6&WJ/_C]%gugTh!/\0S+3,`;L"&%9&5%#Ss_eXPfCTNE?erW``U8gcL=#71B3BVas&!AQIp6TS</=s_O"g@b6m,K7#WWoOd\K6`,;V'+^o=M(($"HCih;ES]@&ZoC$s`%IZ?OX00&*NR(\Yr^;u`fg?&^Wq4_ni9V!PWk6pN7id@?Ms+GtX:R.<FEm.T[k,C(V[%7#-d2W=)Nh5nMKl!@G2FkZSWs[-N)X"&b%o2X._b3D*cG)lD\7o,_S9[D+ss88*k`eg73r`\%Xk?i_k5/4H&r-^B6IbX_gf:/,!p;VJI*sYqH"X\[3LfD;SY^M52(dNP\KNfp_%s$YY,8r!K0"IaKjV,<bR=1D0lXuf$_I+g?']RA)<V3')C.A*N%2Q:q\+i-+E96#Zcie$0hZ7ei$d2d$El2HqmEE#.k>UA;HaGn9N%O)(qJ&L[FoHqgD/V=-]W)(9k))Gg`g7naFN!YVblK'8,"S2\d@cA8T5"*\A+5u<,pm9<2'&5CGank3DT=-U=V:TBh($t6H.0fpV4%R9=dfbJJm/(1'j$Lj40?K(G!VCo+/Bc("tM0k4@%8gs$oLDECrf0rP`l%n;)1^n!QW,YWtIYAh,j#4\qO-[]ee2NV(fOZN73F&?k%Kk$NYW,.[85)Z,??;=m2Qba#D<mg-1riniH#m`p7QNRqB"U.9+B:?<JO-#ie.k'!0Bj)tHM6VRtWI.;VG0"gl(/(A%Ve]J*.HL%H%C6;;)ADSSG=_Wq-WXUMBRY1&=otm5<COE]+2bXA=;8\GY*=8/GR?T,>8JVKpMlcIJ9Q^4>$kJ77+$@*03(28;<6B<o2s2g1%^EoI%gb\l)92FQ4nOXQ-<Sc;=;j?PQdasW2a@ZYNeYm[El:KHF1=$D8Ts2X6-a#Dl:u/=::4W2ZXD0&%R7:e</s@8KaMYBiEtaEf3\'5\%1(*[h.E0b55rN2/$+F7E=Y*KRjif]LUue:R*-/E+6O&<,gJT8O#nr=c.`'8>9U3'nME+K;?B\137dq"c@U%MqKfL+CFA%q5k^iTI%66j%FP!K'tWB:?NDNk'bJ\RplW?tJS;VR#_l%8b-/-I0"5UHtC/U\H.RXco+1]SA;(s$t]:']"NDD88[oT4aYR%ju+Y+UJ8d7,UR%NMG6'(2rSrmZ81tn``kpT`T:-<(bDAS:f3$=$pD06Qe,3-/#8WN=9q<41X$'FJ#qX[3P#K`sp!e7,Qt_L*Es`]5f,&Hee5QBPK^*%J^s2hhD9(kDU.(DT/[c;5(9WLVk+M0`e-KGb'kI-ZVm2EO&9%8N@7fQOGLg0dHE$K'0NGH8;fjO+e'f1Rj+/tJ.UR.jr(.--F;&%%_SS>+,s$X52006IQ;fRu@7a_aSlA3A_12d+I.QPRC)=(9K7jRn%)hfF&TuT/,["gQ\tMnsl/Kmt3(&TP82N\T2Y5(NW"?^H<5tg,%6\1o)Q"8Nu7X5:]@"IZVq_#fYhs&GVaE$(_c/r^nQ'-k@[='K-a/6$d"J.!9NG#Sc0U+*EN(]rWMa<8cj$6Se+BMagbbD)2]RZ8)%-W"V,Ok--M4*96hb=@HpXVn[`\?8(5XaQu^_[[DW$6TNZmCY/<)NKGR*CmeR)[?#?Do53'2bS=eP/OP.aQO]!=o88H$D0#DG*"#N%\a\Bb4#S<sFtE(SjV^Eectcb^Q;f+h1d!q&9<^>Bo6=P%EEH;rr"W;Bn"CN.1t<6rMiSA=?6\bEO(psp8co2N0[gq;JH.Vb:BOV\%VBjjjPHKt-_a*S/M2(FIF_R.FkmgQ$rWR*jbp>q*&,!)eb%F:!."&])U_C*WEl.DoUOI3qMPSG83a$?sM7LfP\&L!#GYX+Q(kImH%I9(D%7j&QE>arn<iQaN)G;%#8VUh$OAUl$Y,MCYLL([C=V3+SuR%l!sE>!qj<!7Gqf_#;#O4)_]j1!GG9I09^n4iMgoY3:LpsYr`%2*K)>^:WIDMl:JY&i(+m%0_^uCVb_.DZ1_(QY1nQOu1?OG[_+N?<A?Or\s9r4(R+`eFgt-no`YS`PlP,@UdH9b2qQBfU;Vg*OQR7%C-#OkVWQT)5<t3@>u?"'W\j9rB<?hZH:DN&.)Wm,9D'tph%U5;.KYMsFn#NKhj$!,mSRscSq[Z^JfFe>3`K.HP]W^?J.uK/^"juh%YYiq3Ea_eL7B5AQd!a!:/QKBj%2J!!X\=>-ClM'+<OT&NOGn/nlXD.VL&W.S9VNQ\eS&R2S`p6@&4l('eD,E+O[+'jC@Gg%0RMSO%W6nF=04Z4O+T\FJ`^KnW3=k/U_/fXq&;3CI#DGAu*B?ejOCU1IQt:b).M]c98#;@TE_",iN0O4$Ldud"K?.?:AW)O!=+ChK*`\-l%<3H@,.ht9=iH?;Fj[I.,F=qi6o4jEr#MBfn>>BC1].+:\W`2bQ/j#;)TN!NXegKk*<OpXnNA"HZLa46S1NV[',;L.L62_$rOC7XS%[K$Um"7pk6DEb=f,u:88'@ARKZ]W%g/ROoX$0gV10k61q*6[F(oRqg_b:,5'?O([CTM-S89LdR!4C=!p(FkRU"o0);bMT)lG<D+4%qJ;lU$PB?56Ce4;N@lm*n>9;/7#$E=j%iVTdMjZ1mqM%q?#L*>+BVf$'S.K!6nMY<JnI6qeWF\n2i1>e*0chd4b8b1!,b^5oLKr/%"Vs'E6ZpR(SN2?C^uM\DW3RbPFmC3;K2.Zge\i,ocsF.dTNcKA9or;[pZug[qE9H2RW#*Q"4dP`.ZsR'GDeQ'SC-7Q,r3<kYS0#o%NDU3;m[o3-I?2oD:O<lok-E)4N@p>mT_iqK@2]MJd+X4b@>Niu:R5i;.Zbl316$9d,-lJP\0[JCV3^U5'?tUZ#k%o-ocCRN;5p]Z%Bc5%+*<7@/<_-aN63Tn4BR^XpqSob!+\R\2P-O3sD+OL*9`W\K,2Q[kgVCsX5bo=u]uLdh'+(IH912E:Aj\l97\R1"cP/`<f54`U%,@c]K-5L'7StNmgo-,eS6J0b0TT#=QatpFL$^Ga"RhQ:&5(RMk.Mc*J"2S;`oRgo<cojaL>lhRt";F8@fF:,k81Ng(PCmJ.8ssY.%bcn>[gaQX)>Yh6Veg;T0<4Ph!+\g_=Bht%hb*8e8V&`INpegTh"%s(fi]V`4.Auf@P`hg1<[LeMBBgC@RcLFH<@BVUjE.>gDFgdl%*^UluB-MDEcd3+HR(.f6o#1(k[$]d'bZp5BQ1`#B(e`7C\82d2TLCDINP+fla+W$s;-GfBL'/+^"'n#dU!XF\DAoP8X)5)>NhpmQ%?\[-Rc]S,f9DCQgeI5*<p$hBIcnt8V"7o;$@jm&^""43bOC:l.dTq:JP:-fn86"Tp7B(%omfH98q0[24)@kqXNK/W;P].+Ip0pp%%CP7pkN;r"f7>X#5<F*dOdUt>"*QD3/)l;9+>sTHmDCQ=VM<,N1T&n>N%_$:^P)8^p,C.A-$p4b!a9deAf=JRDeDc\%JP.0*O7!qq%NkO*h(@gm)^-.0TNJ=UoUb66,aS0lLJ*c\9P,-tOE0mP'"<+stOe\#0]sZ@6ar_h^g9>oF50BOa3V$./4:T]ahAqJ'_^CC(ErU0l%g^ts3:eVR)#Z=D@BGDhHrl<<X?s**2(oB9<1IFp1YmgT)ZG+#5jP5o]PI):6;)g%?(hJ9`jDEI^.8cGTnt]?T2?\9(kLcN?*T;T+%qFY$`&'%i6rY20kdPRE2988W&-)n5QlJuO]WIRr=9;F)*gJn)4GAYuoJU'gu+ik%O(re1<7%E?m%6Wbe4S4H]'9gFm%@2<)4>'#G%<@=#e@TWT!qjAH6'%t-J!No8*<d/p16BKO6W'P>TbeY%m&g[pK\%W!C0nD0Oj[*j5^4MYp2E(0Allu*Tb!%5djoLU"UaHUiU_TWI%c6Z<F/T!fb,D(pZ0)Vg[@u-KpbI#,hPRM)qMJAe2<]'N1qHo[#\9,f3M(_`N^"r,)Od.j[1:!fU,mcV3kifd_6[7iXH'Sp$]8>Wc%Y`4J='l\'LMO&nRHU%E]n[6q47")'4-N_Z)dNE-+"Z:QjPRQtL\04Y7.rq<l7rlE4NEn9qKcIGP%^@P8"-Me<W,0h^/pC!:I\6lj%3TE!KTV7`@DF;WZG"t.G"3k9OrbpMrm8ZrLQb>QY=3PUt9<g=B>VV'lFOV]cWJJ2&$sc=bBBV-[]+Fcj)_qq6Q(cYaiM>kXBWOL=%JX0FDJe(ZmmR^';DhuF7lGPD!_n*VC6pUjC8>(WpYVe_>0WG.BTEFRh"9F)f)SnJ%QBYF?J2mZc3&3SSaWTakh-Af2<l$6&Q/]^r%0ht\g%%M0BfOBf0$&Gu]_[=W2L,@-PEQ%0bJF!c?C7q`p<(+0R:gdWpc$+S6(R'e(e&=X1(3gmr2n@?XU/;kH8]?TBB=6siLciL9%.OHL8(bm$E9R(_9'8:0I?suZ&SOTU]Q8"(X'8;];ndno;(eD"M_m_\L9Ot`DNhTI;-$EfY!'=GI'e!!h=E"jWJ;4g!dU,Ku"Psk!%PgZ)`^pkkNgcE#uQWu*.gIL=\@8_JAMa1HeB)`D0nJ.+#TM"1m&soS<6l\'_a@+!I.u!$r9I.&C&HU+Q5OAa?J<3ofG""6'fH!C(%i$?_r87X<F?N$<`'977Rf_*0;&<&QA0[0dl1C&T9KDPQaRR#@n<U2rY\V`^a'1\4bA>p]p\BZr8/7D,RYrYlfT0^,Rff?'q-Ll#/%?pk_;%)#88%r4&b>j6,5p]:OZa?@<RKL&.NE<t<OBZX:!>%WAtGsWi[IV458jW8We0\R\dP"j^T^,I'\oTdc'!IU-l[*:!j$>HYo%fFQaH6%HS=DICKFpdeN"+;#?_Pq'TO+Og1?1U8If<)AOGih1ZUEHPWS7?,jiLGQoq1TJi#a;HLF]^-<S[q&1&@u$[FGh2-9Z0Z(V%:GW2@cT,=s/G3"3`622YTub.!ngiH";iuhkh1C?5&2TaLNCLC&Z`c*O%X,(Ai#QcCqC&lkI+&Q8@??nmI2q$2_,AG)<Lu[*O<WIm%7PM&djpp=Qq8P0>8o578dhbkG&:^QnBMdrR'8fOt+(`bY'IgjnKVsp:J4uf,2:-ZtOBhf)gp#.2B67N@$r0mF)keS%i][9cTMiLs%;NWEr-3H2G\Qeat:?Z+XE!V1mK`ho"ms3]Mk8h5l;7TXDAlFD&3oHI1?3XOf!A\Xj-C%u9G*.Z\&@S::[Y!s%=9b)nZ9F'8B#m9'%!:BJH90)LUVp""MS3liIFn]abQ6aLn?dSi"0*LVH;L-SZlcF%dJ:K@j^s[es8K_2Hft\#1:_GAZ]k^oJc>AabOi(nTDr#E5G#`*C%7RfkK=OF'3b<T1P/ksc;Lb#CC"%Iq?$LH=,r^N]0pc1F@%#?-0^(9(Eq9:i`(]9^JC^\KUILShD1,[N>Xes+YUXfUT_FX5_Jseb[%Ukjs:4iR4,6f6ebckfVn"R_:F&YK.?$2ud))e?b(J)q&>=@i>/j<6S;KWu+../g=jrTI>?qsuGhJ/oPugp7>aJ#V$BdN7Gi>(siR%DBYlHIeFt2_RlI5?p+gh4+QlJnKY:,4cFdS4[^PZa@/SV/CFc!]PbiC!qJF7X?[dO\]>[,Ge1E(>GZg78ts_X#!S>>AAB[XJUaZ4%O2>a(4Q8ZZ@8dcJMn9=!"<)Q&MI?3YO\:?=-fWt`DBS?sD6#7ODN2M@=9I<ekjgBnN\Rl7m?;qqAAVu,';+he#se_,4(=AS04DAF%[j(MXU)9JWCSRY8@LLP5b&#l@<&]WP&$it"*c/e\^9\r4>Q]qn+ag+j*Kocb+rBG5<d:"%Ar9jE*&h]d,l]%,EqQ!iJ+gf1$Lq!P%Ym\&t;O?^bf!c4,m&Ij,#S9C:JcLT>@]tFW#;kO5*K_uUd739r0YAXNW6CI$mn5U6iaGef;(usG#Ro"KUod_c:.%C@OnBN]/<>c2%#+K_=klcqBc=*=i=H(0sG&[%`km$lKYY^B0B)K*,nXZ1MC;(_hngq<L]![]>%dG![l4G;a(-J+OfeG8c6POg*qpo98IJ6+dXKCr0%`.$?=cD\%C'O^TH,533%-lN#aLjE`ocRjUa-P]\HW5GE3&X@]O$V-pZiT;kffk'Nd[^o@dY9sahU_Dl1$J2:_7:^*%e0*Y'^!)(/%LK^]PfbV)^E'e8TVKT'Dc0Qq8.ECTSG,+iN"t[)<HXWs3Fk%p`3dj-F<.gYtMY"+)5ErScKGK=_X1!ns=rnDC79.B?G2m?_1Z1ud%\!M<JbA]YRFD$!)e]YiP:>"b1!ai2_onm$^'Jk9;C/Mn*YrNQKQI^sC]$%O0X_s:VI'DGfE<5KI'L*bF6D)a3:N[jInjN5SlTUA*%<YhqF+Pd+;!P/<k1];Q?QC:e_)bUd5&LS1a9#V_A=clCcT@E%^">GgLs.ZYW<G1R`bSU.Jkq!8c?:0`n/-VNrI^X%F&;Vd%B<i<W%,&\IW7F:^$X)sBJ2O@"&-@$-&Tlf?<,:6MBl<T.'1:Vm[e0;1]e;Re]@\dQ#CM3T4f6Wf_'7Emc!TBnB7G]W!0=8k>P8f)oA4klD%8UDtJ^!EZ_*tn2SjT&SC8DTK4/?\5)QYg$=e]1j*6D,S(<"rKN=@'tl$+;%@0F[6^^+J#?7]Nci(M.?#6F/ACcEr+R24Zr4m%23d%N\1Gg35ZT8.WA#/c#$ZT\UjqTn8U8JC)31Am\i,9c^#krWY=)Kd`\%28/Nd.5lrOmh=!<0oV+D,)N#B:eRI@&Rro?nZeKCsb4X6e%^Tch1ZHimI!"`'7G#34f9Z)S]g.p;OH46_)poLZAA_"U$=15c)$%)c3Y@5Q&2p3ZG7^9G[BWbd*8i4d%!nP6pRT8[ECT[m5+PK2m%5JBu)$OiC0gb9YR.6LN&Q:%VeS?UCR0^M_W.W-l(+jRV,AVmt5GFkaaDdjr/j.)/W]5^Q>rHpG[Fql!c4jd>G:E=OI!)Y0`E>52T%)oWjpQA**b'=pA>C2RU>$<D+jCpt8rLf0?rDYR^3Z>7W==9(uc.1oN]2FAeJ/As2S'@+pWYbG''HfbC,::.i0014uiTM:!WTF"g^%1;T4#VQYVg\H\g0.G04IFI\TkP#'@`Y`Aj]D%=H,eaa%$kAIAa7YttlVB&snNaoegr'fJ<Y.&)U;N7\!ULC':.*og#kGih%&kJU!%0;;6-Qq5&e,Q&1ZQrR!9ZtCp[.T+m<fLr9;/:gg6RJ=1))>!`i9dooe-"'-'.em)ub)HtmV%ktH'a,kG]uc(:m-WliRiQjc_fjT1%h2"NYCRqa;5WBSIYtML3Or5aYKI;7A7&7MedYmDrO$G=eNdEs%<uWr])#/eO_0:ilJsCRP763=Xme!:+cG;)Fjip`SN9k!+jujLS%KFQ+n]d6?C]19.T4Ui.Yi<d+i5tG/4;!&)#fTbb@kFP(^4Au+l_Zmt>Eu;MEA6<7qUnpHH^\)6<OrK,:&_<T?0P=O+$RjAr_1]Q\%;su[:Sif,gMlL-f__5U6!5;<e$MaHj-s,0s?*(Te:n"\m1*=TG<!d*Mnqbs5JB;SgBe#F'L'!"TA%$T`QEdrQ!:,oXjbOFHY'tOm%et[eKA&srV'igrRl!3nu!a\ZA2Uj06c<_aBe?ZE=AaE[@,1tqH)ARHp?NX6I!%XO`GKX6D%Ya$=M$@.l8Bin1YNTc6#[m=7QCV.f%c#0X$>"#_QDe<)%/a8k_oq#pD8Qf^LE'!9u/unY(]U9B<OEMrcW`-fuTj7#$?TGIZGe7,ZiK^K+hAG#q^!TXV&ark*bsCX[r5>kN%LQYG]pt6[0rqmf_b"Gc.Np/(SLl_W^alF>OQ#g^Tn(l3]gqk=fH7k6@Ts^D[U9#-?3X&.X-"AoLcaMcV;L=hm0!86J3ie*JMS*8c%jHkUam6XaFVm:+eEA;;5?rg]amQI=I7%%2%\%GBKZS,&V<We7V-lX\'c'lAY9I&mC3LY<O]m]"3V>/"R"CR[9rjGIT`4L$E(gJrf%3-#''<`K7:`R=c39VBi#,VfS/oV%=B4fV%:P,4mAMK2gL0eC:BdM$S"cd'r,.uT*T"i+eYhRctceC?aA=cD#b.k4I!$DZa2TU%39%n,#aM*U+n$EWf,?!Ds1bRF.(GCc[=Z(I)Y@fslCGFVXu]A:5a@FP"V"HMZ98QFsaDj%Hj:B"XOD'g?d]rKc7eNmj07iJd8k7n>2F%jD'MU4aj-ueF_Kc98/p3B&Mnue[ULXUTgcH_cDh'i9$mDS=7u3^/9fIRW\(C`/LThE8*%InOZU5-_R=-*#5Z%aOOIG$k`4Z<Y]2/%87A^OJ<MLH4glfn-2/e\Xd&P#(SpEK]I"%Efkn47`6NsTHU@?-C29s[4<kIZ\TX"X$>[:o3tSZj!Z+Li_5cL^k+YK&_PRVM(>fpL%%W]N7_HJ)c9^<JV"mrt5^K8jH-R]ihfMB)!/"&2Ng1RF?8aqDLGM/-"XYa'D*W,2S/EW,&@RH7DcorZl?C?LV@fRDoPji&#QFsgY%hMS[aRH?;=%XK@!9</G'KYbtd*(,g[OV)FFM*WKP;[:G#0UGM#-eIU3a*fnY-U:i[\J.LJ<4XES$p.X?AA050\aLQ5UEPAK-XS]$%?qV/dad9jfm'e,81dV3!N7ggSB?_3K&VP@-QpLtNEG^9Wkq`Xlr9DG4gARKB"$e?'OIklc@$9;`3W,1IoIg'52=leo>;*`Qr1*(8%d60\,GnsD8!EkpT0SE*_39D_]K1R'/c0flOEWV!oht,O5=9iRoISQj6Mf=L%TNu;E53haGk8C77Z2NL2'qEdq;f3$of$f$e8:jl#%X8+0oC<k;O+?mW"6%-!W_'6e#^"m@T$VUe`pIk&N>D9h;d7<b_k'Of@N$qmFa!k3\IeQHhj6!bY#,AF?S=?E6fO]aO4O8,P)^j>4%6F:GsepR!l01C3JFl0NAq^?Lb'P$%PH@GD"'RfuMil1?OSmO^3lhsoa)^BB?fDtI/?\HK8TnNE4T(O+d.gGbBo=1O1$EhLcDB;m3%",)>Ig-RY>p>`phQL8VE=C4-?*M+tj)uKZi?2-1>5YnZCm0H[IQ.BOBIbFgl_/9n,5ni&XRNF<G#D+<k)>Cpu?Jsauc&Ts])N#+L%B$mfUgH<[gf?AOe\ea%/^?)21,ORa&rS!ho%=e?+%FX?_olb[)q>9Frp4S]XorZiJL_S#P,/hA0K?r=`+btO6lOV=FHjd^c&0:3:%>9Q7arUhhX+(`qD"Q!"9Asm=(`PG&)J@JrgjM;EroTCELLI6aM]jCTi5)sAD2[a>+$,=')aB%KKI.dd4;qI;:.-?QVWmT`:09$G;%U[ss*McD`X#Zf),7bIi3Ol^#*[=HbZ2KQB)PKm7L`ahq:;?rq?"7TID.1lQ=+p:Am.&]-$_RPFZ@M]WLW;)7:J=6^1E"2(/_:%+a%&-)dmQb8s9h_t#n<<U29gd#O#L@tN24T,RgaSlTlr:N#Kr/]IU>kSidnpg7h^\d,84o]^DQbWC9hgP+BfDi$Er:b^=jfa.)ir?M!%&,WmZG"M`3_f)Zdr'Mjo1/M@(d+C`t8JPcNRu+.5(')D:M"RlZ)/r_amPI>*9Fp'DKXsPfCkoc+!QPT+CkUmS7MIPTB]q`#Y$5/#%c?GrV7Eg&XFX,'@f=DeTb?R[2CXb'o_)S7>/6u+2&[D*[N>W'-"7urMA98N98@3ma5uC(l:&??;0+%_&@BU.f]&qM*hC>be9X42O%#TkObcF.qdCM's44S]#R#biYAFL,KjB9WC$bdg1g=n$1c>;4d=,Ff:n&na0i[MIQ2!g)-LN.EOYjMHh6,;_go!tW.fB)[,m1@oKF%'\T$:%$\oXPXIfs(17E0oNk8&5YiDE\mZSZ>8oVj69CW<8ce*DBm$Y<'+]l:&2Q>-l"a.Z^^QpX^p-0:?IH`2>2JQ%k6F'D]/d.q%E8<1a\>[n88GWF*l6@1W<\9]mE*G4cobqfH6+/D2%O-YEc=&GQC=LU3^eu>TVjceK?5q3:67BJb`'SJWpn^t6:Sh,iCDHn^Wn)3c%e,l(p*GfWB$Pm-s['Qf\)7%HQ#_5[9l$Fet1!!-eXla[[]5\jR:_.9?ie\lW+L8=6G<8WGc50FG(f8T)p2g!3(0W29J$@.Z9-)'[%@12V?!(!@+:akP"lmn!6)m#uN<VGBD'f:(6Jq[3W$"+uLT!h2U!8/iI!Xf,V0mSt"I@s6r:oE3qkN>@!r(rl3aA\8WMXfDG",r$a%.T$+\mV@aJc01:33/`EA[bE\U5#eD0_9M<c81JQr3$L,575g)@,(L%_)0VX++H0JP7#seIWU+4OYHPXp2JfqeKa8/*C>A-"Go`S"%3[tjZ*GcEd!<W2J:@JaW^744le%IYSj/o90+gDK%dWSEIEP1u^j]RV1T&k>!o:_fQaIdn=ofi#.j[G5s?F5+In^?$<5HXF4m)=q8%Y0@(#n<!hK^s<?#%PUNU!"18!nS+IT=VN"n&M1+o9WYH;Y4`XhaGqL@'cGG-c#5E5'EQQGe4sPYcS"L8O8)?/CG-EL_qc:@E?U+k%ajm^nAGmbDkV0YgYN?B"D8lL-^gQ(s3_,?S,P<=+:!&bl)WLf#Uaq<3<[oG5!p,1bH&jI2[K.(4B)iIo+^Q+</nm+S8tO!J(+on(%1;ONI1V?-.Sfq7WJf-,dJF"952c*Toj^da_7IBM#D*bsj,1iVRi18e'DhNJ$QQ-MYkb+>8I%rY4%f93k$F'tZK(.c0qppdU2t4e[%Pf`U1$Vh9(kp@o6,%8Kn:#RB=!2/u#-J%23`WeO87@,;1MZCZ5Xm!_D-El8k7720]*%^eg!o-H81<G_Io<"r>kl/8IBN["tRe55O%3t.H+)d,(Y4_FtE77"@:7mKlRnubPPc;qEj[WsI8aTi.."*f-3.u:gLdK/TJ=B#m9NCL)EU#gI2,h8Co-'r2ugXRZLP*hQ*>I4RP%L<nSS*^CCOl,G?lQiT"[FV%if:5O_5(Y,6S^PB^nSCf,_pBg=JS2O>4Eaccq[&,^k"X`4AO25$4U#fkj&Q5QL=C^GmC>&qh0rF0r%M#_Db.*881&Wh*Aq`9/C<:9kcSl#K<?6KRF7.\dY5`i1.PUkTCC!a\BF#c8OiO_=h:9oTCjD[5#A./pqO)6\Y?[cS-eK:au9=b9n%%+1AkI!o:8Nq!ij)i-$2*BZt#!=Fc1K'o)/11W!L08JPnrH4:c:YK<O'3aq.CGX/[oC5q3P5l:4U*=()_O?sT:r'6F(@^AiX'7sY%6ALn$itEns;A.Vu-MORmHpbIZ9.8"N#N8(R4;\Fn?H[n7UEG&3:F!K-B*`[b9T.M:/a1$q1g:g'g9Y*--:]&q&?_JR/MpM)[88@U%R)QLFBTA`E&.+O(iNgE1<$O_;4;LWWlnWJAXIe#=UiG]%0bEPIBbn2;r:g^t#s_J%o$&im6UmS[@rE$:Jd4m)oO^?3*Ed#0ck$gY%fEI6/284G<S7=J=L2]*-gYppGD?*tt?PisV[Lgi)YJa=S944gn@j0"%\2+Eq_<^#6(Ea;@@Ct)d$qn)R!f(mW:+Wa=NNU12_lc"G%mSuP8jX,=Io*cj&ojA=0(XOr9JaVpkfHe=%g/l)T=pYmncjMC=Y9?MF5EmLAicWjB\`N=A_*MnZr!u7$1n]At\jF/hC%;qt32N'm%K`38f9M@RM%_VL'%+!Fl5_MB`]+7Kq=L&.m\DA7b[jkSc*]7alq]M0XN>Fd2.g<19p"plBgpK4\'S\-@L(XO6*[#E7@NWDO(Y*(!%O=Qn3<ZNndJ_C3t/IuVicR!>oESX0*b)G2sfo.d$SNr!(kMR11E`@S4Z]*)u_a@eL3HT(tN<#r;0E;ue5b<^`m7%g3a_Nq\Ir)ZB%!F&MiK^<cd2JQ%;6]eP]*o\13d*EJiC'[E,2(tG(5+V2(bK/`,`Xt;e'K,a9#<[/L`E#&7iYo?2+!jVIei,f$c,@T0MM*QUkn_tD%'R(I>I>!5?20>5WEc"bpa-(>+[+;eVD%rhiJN?f,;]B\rfNC$3Ct,kjX&UJk_4ij?!PKJMibOur1:?`+"_[]NV6,?%/JV\[$+(*5%'B:]P.>qi)ft/EMC`Ifh(Q&.2YYJ@[/FP0p_*kEjgb]Gg'J]s3_5.3J@b'Q,BX^]u-V'bs1:c8!.If\.Ek7QE.:/8ojTK"k.\4\X%MD3KU-2h<mQ$SoW"9O0F$QW4]C4[C^-rmsmhnW?%of_iVAs*[ds&ABZQ'ADH/Er^0kh5*@C.fpie8qTqS$<oM8go!Y7aH]P(ITlW%?knL11UJnkkSlA9#]*E9]*h=Kq!R?:(E8r([b^>Bp%SOhH>L8IVEg^=Tbku="3:EC;,D,CH`Ksa8;6*aJIWua0Pt[@QYFO(pi`8\%/q%i4'T$jQ-okn[5=:q/2(hpS<6Y1ue*D&MH:*rB2egOe*bcE=1r/mt%^[0;$+\cF<C`$i"eq7C!,E;KhM<`.ha!+K2-@a<0tWrp%0J8Be/a1.qCDR7V@K?,lqh6OdHt<q5b&J=kGX.T/Y(WepO;-8V+hB3o#!e/jg464LKJoip5o.9=;^j=BR$^p1[a(Y(#;-PC?(-T"%]n]B\k)17S4/F,-?]QnM$j0Lii<PMQoe!jnbIgJ9NsDq+h&Bu9\c)`dd1=3b_:UkP>MkpYm13IVSE6M9%^g'ONnK!7:4"/^QGQH;%0@W;*oKY6e*e>JebPH!\=662O._)YI2<uk%RNF6b;+>_GBV][cJR\tt"HkNG<tZH5S$'@EJR$/dC+DIaLQLn)Sl0^&<Ha8PEp9o^%h=l'i1n6n4?Y0"dED6$5LT^Kt1T=I)C`WR1+l3=JE9j]QljXKiFct0qcXZ,Kq[F(er\Rl(G]##,@5./[majRGCh5!8E5OOFpT2Vd%i.8UWH(Eg\rTsOGIC'8-^Ds2$qh[T1kZ!=*'"2;+NbZ4g8=Cge6,^7S56fF<+sr*H$h4Cd%0Vr8i"S:nYR2\H86Rca9EDT((mkI-%"DJDe[er]"q<5=oGlATQX#c<OU6oelf9m=1'so0.f3@j;;nZ$_ib2Z$4Jo+9#0m\:=LTL/K@E!=Bc*:DE!)h(o$[hT@er5n<U#qq%Zm#<'1l7a%JpZ=#o;tYkU?D^KlZp'I&m[st\Zg4>Lo_(T]TDD][$q?d6A'EKN=`./-o*S$A#o>k<B$^CJ@b1&d2`'+!,:u(Pi5!%%OEmjED%U)"MX0.M$(QN:@"#0#8es+4dmbR[E[1M;+CQpWN@3m^aArTY'dZ)3f'8^B1Qr0/!@1BKS7FceBF)I(*0DdiW)&1^a`SkU%gcbT[B``u-M"d-`g`H%nWh!Pbs#*k]h/RgX42["gQP1053mg!@`!dB:e4^V4%XteW**Tb6E"%MOPj9ib_X&WRZStP(ou$M]*D<',%BYj<UL%St8V,=5ij8c.l26\u)<0SOG5h<>gYIEab18B2!RYM?Z;TqbMcPP^QbBOG.Fm-Y=fLFQr.k=lQeLB3.ZdH+Nj/<SoG"UC`%5P`+Mr7F4"o;7,0EFY,ZOC`GLk"7F[rcK\R#).\3\g]29;CDq;\o,iiH3h+W]P89/fR]RjUg'BCL$R2TM:S\KI<0?Bq(b_eZ.bVL%(]4on_)f8\NoX*pTH?Wa[[qA+iYYDT8#d6[)W88Ya?C.QR,BFdk4B4g>1ON/IQrFlQ4+D/]N"uQD%qHVC#//JRDY%fB2YuiV$osN%K]gur-=9IN/!0#Za_]oA74Z!-[NT,&ZEjegnsuQ=JuPd((j*3odY9_*n/c3jca$MO6BI&+0`_7LV/:16_EFtX?Z'e?>!DVLG4.m,%V-mthU0_jEF%*Z:O;#/&d*"LUpC-W!Np-EaTk+3eHqrqo3YutJK(UKF6j?MFHX<F[)cjEn:@\[OmT*Qp9+T*%:4g&kP#/2.Z.hs?%"3rY*e\FZ.LKF3g_Nh3)^6>[$+DTa0HthGZEI+R,-;!/,;89Shnnp^`O(o5FlY=IDs6Nr0+HX)o7-00T5R!GhDVC<:La'X]D<L*B%+::s^q$IbYK2H?E7HV0r-n<]J:8JKpdF&@TMM))hbD9UhaWM#W<4aLEg^#6kZsnXkqs;_Si.*0/YkG;sXS^9K60H&m6\"$bQ28nq%jLQp#h%)N#fStWrV<_CB)d;uK2jgKjm<e-t"_!'#L7P9+bOO:g4\n&e$M)OM^%(R=Q`'"Y4A'#^]&.T5J77osIH+A;4![LeD<,i[%/#[[0e6FcK7<L\W,sbFo8WndtVq28^OTn;R1aj5uLN85%KSO^fenNb;Y+]F^`RY%2arBZf?`UCI>dEY'L?1G-b[uZ3D@e^('4l/]%2Jc!6SDp)_`gC<+V]VSKBE3]*i>0gr?2+sk1WO"H^_XnqA^pA^D5T\4>_F%*[aUTV%b&7rRARO^U%(,%/>h[@(V?mZp^(aiVA+8N%;_%+?Z6ojcK9Ct<XCajlXM$c"e_77>cOP"2Me9G1iM>#+8:;2slLHRGiY_%p;e^VgiG-*r>[_PY,K!-9;DIYEN[;ALrJW.+AE\(P%Z$,]Sb50N;G/'*6>t7t)WmlGi-Tl:S?roNmdtnEp-Vf"#@kG>XKQ"C27&3,3;>T5&j:+2;h+>VO4J"Za<t.&Lq,5.[2*0'KoO!m/%@ZiT[ZYMW4;/:cOr=hQXg]ds^iT[s!2,c(0""@#*]@iZ,cnCsEdWKKAjEYHs=;q:n'fu$SE`3bbSSqcP59b@VP_W8F$/C%_)TH+=%WsnMZKfbJ^=qn))k09%O6Cb:e;45<,P(b)bJ4cO^\TXr5h;Qkb%ZWO>^e%&n$h8U=U*YM(@1QT`*Z_H&@%CiJmRRTb8nWeai`_g"%8K:lg:LeO1;)H;K:]cG-eAso)::>(EdVW<g@^AX*`8L+/3\BX<)df%f#r,bi.?9(jCHdfRE#FZK<1kOCqT>LA;\qs]4"03Ha(`^R%mgX+b0Qa?@JN>6cKuY'N4ELVL0k*+B$&>d<GDbXbC0uSApec8X,jDR^>q%lR+%6r*@<&/$:=RJ)IYkG4.Y1CjrUN8*(Ak$r*Hs^E%<32E)\O"e`?(-FDYWG*G"_M)ED]uWhpugF=nkjEAZT_Rcp76UBC9LgP@q8DHKu&1>N6B'rj`[6HI":!.D#Y6>7;0j(MeteH@J-X;%./'sU=$b@OX;8uRF2ps6@J-(?-b=s^IUfk$^ZGAZkpCO"9E0r:\F4[L4Q9WNi`E%)G)*A:,!,Cml`/)8O#Yl#J98DhUXK95,L</5%X\r#c>PX='Vg+inXf6.\/@YIfnWYNQ=a.99HnF&)7.7$4\r\&*FaT`hnjI)%`EOjA06OGL1,2nLiG;C%X?<q_gqMGg:U0$NBl8tV%hnQA#dqcQ-l9d/^LFJ[:jK3S`=:S&^+Q)EOkft_=J-fYWUY]]@n>=["k&iJ0Y6h%b6Zm<#6r1IUYsJa_X2d/ZQIjY1;(LlceJWX_%E?DSSDDMgm^/(n3,"LbYc3S7gRei5c[*I(S1sp$CZ?JlOga*aOMLFTgFgdgi8WOSUMj6)ZH:Rp;9h/cjK(RKTZVl[Wk(hC"DE+g^%882dQaO1VcS!uWaM]nF(,`]XqKU(asj*:jN9@!c?X7YAq_YQTXZ:O2j0]9n_7tJuh*gD]2@,b6l*e@\Mrq44JY:76%m!4DU"><mn%UGd5-6:TT%6Ir6\dXlZ.X=Rlc:*GGj1.]0g,0=Cu'?n5;0_T&s1^Z9P6s`]bF<<*<&"S;QVEc9,K$Lhs?s6`8[SLj>8dP9m5RHoW%V=%UG0tSi=JK^]6SicBdik*'T2\0H$:?i<$Bh6mAYZpAu!"%[T'r\;5YuV<l!]`gN>bdQQ_G4OjIWAfBFfAUtcM$]QI4ID/4ak[u%F"$or/fBe.k3j4*q&B8%@qrODWN5kbJh/l(_N7+SETlDdV;;m?BCtG)^2p"fPij/j&J?F\W#bUjYm%Ji@bS:&Yl[[Icg(iD.m03%%'H'e&A_$`Y$ljDlpt+Z^_`F2#+`k^aOGtHlAqE$5)P3Q^('-_oB+![4qb'&u32qE1*#]>'esBS"30B0bbl@@Qh(ap52Oq_rEH752%RIco*_%kuY6Gfn;[K0]JEKS^Jq@eP+c1NEYGV]PcginoKd@kbr[/iH43df&N/m.GF1CtpAemu=a,3mn_LUN[=F$ie,ee(Jj&C0Z(%1k_5Y)$unZg$h^`*c$)10bgF3<=D\"J?js5C*<'O;c:*"b1Y&H]RN,Q!GRq2R5UTE5.`jo'`1uX==Lg>ejp&(\3nNNf&Y19DSkSY%7Mah7pt7a4)\.N;pWil8qpJ`Sd`miD7A&;pWoE+?^1Uts53%$\qgr9Ro7:4XHlkMA'FXu(W&?ap(QdSA48I9opIDL]el44u(gWk7%Wab6`>S0LbUQ!>E(S@`pUh,M7Ng;PF7+]>;<]!bZ,jPpk'a#WUfi#t4MkW3[ZUIt`)W6oAfu'\T/4pjV<Z1nM(i3(=U5Lc=I7M2-%7$d=I19ENpnp5"uWC;j=RNS^t&NJDDm!qBYc!_mk6;$Gcd:em+b^7r/Y*(dUS2s/t(AA1X=-kWOFXmlNV^6(l_*\b2`/J5J,t\>T%;4Yej&iAbb9@TF*n:X^XXAS:m<CRQ:8ua!HJJ+VM9ugX*8dq+5;rgpc8qYb2<6ZS2Krn--]dlB&U"S-J#_Qg_K\fBZ<ej4J7^>?>%krEuIQY#O8N:JA3lEL!_!ilki%3lfAFB)!d2(E7@-^,qLNf5Qb-be/Cr>5[k&T*)tf'IX#&.*gFMk#rI-71N%F1PBQV3m3YcDg"-%?^J`$q?.ig<1f$-)MW):9>;;oSK@5>[q!'-VCJmAOC1qAb1Qud.4KqQE!@#mJb-[^9<_KCA^r+Ab5J4=Q@i$9%Sd6r$r5>%&>2DR%`_eIFF$(X#m[FZ36QEH\.AJ1,Fm)b0-:[)s\rq$Ol5]b1C^P$&c]-ofl.m^=)**%gI%`m>>?]p6OoI\/bk<6QgmlXVW1msn_dY2=%&lDObL<gd/F:dB6P0fG7PgFN@#iU["R):N_)JZelf9IbV\jI@Em]7f2ba?s"l2$A%Jr)[3%mX*Q3,2o7**FaqQJGNQR%'A%g]GNi%@H-kHD\::qPI-4UM1+D^YrOeE.\>YAl3AX2:79[b+g1oMPC4\%M@A;T<<kmjg/02iW)sfC^Fb;B)?sV7F9ONW#3($&VOA4Y@%3ne%-n0gcVA9B?<r(+>DRLsm%.@9k(pSN0<@"^q?(.Mipk`<2bs*#PAVO];s.2R_N(#>ec(iD^)np('>\C49SR`?srFkCoJi@t@:u7CS%.HBm7[)6"_]s(V//4gn'&eS'oe5R6hdbXK>GrM"lZcP]S$7fQNBd#>S;F#%p)>aCD>OPUC,S<paQm;Z%07/I3_qI&LW$a)2CT"4\%'m#6B7.U9tbq2iKC@IG=;"Y_f.W1"nfNpu40LqI$0l&%US'Fh%2M]oFLo'Fo/E\*:2)9(A*tVjEoagob(*8_!1#VKFeOVqRm>:+/%6OC2Ai"-V\&0'B'0'#p#eg!DU@d.0hg*@q[Gd+H0ZQ=muFpOSZOWCNgEn6n^&Mp,6au8mUYM0ec!_amK'OiOYiTo2+YS4Bq86O\.%2?jg7mPnBsl:aU1,MF@S.9dh.-n;i@DJ_I6\Taq/gr:+.cJgP:*r8%]!e%-Yr79RXg"9AX+c]7a9X#s6.^Dp[2%g--N_1rp]i!Og%X0Yo[DA*o:"Oe3-5@G7_:*cIOhO.ss#tl+H$KL;mRd)H$OT0F.)c[3)h&\;A.8*,u%6=*ugC9p9Qoc%q%CLob6ir<GNl1.AGUoRI%]o8l1-(ll%mu5;JX>O</4/@ekJY-ta6>W=1["tY:TeE)`]0So.$Ra5[<,_;81,306kkm2<\?VQ_W?ZmGQkk"WWkLF%q%"d3GZ,=T%JD,a3*HrVmOCOAH)K4@E8RegBNVl?r1$M>d,JF1k&<BA\/o,/>Db\ST^OaZ69fn(a0glY.W5(/7U-e+2+p*F?lSBI303f1+b]]6e%4TgAHBh:qA&D8c")Sr'/(D0]Yll3ZTd:YrEL94fh#LIk1mIXiqm?c-N)Q7Qr%D8&KhX]S&:ee>`peB2'M-`na?2a3!'Ua>(r1Q+N%;hbZ94IZWZ(S[JHZHql:;ctJi$P2irf])>VHR\N<Y?RWQW,([78sI(K6%M5^bGV3CSSmoJHbSqD/+V:5IIFp**kVuC<dai^ikZ!6%E;j/b]WMINnND]t&8QkfoWOMcn"62nnA'KUYaT;o8f%f+L-uQ<giZq+,-2eiC5':q[GO.2G!(`W)XOS-B6H?X-`,53<=If+OUPmN%l41l\qn-HUi?`MBGjXi73rgnLM8T;eqL0huDkq45G$b-KKK\ms2Hu@c2R0*WU35d46_RiWWeS"\XPR24Kd95S#Pn,lR_$JX%+dQ_%gNB^PPP*ej*14=C)l5dAel1'hV<)i2kM;dWb2;ii+m;/^fm,MYI3`;_L@7k]A'U)Q@C%..Y8iuM<'B^J`Ar<)Mq.FP95e,Km`W(%%r^DU-.I/;K5&N04]=7R8)gRe@/M1aq$;jj$mr$V@6$W"(B/cP&r1$rsXnTQMI-#Ps-6'.#Jm,SM?S"jUFal=u#P2i?c[,2!A2&2@%jg%?#rI05j[Ite9HV9-c6ajE")f*UirKJ%B2\'m&Z\P\'[lV!/rdMWM55fI0J<-#PG90AU&5rLibAQCHHR4*M6m"#Ds7o/eTL\I(%2eA=V8eJthP!hZ+4W?:&?HX[irjb^pV'&%Oh5DCU^gjDe,F)Pmig,")=$#Ts/NiO,?iSsjdIW!_L%cO\[p0kj532ZmJ,1a\o>B$&%rg)I=ZiBQ&^A=>6qMUF7iT%\brq0?Bn[ElFmD&\rkBoPjg["_%O"YtSr/4,_lQ8d2pkQGGfW.&KQNg4GJDP]%[ql-3o[BL5+<0g5%V!@Mj8)QCB0mq1&!<\ebq83U)7,8e$$39BY!&"13p+g)E7a_`NM?cZ_gCG>@VGN)iI!:Vu2T5DSWqfbRV<mf=Z9QOh08k[*5p1af%r$#Ge*f!Y+]>#5g:G5Igm<;'=IZSWB3lS<EB/$mO7#^$UIm'V6k>HJK,q0f"-J"Q03L2Ps4pU0]9>:]D)/RKLIP*0c)4`$P:#0+o%'C:fLJ*pqo*f!%g%I*:b'*Z9"6[jc#jlhX1ZKk/<frC`/&>90DIE,kV3jRX=co.OW&qBD4p%"7sm8i#[-B_##Etj<2n(9j]:E6Sm%[9Ef;$$=9keC\jBm.sH?8$K+^TRjh_YfdkVgn9<30d'/bKQ9pT9#eS(Gl\_lFFa@$(C6<,p^L@._C'8q>kg1'OT6Ig/C]#QZ74ce%I^B_^K5%ol]A#(J%pE'G.I9ngb`Ee++DUNGq`7&cI-bUD`ESp$FWZ2Oe&1dg:N;#;_ENI^mUTf1"E[]*h;')q#0u=Xc3X+4H)IL2%+6r9dL/V#\6oJ*4)7qHmIV61u!jY0.\"$d/^I?Ub:A#/2oGoullLi!&+,OmQCs6;Q-,cEXe1d!">Wf8$EY_OWU4uucU#<b+gsK19%F^&ZV^6%![AF(C))<Q;uh$s'NRan/TU2ZakSkdcSSika!^$9>?)7uiRYB`!1&iVbo3!/Y=U#F+1ZCqC&VbD8BeHPMNr9C/$P4iTI%b!NaY[Et:pbrh?o[,QXYmlT.RP%A48FBGTqoZSEbaYg+UbWn".'t61iLOs4Lj;4a<&fVQ_cPbki5LlAJ._q[FE:\B&b)JF.%@HbC%e?^DgDKC41a;4Wm7kWlS^\(!ne)PgubknO*bkL;JG96D>&*[lUf=j.ko(gueJ*4LL,Mr=nO3Rjr:(CT!'A^DK<IZ/-<Zq^l]4Lkq%aW1,7!qPm2EeqFK3;"j]eH&F%4_+fk0eU<:1\(98;!r1E9(kfap=;680*GX`P.&1AJ&s_pp9Yu.Ys7JFp,O!A5Bar@Xjr*7j]q5!%e;rt=dMHQZ+gQkgHA_,[K">mfPm%=4D"Z7f]PpQFC2JqD3`d?+rBU2;*)H-%DQ%?U;)Smn`E$`P\,hSDf37$a.ae;&'f7*^"u;%&%4*Golb9j6Fjq7!?=5i-?7L%t@BS,#^/'M4gC8fqq,qt-Z%ICDlDLa/>eXC<m:/\V'ne`2\2([AAatDQ9CQ:*ai][cY(E+NnS)WBJ%"`>Sn\(KH'W/^nmiSp0e"DVAje7"YKTkDh<c`obX9*g1FW1iq?SNka'oZp5h(P5I/hK\Br:U+;BEpMgJOs"QJ:-X%@TiUgqLF!o7%<n=X`kreRo(m/"t=X[dZ)Rrtm`diUJ%E[l@^iU'3g!gs+1P"],`!k46%U`o6h>VfBp3ouF;eVoOOg@n]X2r$(UlQAR8sl&\A5L\T%+a=:X2-Hp^N?bhNPVBb(d\Uo00UPcgSX9E4H&HOXWTpg]lrLR,(E(>ch9'N@>Z!$j;B%?R,B2mA\p!<04&a_BH[3FRMrSqaO"Yme%_LLXj.ifpfkilX\T(^tFG;eg]^&,qnL0a8/"<'DS-[.Z-l":eD190*&7NPgU1RfBp3Y:)DB1j'@EXSrA6Oo+d%;_q)#kVa3dmdND%Xpr!CG8-d0Ik2U(+ERW([C*J[@sR@Hm%!t8F7bVL3N$m&CTN2\Sr]n+Ks$c))9%l(Oae&p;aa6X;o@Ol@4."QZd!Z,+IGo154=<U%PY*pjkc,45[3]D]0?I`7;.?o5q`0\fXk7ji$=+^NhAfY^l8RUsgInOp'iF-a((N\Y@'oceDI!MhIC7)5a&\&Be@\PCZLUsoh(#Y&%,JBBp:i+&;:QZrmVO[Qf=0`#N_C4h>3Jcr>7*^HHXZ&"!2b@6:)$nHp,Msl7T#04'l.6toEeVf+,CRHMeI$E_p<i)S3(1@02-EG"%,\uHbIjkW3:5;DDKrJq8c63[qh,Cgu>C#t!Zn?L#dq]V;PR=WFSHGqt*NQF+Y3_fQ[S-Lt7qXDOUP0.K%C]^kE/]S)rk+C4lU[u"%jnQMhdK!FRleF7PlKItX=.:n:OE>r'!L-FaWi#[k>c0[fPk=YG[>Ri-:$#?[!6(Zn2%K:#S#S`_S#'0VJC-!JcX[+aY#[V=f[V`t%6dYUuFgmAolTVn*B&;7J+5`f1^B#O2TQb>[i>OIF(%HE:eOO:&iQu-0=]?Zp2$XhlD7bh1(!G6/Nj;@n2J.T0P><9J3Zjs&M:*`n%e2C]r3G(mj7rp)S%/1G`2i<3U6PZ8Y%2R;U2UkPA'h"#kmhk="c+@,QAa(*!,Y&3J4FjiZStWj.]akS;[eAb&4.!Fsh5S49Z7%WO%B2C;`I4ArA.s>Dm53gqtMIL5;c8J!4=U/8tZJ"g:=mhc3e<O:5p>9;(O"WVNG+7.QnFCH@2eK_#(]&,2X%sdh&Hh=40H.WSTXn2/%RS!uQHE6Dhi?p6!ZI(TQo]r2OZWK8)hR@!"/72ShFR0H%fduB7T>B*7Ct!E@454aj7-rP!dW$,+H0-9&.BS'QmEQcrBmU`nl=:e+%bnIpf-biJ^2TSUi(SDb"bBOk#O%FN'89\nl>>IY`WakM":S4A-pK+!//H`fb=tH/;9&\8>2Ah"PpZ3hD6cKU);5*5=Ckk`_0Y=E0%2rTkGDu.7eNc`A=OYYrBkF2j\]CiU,=Y%9I(plPAmmQRR-j->?fOf$tg"Hu<[[f^BVG32$+e,[:I<ZbEV'U9>]B4F!)0RX`3aS:c%V9[Oukg)FGMCGju2E=Y$iJ,!OOK"c8m=l%f1c)Dt\QuAUc<eoOJQ!=,%8uN82Pp/6M8Mm998)iDHQ!5Zg)V;Q0l5c=+sE.1'g;cH%:Yo9P/`o0XELKtkp;],eMlX_?Ek9UjJ0+q;[5]*lGf;<-C0icWPY&T0bCG-=E+VZ=T\rl=;]LR\aT%i;]3@m3`m`8ZGa.e0n/@.g%Q;d3`V!rt+EJ4$h[!%f5Bc/q7bmmD!6Qiu>Fun,rHB:GUplo`"4?-H$8(@jt3rsQZPM=3]^Wh_kXuP:N=eZ'sX`bX5)lk.i\&Dl%%WT'3t)L".65%s'Sh4>N[a3Y?[%P%$eoacXrWaRC6;("(B&s%@Y6V?\cUeAs9+d7gT*f[c&*42dM>P-(&D=&/#^QJ8FH>@7LBQ@;M%D.hsqV:T-%4YU`cjOi*4SOkG;&8J:gKBTZP8Z027PKq088Ub=pXdZFTgY4Ur="ugI$t%2a?5YnE*m6*hU70DOT0#eRNouH]mF=-^%X;-)[8Slkc<6A8+WOt_o*7E+a\mY]U(XA+,$1,ROV\C*K7\U%Ch04,&]O$M'LoZ%F6WI*)!K/$EPPV[;,di,6J3sugUV]f<WTcD.%r=mOdfW4=1!pu8q.Cn!5SrgdXP0Ob:i5OZUEN6J_o#<BW6WRf98h??aCkZL*;RZ%%[d%D3C9or.Z86*g9GoC',k1)nZoSNDAj1Qc%=s(]$E);[UmI(n2Wr)V:8QIOt+A#<IS]E5tH%>PC,YLS-N4C0O`e?;)KC,>m6h#K??ejYLOGpQhOJVj.&BXWg/*-V[)jtJ\,H%cT%r#oHs_fmcLR.WY$C]0EUH=Rc[ju`%8\WcL)V7lsWWgRH\H8LjNI2]K#jDKOphV2+TC;<<87m=I@Y#UEjDU=s@"<R&PHm)4n->'0*%?:(>R9]6n8F#f8&SpGcmQ%LBAKP.Luboj;Gp[gP@\o?/:Sj;ja;&ei+7]\'K,t7,_qn"L//'%-I#>%.j%d#q,/:YQpfs`oigaS7V%WslUVD\h:J.Yo@mXPQ%_I4d)"'R>oQ`\lC+VL-qZ;lTt6=t'<WFI]+BeWr/;n/""&cKk1Cn.?Amm1qIG*uQkgXG3DXl=C9)$cf[-%9.@O6[D%W3.qST4XjRkmO/D19DQUP@HrF)hhp%X1$DV[e)K-\,_#:D=-"Pce%CcL8jNWJ%d0^YD5&tntCRsCn*4#'Z(+eBaA[&.H%cgb$0b'fjF7O@l70:UTEZY=h_f,VhZd:\I`>BbOE?^KW&:($hdO3SBOqjV6%l%\@^Xbi`0mSE@<lu%$<+74"'P=p^AF#tS"+9dd7%IPE;DGr&Ag((LcjAnC@6eoLc`8=;8"Qt[Eh9%>c4W*m_2&9iB_N_Ba$m:[KICq#YWG!d-cSL<fbe5hq>k%l'+@f*+n)u5#:Ks:+a%0+TkO@S4qifU9WtB0.UI&N&rXi>49UN?pHR(8cGmZW'5aUcP_2'rPB%/shbu9+PO'$0bt."#%Kp,C+GbX>m]X0)A`(SI?@,Hi8u]%*J$=1?O*LnN8*5cT$,a)88GLBn<?V,%:hP=h=oFN@Ae;#SE.A@US_hg!nq9L7qZW0<4h:rS)[P]3B^\`I77;/qpAp9_E,q[h=l>0%ODZjSOZ)^1G"4RIXiG);GdX+"I-rcm>A2pg&&2X"__>ZS;*BK4k0kOqr+c6HC\j(O7P<R]apjEC#&WM\[_-YTgHZbaD-KTT0i$MJ%2aqIp))EbuFt-+.fH%6.4=[`R\+91HMV+1bK0)u!X$S\fI"u'!jcYY$Vn"@*O.>TB#V/>hHq(TV4KgXZmShhWc("MeV5Hr)3?t_c%>NNn^'P8-=bo6Lhk$X>hSPDlk52nXq]8lVNitOP*P;p<k)&sf5dtDl+1/_!I7uG;`I^U`>8/WT'P/WT1US>Fpeg_mUXG"u0KAGL3%0D^L5qd(YQ:jP?p+']&EG,fKk^W`A8<<9]r-'#<V"PDf@m`&`C_MlGY0cL.3,T,m)%8mS<9+%KF[']&=a>PQb7CK9LRIGpocnt.N%P1l&1r^=hhE=V'TK\A]5F.&=O1)p:DE7ol7GF'LA'[G;=3$P4jmPW(!d_>F?>!cbS@2+7*/#^LuH[5ndF<LnA#Djg8n/4.C]9$/;%rg]hc+m<Qn/Ls2fgYXe:QS0iA8W(VC5LhO?T5f7Q[%)h:8leKD.^cR>$=iDh"h!]-&`bM(W=)FZO0AXRq+N8lGX4?FP?&5W)._i[%CcMP,4^33j<`oNm?tcn!N_A<7jiAN3h'b$V=)bG]O]PT[+K$f&_8nbW4_!Pr2M,%8<Tpod%QTSNiK$[8TOJ\I.-S\fp']O@N1X9k%eO37Z%uBGXMC?9(0'oAW+8"!kcN1RDFfPYe\R\/WIs?CPbFt!PTlQ6,Mdoho>M6Ec:g`*+$hi?mQ*"+#*RU,E5YFQI\-bT%&8dud%NCr1KX!$;>(-1-;>uEL`URab20(oJhNW&dDA4PU%Cj*c00N8)Wj-Zr]iW0cTnjeg2%j&*/9;;VM)okRt=-mRAFrt6Id8m+__<"!&%_Y1hkd9E#""hU,0]nRpE:TVkp-4jOP7+(tIZ6CZn8$dP"IWHMO'2WY@YR7,aAUDc,pI,@ub3&pXXnZ]"Cb2"\$Fb_Jq;L1h8WX15%giuW!+)+.JF4U5[_,Bs^35s(s-5kgj,h,hr&mas3@1rHsXZ;S?c8F:%dMfHNQY*OdVg5u*=u>IXrIf\]SR2I;\8,.IZqN$ccoWHJ%LrL6k$I(AR'9WVeF)L;[Jp"c,;#@d)cuk@5VEcc#b'nmGiqXIZI`3enYJ))AT7EeOg./a%'AlqB1c;8:34r@UC_JkNX>Q5=W2qQ5%rJ7>uRY+5YNXiL=W\h<udN='jEpg7X>6\F*I0]FBUioXJ(CON6a]D5c?3]f'"Y(<NFSBb3Y>+AZ<8K6t%QgH6<Zllhc[C!`)$#nF%#b]L%WEN!rCsn!@M5o-9!t5"JK;r*I5^V*#%S7WD1`A[52=G-NW$.Rka'@hWQ2TqtC\+Q&qe-6m\j*fhgB4b<b0$3mcNVi06(uuA%Fa?'LBet:U&."M%2Lj^#-6Bo.STs^%D@8+!36,:E@D!j%'@qo(6n=.CH4nnPS'kT2B7"a'$KODc*`KE"UOhcYhC9)%B,t+'0cdPs%B4=P/%;?pXGWKq7lr6b)C+&XiVAjY$WJtUeKk?*Ra;f*FD"uk\qAl@P\&K#.Zt/>*>0&Bfkeoa\]B7pt$F.k,W4on3\oKB5OJIO2%-Wi5i&`X7ciZ,n_IseU7Iq2d!;Kd'_:A+]<3#!?qHr&?M/HFuWg.[])Eeoh1ql$P/MO-juEqoqO;>')pn,RY6Y)7gTjLI^+"PG+:%q4)9)K,]Yq^l,E;jG!qk)Vd>UO\77i%!2>OhCBcPf4A>t,T5=D&]fI9LA>K#^Wd4H.-#.LkmMNI9Eb@"6(H3.-[<K4f?cD4./2J,%0V<mA#!r'8a>R5<M&s"E@KQD+#fR33-nP^4Sac2Qa'W$aJe]0laZ;,OkXm/23-],*J\%@K#t(83OXbnK9:GUG5\8;<-RuOHFKOKS%*-"6.K99(*KSL;1#<Y(3^-f<<8g$9l3>fh>+Y1o3;s"f+-r._^NQQK@?k1@\AnWR^7?HoaSaU(^7^A0l%,L%V;E"/T(@P-l^E`II%YEdfT3=^aIl!6Q6o!LE*gjtDa,%'PERT/6WHq_fMXX:1TlnL[dco<'QV[DcM2V$hQ4LUuBY->f%:i>0MXhjW@7%#b]4>QJ53e@@!%^;:j-Anjh;AR@;%$$1E3/-.YVOpN3dIi7cG+LFI;d#U>D>n2+`@n;eq,<3>lPku(f2'K`9-2:l.[8KcJ@0'a)pXnZ<?]0KS1RO5_%.eUt'+/%0[q\qOEhFK\**8;j(K`.A(K0l0K,mj3$_X[poTWjkiP@kB-8RUF%,^3C)d5+"C"b$HpULdiF@2]1ZR*r'TM3B`0f[,`?%Q8YT14^]mX[I#\**(''EZ;FOrG[nq2"B&_k@^kHf)laKs3;Yn"o#PViC4sE\dhA4KNKKbcPgJ=QWhD7t,d;2:AAG'mcAY'Sa;8gh%`idONeSnBdTeJnX&`>=NCJ9iU0#dUF;haN>-r)2ORO:8ZhGrJ6fub<7aBD2.'3%[8Tr].m![..ioJ02GLlpL[P-rKg.$mKS8]aN`%.K5]-X`(G_M=-?#Ech&YBcp!S:tf_kC=#56=iQ;/o"9k\Va2LNgt([9\@AQ6YHGN*\]"jT<!0KhlIlk&EV_FQ?(Gb1=.1;rCBTSK%W&NG<Wt0nj]bP$/Q3qIO;au@>G'^H@4#]L=X4.-t8:3GPTEstIP?=@t,CT0tOZlD;'5B8'!k[UNm3GHjoW58J)(rq#QdrH:)c>11%I^H?@bO"%)g'";rc&r7=]kq,TF$43H9)#M@Tb5u8oD.N3]3!c-@2RL`<VRjo\uA'[KcsiR)l'QJ4iY5Ca\LQom1#-T-WAR-n2de`%S8hSi0iEe\c<NC$NkHO^GA&EqP%i-HDE<@:'R;Q.]OHeDL0&3&m(cZ*D2?+%0/c\T$5%X&K8IE>W,'`ULs%P.RuXgU23tH4@K:32%1Jto453m#$,iMcH5pXC'mFKRo?Qc"VabnZn"(V=S(<,Vu&dWfhN+/j+%W,!C+rErs&s.B=jWlTV!gQ1!+d)F-\)PQaI,tuHP?Q)j%h;J*XqI#i\Z*\Em$P72/7T;:"/X_@<QX#AH@$W%rPD_%hT=G]p$XIM,2W+mM*p&?NL/[E`;%lclRs7u0-sJ8ECdT]<4?"s).r9c.%lj4i7Wu7C6cUal^_kf2XIlh*d(,EY99Y6qH]t(b_rb-inQ3,;MokBXB",bk!@jPBAc.XQr4cN1k.EChQ-<shR>u^i9*WEP_FcY`L%>\(C0\kH)&Wk&=n``M!%9ICctp/uT$)]^st1:3A;Q_Qst/"&b!T0KuN:1)\\Sd*B5+,B@VE4Y]Vhu.@qM,@)W[UkV;hfh:4bi.E+%<qnV'EkQ_AS$HFgVX?P=a`<ni'b*n%dJ_rd*+;f0fAFSo1Yih!;AK&D6<3F5>P42`A-$bHK(`9oVLf\/lH;oH6NVMIT+VM&qsNY#%AFTqljV%>/ZgMJ`1;I=r8L%P5qt$)^*q:g2'..i].Hd1k94n(T]XbZFX9&W;jOtR0);`Vk[u5$V2!u5^aHhk<B,d,';e5(U>>KsY%c;W6eh`dR&Dq3#.O.^^]=b"S3d=t87fThiC#rocu`MfJi:*G3O5\bKJL80#RY?/01^6NWW2HSA&h^?864W1;6qR`Y,FX%Ibh/[tm%AVhrTlo[u=dAL^9`TkdiS3@B"4=>:E$mQQba^Sr.:7qX)9IEltm5^[-Uo:l7$aV@f]jAd@BaVsKk-CN>DJB*aqpB/nU9W>WT\K9'%>H*([H>&n(?,qpL<!R!Z_bN=+6Ci&pRht3sBT`7WdoT;'SjAK/nR+m(%j$C'N\jsOU]T`K%)bd922$NP3gL"k(o4C$qpJ$<SCkR!%4Vh8t>t@KYW5VG)lgj.>A<^TO>F%d%pJmPZTLu.OML'VUhgWQD_Xj4j`o%4^0CW8E+$EeCWOaVN"8B.>TZUaS7Q7GQD@0SgU:b<>%LLO$![^Eor4V-r?K9c5,qr#eI/=Z8W+;/h/eL-e7Mi"7eaO4R+:Rri5as.Ptc0uE,oOJsc'0fALK<c#W*mc[mMHWoo"PDQ[&akWj%W"=oZ5kpa+?[H*sEncDY(AA-^[GBK89$3#%E<Sk2l&Vu.LD=1sEnd[.-CR]R(];5q%4k2'j]cdR6]11tm^Ys"J>XP&rU&5I+?L?a%<4iMD8';QWht.+g[_ocBE-u^ppa:iK"j!(d8#&^U%>TTIOYnaY[D_jbI-V)X`fi##TpDK!+(!.9?pPCQ'WlYL7uY\ENCiNW(86hH%ee=f7_m@*hK#GahEST$_*$`2c>';(!0f,T[)a2LpQpZL(&YDWg,>5FJ9#HO,rHd>VBIBK9Zc2;mUuLd("B_($8&7TbpX_%C6(d-a%YF@n089s)T:\)t76iJd"iQV,.SX(5bJu."=AI4b(ILZ:*1[pu*plD]f!G71cnE`jjr).42?h>Gn"%UV*&NK'\2tMV]GR#JBqh8u6%'1-QHJ*j)rVXT!W9Wm:9?V<lHkD)57#=#uXIF[oojA.r6d!oQ,_6(5>jo79@_5Ki6N8;5Lf&3qC1p[apgT\uW?@XT"*H=GA#1;Fa%?CoYmC]K/o<S&\q?,HhV`@A29+G.H*?#.`R\tI<-94a6/T]d*;F9U<8N^O:EOfb,oG.+_?!?oSUI4KVK6%kN0?AYgBG7Xk&-+o8T%lH8etCO<lY^No+9gsBEBh4AH&rph!dZ6&D`\)LF4_O6Z?np;N`,Y_q&P>;@eR9g`(]'3Eb1Ir\TG5-6ZStZKN[m^mLL(r0X58C^J%I;=B=M<e8Q,8$f;U5<.e)_5uT\eTokr4Qm'KWX$;#TOJ^"!U4;qF+4P'Rjf$A=+c*e4S]2PFkY/,j,QZ^,cVG.I8+%-K^9C_QVb)%jK3CV(&7MVcJ&TMkJdYss3:EER\n')n$r>ujO;;UN<L<;Ro,$]P)>U$#Q7ofeJQ=rLRL/C&Kji=YN?8I^<<RF]mLld?G4j=M!"+C%\#*C8AUj]]:Cl"nbWT0`CGtHU%m9JF@G;8"fkQ[%_DSq?S\Zm--Uj.<jG949j8f(lAqPbLDhK&9dJiES$"prD4K0=YCR/Yn?m0sg%i7FqWqTM\ESg;geE".@/bdZS*9>.@n70(\,Z+VPrJ0E:7\E=VmGEJV`.bSIk)Vql?puW?,>RKNbq,E1p+&I5:;bmS4;tG^>OMKo#%]WTCLTatiI'6.o^g"1?':Z]&lEsodc?[*S1\:0?n'b-*IkJ!4=VJ6/s<P!s%qlKn;]].LRL#`X5W@]\Ra+W?mb0Kkbrmj8>>c77N%0M]ka%!>p91c<'bqPeN*?TjZKN:5^6g\91bDqIt-d;D,(DXb^cs89:</NWV.L.r-2>f?S?DDfK_\,1lG7;l5Q+3D7q@/YJNQCm2a%ftE.Vo"?XRMOe,aUjX\>YYZDokq>R[]tP#foKU$`Q`e)e?FkMkHKfLclC3"<Rm0,s?K@%-q>W+>8BIoFEo8!$eXojFn,:3YJ+<("%XPsHkIX!pkpNCN>E]r&5*c*HI2PJ#_kl#,dG"Xp-oo4=aj/m7/aQkm(UuUQ+WXX0bfl/$LbjW%0LYFqA@nR5a"T-bc2'WKXbUQ_V%7:TPtEjB^2L:T8ePJscWB"M5(HlSjg-1N3TK=;,Y[?7'O;^Fh3$/"GCkp]"'L%%Dld6=@V+UeZ:D>%TEn/WZa3i6sW2<_3EJ,%h`%m3CLi*qFR?+[>Upj`-@9V`c-hQ]G3sq)`0ar$.DS#8eeF\:TI\eDG8`3hh*l-WB4[g<CGQQ-gXL4o"N+_c30Rh1kEf-l7#-&4Ql.%2<MUUTG+d9Com1K'ZC/iJSd/A(FL^-lnghY*leo*(6j+GDMHAdoa;CMZVTOghA!IaoM/rs_-KaIh@[M7PN%.,.96]J7Q9;d'+QPF%Fe^E>%PU7CU8+`JK2/bDb7?$X`El>]9/9<FZ(`UB7WA)jl[&S5;`D!D/=40bTh(7r86c9G?t1G)JeH8%;4Eh=d1Dbm'J)m_h313Z%>H;P/AOC%VN1nl0C\fh+#-($Fk8F+'+!c['&u!gl]RUR"S)t$^BM8fG<q_U:+%4<;AmTNWfE1L&JKB5gUg/Bf;Jpe_1.leb;Uijr%!'8)[JL`M+2Y&,!l.R,&<$Z*:)iN&(3e\EO(4pC:1Bo\W;I*T7Mp/&<M?*e:#Psn8l@IRnm+;T_ou."IJH2#L$rP<efM4^ZfRmr/%<a&,@/qaL%6Zdb.O\p"`/=CD84>,$Xf4kP<F&p/dY`Ia;;@R4I(gu'."f&p&I6#BWEJGr5g29=2C%cl(:;M%h^GN4V7\Fa'rC\Gi%MRIfAI<_]2%L7V2,MdQ</hp>BC8#j:&5K\#JDu-H[cdSI/`':fk=>.AVl&>M/I/ro0'rb]QO`S2i?3XLnBd;8af=t!DV+bd]B,K^%Lq%m+`QLU7_`WLGW2^7,,/UYMpdZ*#!RD\fkU=E'PTQ5]4W3,6PqWE0#h"Qcp^bks49p_MIF*dgT"\f`jlkP+g@<lCIXC]M(;;jS%YBr\*KCld$pmo(P0O*g]$*se6_2SmuH,IMB<G4M"*C5&1W/8b,_@T3aC+k^tKP5.(TFWm/S>%'*mShV,(.-Ec:,Y>bU%%go6;u6E%BO*8!../74*J>RG6GRh+9`XoVF1[=H(9p,jMI)2b[680uKjLUN)?s1/=D(A$B'dZ(2qR(P[qMN?-U:"`R0W__H<iJjage$"'N]Be%?)$YVCb<4Hd^BE,E\6QM$\'OO)8L35$23ol\h"#thW`?)gMKP[GFU=lWj]n2[KmmA5S@pRrpV,>Me@'Xqs,UkdeDlVMgPRAk1@8K%M@B\IGIeGi;o9[qS^j&<Y+E)(TMcrO`8du$<I$u2>tcSB?.E:h<*093eZ_ao/gg\d15b8%O`tQU;%fQT,XVs%B(?Z9QHfO#Gu\g[%k3:?9^J"ZbR_q]3kricR\89itlb5hIJtch9HpGaR(anS'l_^jD7+/j_g63gl&.[e,1#gXiV!ac%#,EiG+Yu]DUT0A,0XYAP6Ji,0%)&.dmJdY+ZFJnaFW(Ajt"UfC2AAG9mk1n(2bhf:'J+jR_S%2k.qjuE5Qi29sn:__!0NYk4ZY$=6%QHSsR[h^r#MEsE[@Rq<pO;+E%;r%mZ9hq#ghKI$0B=h`\1+qJ;BB`Hc]$dWhf2Q5@MgpYD%of!l!=(KH(3iIZGn;c5>*&p.ihQmG`.#>n9:'R--<`l]DOIs\L'Mr)%m$%s8F!ZPDA-!MXc/4B=/ficNC@m]A;c)'Jd;EA+^%snbVX&d[d<hG+Va0'!(5]+-a330-TtQ6=2`S7en5`2b(!L"LX?t4G,'^nV%aEmp2<FOM?`pUtbY&q.bNX+WPX]99`Q61LR0Im]0OdaZr07(QqA*:N,g<2-4SqSuH]!mo43n@$[bBef/$`%RZMf<<6*P81g&7tuI%1U_,@(u(d^B4C/L\.pl>NLmK&?L!MmC=]KgBGqWT/H8hW*t,uoE\f>%9:Ws@ri@k77OZ*/r;G/L>/>&%01_Qq=BT!e'a-6Y+#70(%ESsfjjam\d<"Ps*o")[a?C9']>OhLmjXW?B+H0dj>VHLWf^oTWEtcksLh0]h67I1-lIZ[V.DfY8)Mi<_ckKkqm+p:16R1W&3q!0:%lY3g]m,=L%%['(7E`<_L"tJ@>M/V)K+i5rBS6)FHKVV]*M-_N#oGaIV]1rS""7f2d/-h_LTsKe^Y])+cZa'*.%5.tK\`]<sM#o;B%EpFgtEZjf!at3b/-(#QPriotZ6._rZeblZdY_,([\U'8p64&oG?<1]:&;Jtc98(LIB;um_eeMrO3#Fe;!4MpiT^CKmD_2fll#p9@%('\7Q7SSj[d6(@VDoO-sT@fQXh8ah2brG)B:&>'T8F!HU?8\N](lYg(fVPQ_,$!b]H]q3jI-<i/aX:\KlHGOJfngdHh+#Zf$4\9m%2lX@OBusT4THM,`0Tcm3eX'ItLhE"3:]iY2mj*kZc<<Z&(.EMt*Or6S:?0=oJ9Z,KXT=e>7%l$GAAOuQ7T3fWfTM]BUG,+K!sI^H%*W2[e3'S-*btsq5DS697N4$U_P`&%REJf%p\qthN![eZggUaU*96&n%$VJ.5M#/WAd#WmY(5Z^7!H>6uW:Lk[,pWd;]kI3OCZ'0)%j$G9aAelk'ii1qIiD4B@5j_g=$i=6i7bPCBB:e':3hke@9<:YmHjLe%5\33oThqM;l[W8h0p^"5l6lP%"$oj[LgS(i=VAD)k!erN%$\`$`7o\lJMnMKXkJko]%J1kkWoLn1PnJA?3pU4)S%c:F^LNn3V@dhC"g`>@hH=T76D(r;pn^$>YG)4L+W>@l'<N-4El6`D+:;+@%(rOM(;2S+C[5.t[A=Gd,/.od<[<U,&VF`Q)^nB[T`(`@r/DjPu",A0)ns0MRlO,?90"!tUVf?a>GD-_Cad.7HG3QNgdtrF6X4R[4%Y__UcjFkVZbAHW-.i,Csm&^Q'VP3<("A[[YO/GX([-2)\>;%jX/'3XHFe6R_;unc=<g#J^l[-Dp,@*Idn;t%S=!*rV>KR#tD`e_8%3X#Q1FQr:B`+RCWr`4Fa<t$)1Cu%C).PrWXTm2[c_(*hT)bAh0fpX/E@G%+sD]%sD-Ns-^!4Be:EJ[_[VZWl@/\Wi&)+'J^'a2$p%%R"rFIRRn(Am(Brp9*>PILj8X-`$sak8E?icjP%YWsI\8Ts)$I%"H/U.g$CMECqBgp_[CHl4*n/.,S[EIkei[M:tksV\:o!23ul4%PQAkQXe6VaW#tF8JI(hV@h'tK6f'(?gi\'fMIEkAd4iCUYhuEZX5<eFX,].^E+iiK?Epj=\!in)0H&t=SLX!Y9@`7"`d$(t?ADRu%.+@h6V4P?-MnfoTVV)`t=]o*HN>&OtX^U"V3\e[%V;:!q6MSN.;nc*TpV\Iq25;7d!JmY(OFI^X>T:^JLpfnp(J`'jcZ/]p6"Ym;%=k%\WR2Le&,XhUa\m)h4O][U+Z@h@!,X^aI9q!n2_D@#EC7V=oc_)0PaoP?@Oa/.u#7oPs6uF`ifsGPjekgWQa?;epKCF's9E$!r%qaa:W)&a?oD;\93.^rfl6>SH^CUtXU7`MXY;<BcrVtm#bCK?lqNuliBMMXTJQ&A*qLI\&_NZYhIc0:OJCZ33m7NL4<2No*P!I,VD%9/;aI<8mRD?8mD]INm)'EcV(_NVO:Y3aZcWq%]VN*ZHl#O6Q*lh\'TH\4G7a@sGUf4K!1Hc)Daa_)aIU3c5bd4Z-LJJm\gRUk3[Q%<9n)q$$6^O)H+-YWQl]9R&[=lP6E!2;=E4:aJplKWiChPZc(!fX6O4gj^Mj)LoU#^BG+NE[mH!dkYb`e!@1V66'-=Ej,ppd,Rh!f%+]hNe>qn=M=NdMDKnI@n&5mVeraPt`/`D7H8I#WUs'S.mIadk?-J1n)Vte_eH1mk15n+3s4@^pK7$+;rK\(@I7=_Unb^Q-bf0tuT%+lr^un2HCN8`*EZB8VY4Qp!8H23T:pI+QWXk&h_&7%jr01@F=K;.`,DFp<MY'?u5K]]7g@n(6%GIfA&FUI%rAqkVV`'_[nXUGIOZ%'Y;bDL*]/qW)hFYi^E\5<?\O`b:fXK!/UQ-]=m#BA,mbMp<efrYuR!ToBo.B<s29Ui/%1p4#e_0D##jF&.n^b35#@@/kAb'riM/H%H\0dAKShIs+q"Pd]9TXJe6E2N>`+#I_$tt\Q(9/(\rM%>ETH9>6f2EhW*5T3k)VnU1p<G9VEWOgK^(NPh]p&K8GGrWFsbclPe4AM%s-hsM-_iS1,Lp@Pk%?7]DXb<mncRrtTmfVY;j]#fMIqfgE^8j*U82OI?a\G]M,B=sc]#_s'dbVWS]g)0>ph9=_WTh"XBQf!ou-1!%;=\d(od`*Q`;W>[+I/7Llr#X@Z<'!h"AB/X@uX.r@@QGaWA+B@?0<fVA5=P5:bni&9Ko,DW;o=D1K-h/Bp,q=2"',"H%-S]M+Z:j%ijY^eHY+abD1&-rRMinAMrEkl1ZOtMR1A<u7lN\5Z),gZN#W@-%XKT!f8=gV\;9QE]j>T(I'BdQ-,i[+s8)"FIJCp6r2]Y&J,,#;%qs*@Zq;taCrTT*0r8bWkr9qDrlX0VgIt.@?Y<Mm_5Q(H2hgG@t07JJPQ>ccKop:_hs/U);i?*RFX)C3$_uKSps+TOF,qo;?:]Bq"%roXgl%r!EblM~>%AI9_PrivateDataEnd